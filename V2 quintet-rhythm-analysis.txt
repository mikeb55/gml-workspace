=== FILE STRUCTURE === 
 
apply_intervals.js
batch-operations-universal.js
complete_profiles.js
fix.js
gml-shared-memory.js
profile_loader.js
rapid_composer_memory.js
rhythm_patterns.js
structure_generator.js
ui-improvements-universal.js
bulletproof_integrated.html
index-enhanced.html
index.html
quintet-enhanced.html
quintet_composer_v13_PRODUCTION.html
quintet_composer_v14_WORKING_BASE.html
quintet_composer_v16_HARMONIZED.html
quintet_composer_v17_TRIAD.html
quintet_composer_v18_COMPLETE.html
quintet_composer_v20_CORRECT_RANGES.html
quintet_composer_v21_ABSOLUTE_FIX.html
quintet_composer_v22_FULL_FEATURES.html
quintet_composer_v23_FIXED.html
quintet_composer_v26_WORKING_BASE.html
quintet_composer_v28_REALITY_FIX.html
quintet_composer_v29_GUITAR_ENHANCED.html
quintet_composer_v31_BULLETPROOF_FAILSAFE.html
quintet_composer_v32_COMPOSER_PROFILES.html
quintet_composer_v40_WORKING.html
quintet_composer_v41_AUTHENTIC_MIDI.html
quintet_composer_v42_1_RANGE_FIX.html
quintet_composer_v42_TRIADGEN.html
quintet_composer_v56_FINAL.html
quintet_composer_v57_BULLETPROOF.html
quintet_composer_v57_MULTIPLE_STOPS.html
quintet_composer_v57_SIBELIUS_FIX.html
quintet_composer_v58_FAILSAFE.html
quintet_composer_v59_BULLETPROOF.html
quintet_composer_v59_BULLETPROOF_RESTORED.html
quintet_composer_v60_ACTUALLY_WORKING.html
quintet_composer_v60_COMPOSER_PROFILES.html
quintet_composer_v61_OCTAVE_FIX.html
quintet_composer_v61_SIBELIUS_BULLETPROOF.html
quintet_composer_v63_REAL_FIXES.html
quintet_composer_v64_GUITAR_FIXED.html
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html
quintet_composer_v7_final.html
quintet_v56_test.html
quintet_v62_real_music.html
quintet_v63.html
quintet_v64.html
 
=== RHYTHM PATTERNS === 
 
complete_profiles.js:72:        rhythms: window.extractRhythmPatterns ? window.extractRhythmPatterns(profile) : [1,1,1,1],
rhythm_patterns.js:1:// Extract and apply rhythm patterns from MIDI
rhythm_patterns.js:2:window.extractRhythmPatterns = function(profile) {
rhythm_patterns.js:6:    const rhythms = [];
rhythm_patterns.js:9:        rhythms.push(delta);
rhythm_patterns.js:11:    return rhythms;
rhythm_patterns.js:15:window.applyRhythm = function(notes, profile) {
rhythm_patterns.js:16:    const rhythms = extractRhythmPatterns(profile);
rhythm_patterns.js:19:        duration: rhythms[i % rhythms.length]
structure_generator.js:113:            full: { violin1: 'lead', violin2: 'counter', viola: 'fill', cello: 'rhythm', bass: 'foundation' },
bulletproof_integrated.html:216:    <!-- <script src="rhythm_patterns.js"></script> -->
index-enhanced.html:52:<script src="rhythm_patterns.js"></script>
quintet-enhanced.html:52:<script src="rhythm_patterns.js"></script>
quintet_composer_v13_PRODUCTION.html:223:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v14_WORKING_BASE.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v14_WORKING_BASE.html:168:                    <option value="complex">Complex (Mixed rhythms)</option>
quintet_composer_v14_WORKING_BASE.html:292:                        // Generate rhythm pattern
quintet_composer_v14_WORKING_BASE.html:304:                            // Complex rhythm - different pattern for each instrument to avoid unison
quintet_composer_v18_COMPLETE.html:258:                <label for="rhythmPattern">Rhythm Pattern</label>
quintet_composer_v18_COMPLETE.html:259:                <select id="rhythmPattern">
quintet_composer_v18_COMPLETE.html:261:                    <option value="mixed" selected>Mixed (varied rhythms)</option>
quintet_composer_v18_COMPLETE.html:366:    // Rhythm patterns for variety
quintet_composer_v18_COMPLETE.html:367:    const RHYTHM_PATTERNS = {
quintet_composer_v18_COMPLETE.html:379:        const rhythmPattern = document.getElementById('rhythmPattern').value;
quintet_composer_v18_COMPLETE.html:391:            rhythmPattern: rhythmPattern,
quintet_composer_v18_COMPLETE.html:422:        const pattern = RHYTHM_PATTERNS[compositionData.rhythmPattern];
quintet_composer_v18_COMPLETE.html:438:                    const rhythm = pattern[Math.floor(Math.random() * pattern.length)];
quintet_composer_v18_COMPLETE.html:461:                            duration: rhythm,
quintet_composer_v18_COMPLETE.html:469:                            duration: rhythm,
quintet_composer_v18_COMPLETE.html:475:                    beatCount += rhythm;
quintet_composer_v18_COMPLETE.html:793:    console.log('Features: Alto clef, all keys, mixed rhythms, working stops');
quintet_composer_v20_CORRECT_RANGES.html:226:                <label for="rhythmPattern">Rhythm Pattern</label>
quintet_composer_v20_CORRECT_RANGES.html:227:                <select id="rhythmPattern">
quintet_composer_v20_CORRECT_RANGES.html:231:                    <option value="mixed">Mixed Rhythms</option>
quintet_composer_v20_CORRECT_RANGES.html:347:    // RHYTHM PATTERNS
quintet_composer_v20_CORRECT_RANGES.html:348:    const RHYTHM_PATTERNS = {
quintet_composer_v20_CORRECT_RANGES.html:405:                rhythmPattern: document.getElementById('rhythmPattern').value,
quintet_composer_v20_CORRECT_RANGES.html:443:            const pattern = RHYTHM_PATTERNS[composition.config.rhythmPattern];
quintet_composer_v21_ABSOLUTE_FIX.html:220:                <label for="rhythmPattern">Rhythm Pattern</label>
quintet_composer_v21_ABSOLUTE_FIX.html:221:                <select id="rhythmPattern">
quintet_composer_v21_ABSOLUTE_FIX.html:225:                    <option value="mixed">Mixed Rhythms</option>
quintet_composer_v21_ABSOLUTE_FIX.html:331:    // RHYTHM PATTERNS
quintet_composer_v21_ABSOLUTE_FIX.html:332:    const RHYTHM_PATTERNS = {
quintet_composer_v21_ABSOLUTE_FIX.html:368:            rhythmPattern: document.getElementById('rhythmPattern').value,
quintet_composer_v21_ABSOLUTE_FIX.html:399:                const pattern = RHYTHM_PATTERNS[config.rhythmPattern];
quintet_composer_v21_ABSOLUTE_FIX.html:669:    console.log('All features restored: keys, rhythms, stops');
quintet_composer_v22_FULL_FEATURES.html:220:                <label for="rhythmPattern">Rhythm Pattern</label>
quintet_composer_v22_FULL_FEATURES.html:221:                <select id="rhythmPattern">
quintet_composer_v22_FULL_FEATURES.html:225:                    <option value="mixed">Mixed Rhythms</option>
quintet_composer_v22_FULL_FEATURES.html:331:    // RHYTHM PATTERNS
quintet_composer_v22_FULL_FEATURES.html:332:    const RHYTHM_PATTERNS = {
quintet_composer_v22_FULL_FEATURES.html:368:            rhythmPattern: document.getElementById('rhythmPattern').value,
quintet_composer_v22_FULL_FEATURES.html:399:                const pattern = RHYTHM_PATTERNS[config.rhythmPattern];
quintet_composer_v22_FULL_FEATURES.html:669:    console.log('All features restored: keys, rhythms, stops');
quintet_composer_v23_FIXED.html:283:                <input type="checkbox" id="enableMixedRhythms" checked>
quintet_composer_v23_FIXED.html:284:                <label for="enableMixedRhythms">Enable Mixed Rhythms</label>
quintet_composer_v23_FIXED.html:392:        // Generate measure with proper rhythm
quintet_composer_v23_FIXED.html:441:                if (options.enableMixedRhythms && Math.random() > 0.5) {
quintet_composer_v23_FIXED.html:442:                    // Mixed rhythms
quintet_composer_v23_FIXED.html:443:                    const rhythmOptions = [];
quintet_composer_v23_FIXED.html:444:                    if (remainingDuration >= DURATIONS.half) rhythmOptions.push(DURATIONS.half);
quintet_composer_v23_FIXED.html:445:                    if (remainingDuration >= DURATIONS.quarter) rhythmOptions.push(DURATIONS.quarter);
quintet_composer_v23_FIXED.html:446:                    if (remainingDuration >= DURATIONS.eighth) rhythmOptions.push(DURATIONS.eighth);
quintet_composer_v23_FIXED.html:447:                    if (remainingDuration >= DURATIONS.sixteenth) rhythmOptions.push(DURATIONS.sixteenth);
quintet_composer_v23_FIXED.html:449:                    noteDuration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)] || DURATIONS.quarter;
quintet_composer_v23_FIXED.html:501:                enableMixedRhythms: document.getElementById('enableMixedRhythms').checked,
quintet_composer_v26_WORKING_BASE.html:238:                    <input type="checkbox" id="mixedRhythms"> Mixed Rhythms
quintet_composer_v26_WORKING_BASE.html:395:            const mixedRhythms = document.getElementById('mixedRhythms').checked;
quintet_composer_v26_WORKING_BASE.html:433:                    // Choose rhythm - actually use mixed rhythms when enabled!
quintet_composer_v26_WORKING_BASE.html:436:                    if (mixedRhythms) {
quintet_composer_v26_WORKING_BASE.html:437:                        // Mixed rhythm mode - use variety
quintet_composer_v26_WORKING_BASE.html:438:                        const rhythmChoice = Math.random();
quintet_composer_v26_WORKING_BASE.html:439:                        if (rhythmChoice < 0.15 && remainingDuration >= DURATIONS.whole) {
quintet_composer_v26_WORKING_BASE.html:442:                        } else if (rhythmChoice < 0.35 && remainingDuration >= DURATIONS.half) {
quintet_composer_v26_WORKING_BASE.html:445:                        } else if (rhythmChoice < 0.70 && remainingDuration >= DURATIONS.quarter) {
quintet_composer_v28_REALITY_FIX.html:504:                // More varied rhythm
quintet_composer_v28_REALITY_FIX.html:505:                const rhythms = [
quintet_composer_v28_REALITY_FIX.html:512:                rhythms.forEach((r, i) => {
quintet_composer_v29_GUITAR_ENHANCED.html:278:                rhythm: 'eighth'
quintet_composer_v29_GUITAR_ENHANCED.html:282:                rhythm: 'eighth'
quintet_composer_v29_GUITAR_ENHANCED.html:286:                rhythm: 'eighth'
quintet_composer_v29_GUITAR_ENHANCED.html:290:                rhythm: 'sixteenth'
quintet_composer_v29_GUITAR_ENHANCED.html:294:                rhythm: 'quarter'
quintet_composer_v29_GUITAR_ENHANCED.html:298:                rhythm: 'eighth'
quintet_composer_v29_GUITAR_ENHANCED.html:373:                const duration = DURATIONS[pattern.rhythm];
quintet_composer_v29_GUITAR_ENHANCED.html:374:                const noteType = pattern.rhythm;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:237:            <label><input type="checkbox" id="mixedRhythms"> Mixed Rhythms</label>
quintet_composer_v32_COMPOSER_PROFILES.html:221:                <strong>Pop/Rock Style:</strong> I-V-vi-IV progression, steady rhythms, guitar strumming, melody-focused
quintet_composer_v32_COMPOSER_PROFILES.html:296:                rhythmPattern: 'constant_eighth',
quintet_composer_v32_COMPOSER_PROFILES.html:308:                rhythmPattern: 'alberti',
quintet_composer_v32_COMPOSER_PROFILES.html:320:                rhythmPattern: 'dramatic',
quintet_composer_v32_COMPOSER_PROFILES.html:326:                description: 'Dramatic dynamics with strong rhythmic motifs'
quintet_composer_v32_COMPOSER_PROFILES.html:332:                rhythmPattern: 'flowing',
quintet_composer_v32_COMPOSER_PROFILES.html:344:                rhythmPattern: 'repetitive',
quintet_composer_v32_COMPOSER_PROFILES.html:356:                rhythmPattern: 'steady',
quintet_composer_v32_COMPOSER_PROFILES.html:362:                description: 'I-V-vi-IV progression with steady rhythm'
quintet_composer_v32_COMPOSER_PROFILES.html:368:                rhythmPattern: 'swing',
quintet_composer_v32_COMPOSER_PROFILES.html:378:        // Rhythm patterns for each style
quintet_composer_v32_COMPOSER_PROFILES.html:379:        const RHYTHM_PATTERNS = {
quintet_composer_v32_COMPOSER_PROFILES.html:469:            const rhythms = RHYTHM_PATTERNS[profile.rhythmPattern];
quintet_composer_v32_COMPOSER_PROFILES.html:545:                            duration: rhythms[i % rhythms.length] 
quintet_composer_v32_COMPOSER_PROFILES.html:572:                let patternLength = rhythms.reduce((a, b) => a + b, 0);
quintet_composer_v32_COMPOSER_PROFILES.html:581:                    const duration = rhythms[noteIndex % rhythms.length];
quintet_composer_v32_COMPOSER_PROFILES.html:880:                  `Rhythm: ${profile.rhythmPattern}\n` +
quintet_composer_v40_WORKING.html:396:                // Beethoven-style: dramatic rhythms
quintet_composer_v41_AUTHENTIC_MIDI.html:234:                Each composer now features authentic harmonic progressions, characteristic rhythms, 
quintet_composer_v41_AUTHENTIC_MIDI.html:253:                    rhythm: 'constant_motion',
quintet_composer_v41_AUTHENTIC_MIDI.html:265:                    rhythm: 'alberti',
quintet_composer_v41_AUTHENTIC_MIDI.html:277:                    rhythm: 'sforzando',
quintet_composer_v41_AUTHENTIC_MIDI.html:289:                    rhythm: 'flowing',
quintet_composer_v41_AUTHENTIC_MIDI.html:302:                    rhythm: 'motoristic',
quintet_composer_v41_AUTHENTIC_MIDI.html:314:                    rhythm: 'swing',
quintet_composer_v41_AUTHENTIC_MIDI.html:326:                    rhythm: 'backbeat',
quintet_composer_v41_AUTHENTIC_MIDI.html:432:Rhythm: ${selectedComposer.characteristics.rhythm}
quintet_composer_v41_AUTHENTIC_MIDI.html:529:                    // Driving rhythm
quintet_composer_v41_AUTHENTIC_MIDI.html:578:                    // Comping rhythm
quintet_composer_v42_1_RANGE_FIX.html:276:                    rhythm: 'constant_motion',
quintet_composer_v42_1_RANGE_FIX.html:294:                    rhythm: 'alberti',
quintet_composer_v42_1_RANGE_FIX.html:312:                    rhythm: 'sforzando',
quintet_composer_v42_1_RANGE_FIX.html:330:                    rhythm: 'flowing',
quintet_composer_v42_1_RANGE_FIX.html:348:                    rhythm: 'motoristic',
quintet_composer_v42_1_RANGE_FIX.html:366:                    rhythm: 'swing',
quintet_composer_v42_1_RANGE_FIX.html:384:                    rhythm: 'backbeat',
quintet_composer_v42_1_RANGE_FIX.html:650:                        const measureNotes = generateHarmonyPart(inst, chord, selectedComposer.characteristics.rhythm);
quintet_composer_v42_1_RANGE_FIX.html:659:        function generateHarmonyPart(instrument, chord, rhythmStyle) {
quintet_composer_v42_1_RANGE_FIX.html:668:                if (rhythmStyle === 'alberti') {
quintet_composer_v42_1_RANGE_FIX.html:675:                } else if (rhythmStyle === 'constant_motion') {
quintet_composer_v42_TRIADGEN.html:258:                    rhythm: 'constant_motion',
quintet_composer_v42_TRIADGEN.html:276:                    rhythm: 'alberti',
quintet_composer_v42_TRIADGEN.html:294:                    rhythm: 'sforzando',
quintet_composer_v42_TRIADGEN.html:312:                    rhythm: 'flowing',
quintet_composer_v42_TRIADGEN.html:330:                    rhythm: 'motoristic',
quintet_composer_v42_TRIADGEN.html:348:                    rhythm: 'swing',
quintet_composer_v42_TRIADGEN.html:366:                    rhythm: 'backbeat',
quintet_composer_v42_TRIADGEN.html:611:                        const measureNotes = generateHarmonyPart(inst, chord, selectedComposer.characteristics.rhythm);
quintet_composer_v42_TRIADGEN.html:620:        function generateHarmonyPart(instrument, chord, rhythmStyle) {
quintet_composer_v42_TRIADGEN.html:629:                if (rhythmStyle === 'alberti') {
quintet_composer_v42_TRIADGEN.html:636:                } else if (rhythmStyle === 'constant_motion') {
quintet_composer_v56_FINAL.html:416:                const rhythms = complexity === 'complex' ? 
quintet_composer_v56_FINAL.html:421:                for (const duration of rhythms) {
quintet_composer_v57_SIBELIUS_FIX.html:382:            const rhythms = [1, 1, 0.5, 0.5, 1];
quintet_composer_v57_SIBELIUS_FIX.html:384:            for (let i = 0; i < rhythms.length && i < 4; i++) {
quintet_composer_v57_SIBELIUS_FIX.html:398:                events.push({ notes: [note], duration: rhythms[i] });
quintet_composer_v58_FAILSAFE.html:341:                'beginning': { contour: 'ascending', rhythm: 'active' },
quintet_composer_v58_FAILSAFE.html:342:                'middle': { contour: 'arch', rhythm: 'flowing' },
quintet_composer_v58_FAILSAFE.html:343:                'ending': { contour: 'descending', rhythm: 'settling' }
quintet_composer_v59_BULLETPROOF.html:127:            ✓ BULLETPROOF-100x3: Real Melodies | Working Progressions | Musical Rhythm
quintet_composer_v59_BULLETPROOF.html:272:        // BULLETPROOF: Generate actual melodic lines with rhythm
quintet_composer_v59_BULLETPROOF.html:280:                // Create varied rhythm patterns
quintet_composer_v59_BULLETPROOF.html:281:                const rhythmPatterns = [
quintet_composer_v59_BULLETPROOF.html:289:                // Select rhythm based on phrase position
quintet_composer_v59_BULLETPROOF.html:296:                    pattern = rhythmPatterns[0];
quintet_composer_v59_BULLETPROOF.html:299:                    pattern = rhythmPatterns[Math.floor(Math.random() * 4)];
quintet_composer_v59_BULLETPROOF.html:379:                // Vary rhythm occasionally
quintet_composer_v59_BULLETPROOF.html:556:            output += '<p><strong>✓</strong> Varied rhythms (not just whole notes)</p>';
quintet_composer_v59_BULLETPROOF_RESTORED.html:360:                const rhythms = [2, 1, 1, 0.5, 0.5, 1];
quintet_composer_v59_BULLETPROOF_RESTORED.html:365:                    const rhythm = rhythms[Math.floor(Math.random() * rhythms.length)];
quintet_composer_v59_BULLETPROOF_RESTORED.html:366:                    if (beatCount + rhythm > 4) break;
quintet_composer_v59_BULLETPROOF_RESTORED.html:383:                        duration: rhythm,
quintet_composer_v59_BULLETPROOF_RESTORED.html:395:                    beatCount += rhythm;
quintet_composer_v60_ACTUALLY_WORKING.html:484:                    const rhythmOptions = complexity === 'simple' ? [2, 1, 1] : 
quintet_composer_v60_ACTUALLY_WORKING.html:487:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet_composer_v60_ACTUALLY_WORKING.html:528:                // Harmony part - simpler rhythms
quintet_composer_v60_COMPOSER_PROFILES.html:148:                        <option value="brahms">Brahms - Rich harmonies, complex rhythms</option>
quintet_composer_v60_COMPOSER_PROFILES.html:159:                        <option value="stravinsky">Stravinsky - Rhythmic, angular</option>
quintet_composer_v60_COMPOSER_PROFILES.html:249:                rhythm: { complexity: 0.3, syncopation: 0.1, rubato: 0 },
quintet_composer_v60_COMPOSER_PROFILES.html:258:                rhythm: { complexity: 0.4, syncopation: 0.1, rubato: 0.1 },
quintet_composer_v60_COMPOSER_PROFILES.html:269:                rhythm: { complexity: 0.6, syncopation: 0.3, rubato: 0.2 },
quintet_composer_v60_COMPOSER_PROFILES.html:278:                rhythm: { complexity: 0.8, syncopation: 0.5, rubato: 0.3 },
quintet_composer_v60_COMPOSER_PROFILES.html:283:                description: 'Rich harmonies, cross-rhythms, thick textures'
quintet_composer_v60_COMPOSER_PROFILES.html:287:                rhythm: { complexity: 0.5, syncopation: 0.3, rubato: 0.4 },
quintet_composer_v60_COMPOSER_PROFILES.html:296:                rhythm: { complexity: 0.6, syncopation: 0.2, rubato: 0.8 },
quintet_composer_v60_COMPOSER_PROFILES.html:305:                rhythm: { complexity: 0.7, syncopation: 0.3, rubato: 0.5 },
quintet_composer_v60_COMPOSER_PROFILES.html:314:                rhythm: { complexity: 0.6, syncopation: 0.2, rubato: 0.4 },
quintet_composer_v60_COMPOSER_PROFILES.html:325:                rhythm: { complexity: 0.4, syncopation: 0.2, rubato: 0.5 },
quintet_composer_v60_COMPOSER_PROFILES.html:334:                rhythm: { complexity: 0.6, syncopation: 0.3, rubato: 0.2 },
quintet_composer_v60_COMPOSER_PROFILES.html:345:                rhythm: { complexity: 0.9, syncopation: 0.8, rubato: 0.1 },
quintet_composer_v60_COMPOSER_PROFILES.html:350:                description: 'Rhythmic drive, angular melodies, neoclassical'
quintet_composer_v60_COMPOSER_PROFILES.html:354:                rhythm: { complexity: 0.8, syncopation: 0.7, rubato: 0.1 },
quintet_composer_v60_COMPOSER_PROFILES.html:359:                description: 'Folk modes, asymmetric rhythms, night music'
quintet_composer_v60_COMPOSER_PROFILES.html:363:                rhythm: { complexity: 0.6, syncopation: 0.4, rubato: 0.1 },
quintet_composer_v60_COMPOSER_PROFILES.html:372:                rhythm: { complexity: 0.7, syncopation: 0.5, rubato: 0.1 },
quintet_composer_v60_COMPOSER_PROFILES.html:381:                rhythm: { complexity: 0.8, syncopation: 0.3, rubato: 0.3 },
quintet_composer_v60_COMPOSER_PROFILES.html:392:                rhythm: { complexity: 0.8, syncopation: 0.2, rubato: 0 },
quintet_composer_v60_COMPOSER_PROFILES.html:401:                rhythm: { complexity: 0.9, syncopation: 0.6, rubato: 0 },
quintet_composer_v60_COMPOSER_PROFILES.html:410:                rhythm: { complexity: 0.1, syncopation: 0, rubato: 0.2 },
quintet_composer_v60_COMPOSER_PROFILES.html:419:                rhythm: { complexity: 0.6, syncopation: 0.3, rubato: 0.4 },
quintet_composer_v60_COMPOSER_PROFILES.html:437:            'complex': { pattern: 'polyrhythmic', positions: ['various'] },
quintet_composer_v60_COMPOSER_PROFILES.html:555:                // Rhythm patterns based on composer
quintet_composer_v60_COMPOSER_PROFILES.html:556:                let rhythmPattern;
quintet_composer_v60_COMPOSER_PROFILES.html:557:                if (profile.rhythm.complexity < 0.3) {
quintet_composer_v60_COMPOSER_PROFILES.html:559:                    rhythmPattern = [4]; // Whole note
quintet_composer_v60_COMPOSER_PROFILES.html:560:                } else if (profile.rhythm.complexity < 0.6) {
quintet_composer_v60_COMPOSER_PROFILES.html:562:                    rhythmPattern = [1, 1, 2];
quintet_composer_v60_COMPOSER_PROFILES.html:565:                    rhythmPattern = [0.5, 0.5, 1, 0.5, 0.5, 1];
quintet_composer_v60_COMPOSER_PROFILES.html:569:                if (profile.rhythm.rubato > 0.5) {
quintet_composer_v60_COMPOSER_PROFILES.html:572:                        rhythmPattern = [4]; // Long note with fermata
quintet_composer_v60_COMPOSER_PROFILES.html:577:                rhythmPattern.forEach((duration, i) => {
quintet_composer_v60_COMPOSER_PROFILES.html:726:                    Rhythm=${profile.rhythm.complexity.toFixed(1)}<br>
quintet_composer_v60_COMPOSER_PROFILES.html:825:                // Rhythm based on texture density
quintet_composer_v61_OCTAVE_FIX.html:494:                    const rhythmOptions = complexity === 'simple' ? [2, 1, 1] : 
quintet_composer_v61_OCTAVE_FIX.html:497:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet_composer_v61_OCTAVE_FIX.html:538:                // Harmony part - simpler rhythms
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:155:                    <option value="stravinsky">Stravinsky - Rhythmic Innovation</option>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:245:                        rhythm: 'balanced',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:260:                        rhythm: 'flowing',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:275:                        rhythm: 'driving',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:290:                        rhythm: 'complex',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:305:                        rhythm: 'fluid',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:321:                        rhythm: 'precise',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:332:                        rhythm: 'irregular',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:343:                        rhythm: 'constant',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:354:                        rhythm: 'rubato',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:365:                        rhythm: 'dramatic',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:376:                        rhythm: 'flowing',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:387:                        rhythm: 'folk',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:398:                        rhythm: 'lyrical',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:409:                        rhythm: 'march',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:420:                        rhythm: 'witty',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:431:                        rhythm: 'complex',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:442:                        rhythm: 'repetitive',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:453:                        rhythm: 'simple',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:464:                        rhythm: 'fluid',
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:614:                const rhythms = profile.rhythm === 'complex' ? [1, 1, 2] : [2, 2];
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:616:                rhythms.forEach(duration => {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:842:                    Harmony: ${profile.harmony} | Rhythm: ${profile.rhythm} | Texture: ${profile.texture}<br>
quintet_composer_v63_REAL_FIXES.html:282:                const rhythmPattern = this.rng.choice([
quintet_composer_v63_REAL_FIXES.html:284:                    [1, 1, 0.5, 0.5, 1, 2], // varied rhythm
quintet_composer_v63_REAL_FIXES.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v63_REAL_FIXES.html:335:                    // Pattern 2: Rhythmic complement
quintet_composer_v63_REAL_FIXES.html:419:                    // Pattern 2: Rhythmic
quintet_composer_v64_GUITAR_FIXED.html:282:                const rhythmPattern = this.rng.choice([
quintet_composer_v64_GUITAR_FIXED.html:284:                    [1, 1, 0.5, 0.5, 1, 2], // varied rhythm
quintet_composer_v64_GUITAR_FIXED.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v64_GUITAR_FIXED.html:335:                    // Pattern 2: Rhythmic complement
quintet_composer_v64_GUITAR_FIXED.html:419:                    // Pattern 2: Rhythmic
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:282:                const rhythmPattern = this.rng.choice([
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:284:                    [1, 1, 0.5, 0.5, 1, 2], // varied rhythm
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:335:                    // Pattern 2: Rhythmic complement
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:419:                    // Pattern 2: Rhythmic
quintet_composer_v7_final.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v7_final.html:168:                    <option value="complex">Complex (Mixed rhythms)</option>
quintet_composer_v7_final.html:292:                        // Generate rhythm pattern
quintet_composer_v7_final.html:304:                            // Complex rhythm - different pattern for each instrument to avoid unison
quintet_v62_real_music.html:141:                    <option value="stravinsky">Stravinsky - Rhythmic Power</option>
quintet_v62_real_music.html:351:                const rhythms = this.getRhythmPattern(style);
quintet_v62_real_music.html:360:                        duration: rhythms[i % rhythms.length],
quintet_v62_real_music.html:368:            // BULLETPROOF: Style-specific rhythm patterns
quintet_v62_real_music.html:369:            getRhythmPattern(style) {
quintet_v62_real_music.html:500:                // Bossa nova rhythm
quintet_v62_real_music.html:502:                const bossaRhythm = [1, 0.5, 1.5, 1, 1];
quintet_v62_real_music.html:507:                        duration: bossaRhythm[i % bossaRhythm.length],
quintet_v62_real_music.html:1038:                    brahms: 'Rich romantic harmonies with complex rhythms and thick textures',
quintet_v62_real_music.html:1042:                    stravinsky: 'Rhythmic innovation with angular melodies and percussive textures',
quintet_v63.html:192:            const rhythms = [1, 1, 1, 1]; // Quarter notes
quintet_v63.html:200:                    duration: rhythms[i]
 
=== MUSICXML GENERATION === 
 
rhythm_patterns.js:19:        duration: rhythms[i % rhythms.length]
structure_generator.js:47:            s.duration = (s.bars * 2) + ' seconds'; // at 120bpm
bulletproof_integrated.html:118:                    let measureDuration = 0;
bulletproof_integrated.html:119:                    while (measureDuration < 4) {
bulletproof_integrated.html:120:                        let duration = complexity === 'simple' ? 1 : 
bulletproof_integrated.html:123:                        duration = Math.min(duration, 4 - measureDuration);
bulletproof_integrated.html:131:                            duration: duration
bulletproof_integrated.html:133:                        measureDuration += duration;
bulletproof_integrated.html:144:            let xml = '<?xml version="1.0" encoding="UTF-8"?>\n<score-partwise version="3.1">\n<part-list>\n';
bulletproof_integrated.html:154:                    if (m === 1) xml += '<attributes><divisions>4</divisions><key><fifths>0</fifths></key><time><beats>4</beats><beat-type>4</beat-type></time></attributes>\n';
bulletproof_integrated.html:162:                        xml += `<octave>${oct}</octave></pitch><duration>${note.duration*4}</duration>`;
bulletproof_integrated.html:163:                        xml += `<type>${note.duration===4?'whole':note.duration===2?'half':note.duration===1?'quarter':note.duration===0.5?'eighth':'16th'}</type></note>\n`;
bulletproof_integrated.html:169:            xml += '</score-partwise>';
bulletproof_integrated.html:195:                    const ticks = Math.round(n.duration * 480);
index.html:283:                    duration: 1
index.html:316:                        duration: 1
index.html:487:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" 
index.html:489:<score-partwise version="3.1">
index.html:531:        <divisions>1</divisions>
index.html:549:        <duration>4</duration>
index.html:557:            musicXML += `\n</score-partwise>`;
quintet_composer_v13_PRODUCTION.html:555:                        let duration = 1;
quintet_composer_v13_PRODUCTION.html:559:                            duration = 0.5;
quintet_composer_v13_PRODUCTION.html:563:                                duration = 2;
quintet_composer_v13_PRODUCTION.html:565:                                duration = 0.5;
quintet_composer_v13_PRODUCTION.html:568:                                duration = 1.5;
quintet_composer_v13_PRODUCTION.html:607:                            duration: duration,
quintet_composer_v13_PRODUCTION.html:737:                        const noteEndTick = noteStartTick + Math.round(note.duration * ticksPerQuarter);
quintet_composer_v13_PRODUCTION.html:856:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v13_PRODUCTION.html:857:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v13_PRODUCTION.html:876:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v13_PRODUCTION.html:905:                                xml += `        <duration>${Math.round(note.duration * 4)}</duration>\n';
quintet_composer_v13_PRODUCTION.html:908:                                if (note.duration >= 2) type = 'half';
quintet_composer_v13_PRODUCTION.html:909:                                else if (note.duration >= 1) type = 'quarter';
quintet_composer_v13_PRODUCTION.html:910:                                else if (note.duration >= 0.5) type = 'eighth';
quintet_composer_v13_PRODUCTION.html:911:                                else if (note.duration >= 0.25) type = 'sixteenth';
quintet_composer_v13_PRODUCTION.html:914:                                if (note.duration === 1.5 || note.duration === 0.75) {
quintet_composer_v13_PRODUCTION.html:950:                            xml += `        <duration>${Math.round(note.duration * 4)}</duration>\n';
quintet_composer_v13_PRODUCTION.html:953:                            if (note.duration >= 2) type = 'half';
quintet_composer_v13_PRODUCTION.html:954:                            else if (note.duration >= 1) type = 'quarter';
quintet_composer_v13_PRODUCTION.html:955:                            else if (note.duration >= 0.5) type = 'eighth';
quintet_composer_v13_PRODUCTION.html:956:                            else if (note.duration >= 0.25) type = 'sixteenth';
quintet_composer_v13_PRODUCTION.html:959:                            if (note.duration === 1.5 || note.duration === 0.75) {
quintet_composer_v13_PRODUCTION.html:973:            xml += '</score-partwise>\n';
quintet_composer_v14_WORKING_BASE.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v14_WORKING_BASE.html:265:                        function addNote(startBeat, duration, vel) {
quintet_composer_v14_WORKING_BASE.html:285:                                start: (m * divisions * 4) + startBeat,
quintet_composer_v14_WORKING_BASE.html:286:                                duration: duration,
quintet_composer_v14_WORKING_BASE.html:296:                                addNote(b * divisions, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:300:                            addNote(0, divisions * 2, velocity);
quintet_composer_v14_WORKING_BASE.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet_composer_v14_WORKING_BASE.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet_composer_v14_WORKING_BASE.html:324:                                addNote(0, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet_composer_v14_WORKING_BASE.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet_composer_v14_WORKING_BASE.html:439:                        track.push.apply(track, varLength(duration));
quintet_composer_v14_WORKING_BASE.html:444:                        lastTick = startTick + duration;
quintet_composer_v14_WORKING_BASE.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v14_WORKING_BASE.html:489:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v14_WORKING_BASE.html:490:                xml += '<score-partwise version="3.0">\n';
quintet_composer_v14_WORKING_BASE.html:520:                            xml += '        <divisions>' + divisions + '</divisions>\n';
quintet_composer_v14_WORKING_BASE.html:554:                        var measureDuration = divisions * 4;
quintet_composer_v14_WORKING_BASE.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet_composer_v14_WORKING_BASE.html:562:                                var restDuration = noteStart - currentBeat;
quintet_composer_v14_WORKING_BASE.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet_composer_v14_WORKING_BASE.html:587:                            var duration = Math.max(1, note.duration);
quintet_composer_v14_WORKING_BASE.html:588:                            xml += '        <duration>' + duration + '</duration>\n';
quintet_composer_v14_WORKING_BASE.html:593:                            if (duration >= divisions * 4) {
quintet_composer_v14_WORKING_BASE.html:595:                            } else if (duration >= divisions * 2) {
quintet_composer_v14_WORKING_BASE.html:597:                            } else if (duration === divisions * 1.5) {
quintet_composer_v14_WORKING_BASE.html:600:                            } else if (duration >= divisions) {
quintet_composer_v14_WORKING_BASE.html:602:                            } else if (duration >= divisions * 0.5) {
quintet_composer_v14_WORKING_BASE.html:614:                            currentBeat = noteStart + note.duration;
quintet_composer_v14_WORKING_BASE.html:618:                        if (currentBeat < measureDuration) {
quintet_composer_v14_WORKING_BASE.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v14_WORKING_BASE.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_composer_v14_WORKING_BASE.html:632:                xml += '</score-partwise>\n';
quintet_composer_v16_HARMONIZED.html:472:                            duration: 1,
quintet_composer_v16_HARMONIZED.html:676:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v16_HARMONIZED.html:677:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v16_HARMONIZED.html:694:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v16_HARMONIZED.html:714:                                xml += '        <duration>4</duration>\n';
quintet_composer_v16_HARMONIZED.html:725:                            xml += '        <duration>4</duration>\n';
quintet_composer_v16_HARMONIZED.html:737:            xml += '</score-partwise>';
quintet_composer_v17_TRIAD.html:537:                                    duration: 1,
quintet_composer_v17_TRIAD.html:551:                                duration: 1,
quintet_composer_v17_TRIAD.html:562:                                    duration: 1,
quintet_composer_v17_TRIAD.html:569:                                    duration: 1,
quintet_composer_v17_TRIAD.html:581:                                    duration: 1,
quintet_composer_v17_TRIAD.html:588:                                    duration: 1,
quintet_composer_v17_TRIAD.html:776:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v17_TRIAD.html:777:                xml += '<score-partwise version="3.1">\n';
quintet_composer_v17_TRIAD.html:794:                            xml += '        <divisions>4</divisions>\n';
quintet_composer_v17_TRIAD.html:810:                            xml += '        <duration>4</duration>\n';
quintet_composer_v17_TRIAD.html:821:                xml += '</score-partwise>';
quintet_composer_v18_COMPLETE.html:461:                            duration: rhythm,
quintet_composer_v18_COMPLETE.html:469:                            duration: rhythm,
quintet_composer_v18_COMPLETE.html:557:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
quintet_composer_v18_COMPLETE.html:558:<score-partwise version="3.1">
quintet_composer_v18_COMPLETE.html:599:        <divisions>4</divisions>
quintet_composer_v18_COMPLETE.html:650:        <duration>${note.duration}</duration>
quintet_composer_v18_COMPLETE.html:651:        <type>${getDurationType(note.duration)}</type>
quintet_composer_v18_COMPLETE.html:662:        <duration>${note.duration}</duration>
quintet_composer_v18_COMPLETE.html:663:        <type>${getDurationType(note.duration)}</type>
quintet_composer_v18_COMPLETE.html:679:</score-partwise>`;
quintet_composer_v18_COMPLETE.html:686:    function getDurationType(duration) {
quintet_composer_v18_COMPLETE.html:687:        switch(duration) {
quintet_composer_v20_CORRECT_RANGES.html:438:        const totalDivisions = (beatsNum * 16) / beatsDenom;
quintet_composer_v20_CORRECT_RANGES.html:446:            while (currentDivision < totalDivisions) {
quintet_composer_v20_CORRECT_RANGES.html:447:                const remaining = totalDivisions - currentDivision;
quintet_composer_v20_CORRECT_RANGES.html:448:                let duration = pattern[patternIdx % pattern.length];
quintet_composer_v20_CORRECT_RANGES.html:450:                if (duration > remaining) {
quintet_composer_v20_CORRECT_RANGES.html:451:                    duration = remaining;
quintet_composer_v20_CORRECT_RANGES.html:472:                        duration: duration
quintet_composer_v20_CORRECT_RANGES.html:480:                        duration: duration
quintet_composer_v20_CORRECT_RANGES.html:484:                currentDivision += duration;
quintet_composer_v20_CORRECT_RANGES.html:570:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
quintet_composer_v20_CORRECT_RANGES.html:571:<score-partwise version="3.1">
quintet_composer_v20_CORRECT_RANGES.html:609:        <divisions>4</divisions>
quintet_composer_v20_CORRECT_RANGES.html:660:        <duration>${event.duration}</duration>
quintet_composer_v20_CORRECT_RANGES.html:661:        <type>${getDurationType(event.duration)}</type>
quintet_composer_v20_CORRECT_RANGES.html:676:</score-partwise>`;
quintet_composer_v20_CORRECT_RANGES.html:697:    // Get duration type
quintet_composer_v20_CORRECT_RANGES.html:698:    function getDurationType(divisions) {
quintet_composer_v20_CORRECT_RANGES.html:699:        if (divisions >= 16) return 'whole';
quintet_composer_v20_CORRECT_RANGES.html:700:        if (divisions >= 8) return 'half';
quintet_composer_v20_CORRECT_RANGES.html:701:        if (divisions >= 4) return 'quarter';
quintet_composer_v20_CORRECT_RANGES.html:702:        if (divisions >= 2) return 'eighth';
quintet_composer_v21_ABSOLUTE_FIX.html:394:            const totalDivisions = (beatsNum * 16) / beatsDenom;
quintet_composer_v21_ABSOLUTE_FIX.html:402:                while (currentDivision < totalDivisions) {
quintet_composer_v21_ABSOLUTE_FIX.html:403:                    const remaining = totalDivisions - currentDivision;
quintet_composer_v21_ABSOLUTE_FIX.html:404:                    let duration = pattern[patternIdx % pattern.length];
quintet_composer_v21_ABSOLUTE_FIX.html:406:                    if (duration > remaining) {
quintet_composer_v21_ABSOLUTE_FIX.html:407:                        duration = remaining;
quintet_composer_v21_ABSOLUTE_FIX.html:422:                            duration: duration
quintet_composer_v21_ABSOLUTE_FIX.html:430:                            duration: duration
quintet_composer_v21_ABSOLUTE_FIX.html:434:                    currentDivision += duration;
quintet_composer_v21_ABSOLUTE_FIX.html:517:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
quintet_composer_v21_ABSOLUTE_FIX.html:518:<score-partwise version="3.1">
quintet_composer_v21_ABSOLUTE_FIX.html:556:        <divisions>4</divisions>
quintet_composer_v21_ABSOLUTE_FIX.html:607:        <duration>${event.duration}</duration>
quintet_composer_v21_ABSOLUTE_FIX.html:608:        <type>${getDurationType(event.duration)}</type>
quintet_composer_v21_ABSOLUTE_FIX.html:623:</score-partwise>`;
quintet_composer_v21_ABSOLUTE_FIX.html:637:    // Get duration type
quintet_composer_v21_ABSOLUTE_FIX.html:638:    function getDurationType(divisions) {
quintet_composer_v21_ABSOLUTE_FIX.html:639:        if (divisions >= 16) return 'whole';
quintet_composer_v21_ABSOLUTE_FIX.html:640:        if (divisions >= 8) return 'half';
quintet_composer_v21_ABSOLUTE_FIX.html:641:        if (divisions >= 4) return 'quarter';
quintet_composer_v21_ABSOLUTE_FIX.html:642:        if (divisions >= 2) return 'eighth';
quintet_composer_v22_FULL_FEATURES.html:394:            const totalDivisions = (beatsNum * 16) / beatsDenom;
quintet_composer_v22_FULL_FEATURES.html:402:                while (currentDivision < totalDivisions) {
quintet_composer_v22_FULL_FEATURES.html:403:                    const remaining = totalDivisions - currentDivision;
quintet_composer_v22_FULL_FEATURES.html:404:                    let duration = pattern[patternIdx % pattern.length];
quintet_composer_v22_FULL_FEATURES.html:406:                    if (duration > remaining) {
quintet_composer_v22_FULL_FEATURES.html:407:                        duration = remaining;
quintet_composer_v22_FULL_FEATURES.html:422:                            duration: duration
quintet_composer_v22_FULL_FEATURES.html:430:                            duration: duration
quintet_composer_v22_FULL_FEATURES.html:434:                    currentDivision += duration;
quintet_composer_v22_FULL_FEATURES.html:517:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
quintet_composer_v22_FULL_FEATURES.html:518:<score-partwise version="3.1">
quintet_composer_v22_FULL_FEATURES.html:556:        <divisions>4</divisions>
quintet_composer_v22_FULL_FEATURES.html:607:        <duration>${event.duration}</duration>
quintet_composer_v22_FULL_FEATURES.html:608:        <type>${getDurationType(event.duration)}</type>
quintet_composer_v22_FULL_FEATURES.html:623:</score-partwise>`;
quintet_composer_v22_FULL_FEATURES.html:637:    // Get duration type
quintet_composer_v22_FULL_FEATURES.html:638:    function getDurationType(divisions) {
quintet_composer_v22_FULL_FEATURES.html:639:        if (divisions >= 16) return 'whole';
quintet_composer_v22_FULL_FEATURES.html:640:        if (divisions >= 8) return 'half';
quintet_composer_v22_FULL_FEATURES.html:641:        if (divisions >= 4) return 'quarter';
quintet_composer_v22_FULL_FEATURES.html:642:        if (divisions >= 2) return 'eighth';
quintet_composer_v23_FIXED.html:234:                <li>Uses correct 256 divisions per quarter note</li>
quintet_composer_v23_FIXED.html:236:                <li>Accurate duration calculations</li>
quintet_composer_v23_FIXED.html:297:            <strong>Technical Details:</strong> Divisions = 256 | Quarter = 256 | Eighth = 128 | Sixteenth = 64 | Half = 512 | Whole = 1024
quintet_composer_v23_FIXED.html:313:        // CRITICAL: Sibelius 25.4 requires exactly 256 divisions per quarter note
quintet_composer_v23_FIXED.html:314:        const DIVISIONS = 256;
quintet_composer_v23_FIXED.html:316:        // Duration values based on 256 divisions
quintet_composer_v23_FIXED.html:317:        const DURATIONS = {
quintet_composer_v23_FIXED.html:318:            whole: DIVISIONS * 4,        // 1024
quintet_composer_v23_FIXED.html:319:            halfDotted: DIVISIONS * 3,   // 768
quintet_composer_v23_FIXED.html:320:            half: DIVISIONS * 2,         // 512
quintet_composer_v23_FIXED.html:321:            quarterDotted: DIVISIONS * 1.5, // 384
quintet_composer_v23_FIXED.html:322:            quarter: DIVISIONS,          // 256
quintet_composer_v23_FIXED.html:323:            eighthDotted: DIVISIONS * 0.75, // 192
quintet_composer_v23_FIXED.html:324:            eighth: DIVISIONS / 2,       // 128
quintet_composer_v23_FIXED.html:325:            sixteenth: DIVISIONS / 4     // 64
quintet_composer_v23_FIXED.html:361:        // Generate note with proper duration
quintet_composer_v23_FIXED.html:362:        function generateNote(instrument, duration, measureNumber, noteInMeasure, options = {}) {
quintet_composer_v23_FIXED.html:368:            if (duration === DURATIONS.whole) noteType = 'whole';
quintet_composer_v23_FIXED.html:369:            else if (duration === DURATIONS.half) noteType = 'half';
quintet_composer_v23_FIXED.html:370:            else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet_composer_v23_FIXED.html:371:            else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet_composer_v23_FIXED.html:372:            else if (duration === DURATIONS.sixteenth) noteType = '16th';
quintet_composer_v23_FIXED.html:383:        <duration>${duration}</duration>
quintet_composer_v23_FIXED.html:407:        <divisions>${DIVISIONS}</divisions>
quintet_composer_v23_FIXED.html:432:            // Calculate total duration needed for the measure
quintet_composer_v23_FIXED.html:433:            const totalDuration = (beatsPerMeasure / beatType * 4) * DIVISIONS;
quintet_composer_v23_FIXED.html:434:            let currentDuration = 0;
quintet_composer_v23_FIXED.html:437:            while (currentDuration < totalDuration) {
quintet_composer_v23_FIXED.html:438:                const remainingDuration = totalDuration - currentDuration;
quintet_composer_v23_FIXED.html:439:                let noteDuration;
quintet_composer_v23_FIXED.html:444:                    if (remainingDuration >= DURATIONS.half) rhythmOptions.push(DURATIONS.half);
quintet_composer_v23_FIXED.html:445:                    if (remainingDuration >= DURATIONS.quarter) rhythmOptions.push(DURATIONS.quarter);
quintet_composer_v23_FIXED.html:446:                    if (remainingDuration >= DURATIONS.eighth) rhythmOptions.push(DURATIONS.eighth);
quintet_composer_v23_FIXED.html:447:                    if (remainingDuration >= DURATIONS.sixteenth) rhythmOptions.push(DURATIONS.sixteenth);
quintet_composer_v23_FIXED.html:449:                    noteDuration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)] || DURATIONS.quarter;
quintet_composer_v23_FIXED.html:452:                    noteDuration = Math.min(DURATIONS.quarter, remainingDuration);
quintet_composer_v23_FIXED.html:456:                xml += generateNote(instrument, noteDuration, measureNumber, noteCount);
quintet_composer_v23_FIXED.html:460:                    xml += generateNote(instrument, noteDuration, measureNumber, noteCount, { isChord: true });
quintet_composer_v23_FIXED.html:462:                        xml += generateNote(instrument, noteDuration, measureNumber, noteCount, { isChord: true });
quintet_composer_v23_FIXED.html:466:                currentDuration += noteDuration;
quintet_composer_v23_FIXED.html:507:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
quintet_composer_v23_FIXED.html:508:<score-partwise version="3.1">
quintet_composer_v23_FIXED.html:622:</score-partwise>`;
quintet_composer_v26_WORKING_BASE.html:269:        const DIVISIONS = 256; // Sibelius 25.4 standard - NEVER change this
quintet_composer_v26_WORKING_BASE.html:285:        // Duration calculations - EXACT VALUES FOR SIBELIUS
quintet_composer_v26_WORKING_BASE.html:286:        const DURATIONS = {
quintet_composer_v26_WORKING_BASE.html:287:            'whole': DIVISIONS * 4,      // 1024
quintet_composer_v26_WORKING_BASE.html:288:            'half': DIVISIONS * 2,       // 512
quintet_composer_v26_WORKING_BASE.html:289:            'quarter': DIVISIONS,        // 256
quintet_composer_v26_WORKING_BASE.html:290:            'eighth': DIVISIONS / 2,     // 128
quintet_composer_v26_WORKING_BASE.html:291:            'sixteenth': DIVISIONS / 4   // 64
quintet_composer_v26_WORKING_BASE.html:310:                debugLog(`Divisions: ${DIVISIONS}`);
quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet_composer_v26_WORKING_BASE.html:375:            xml += `<duration>${duration}</duration>`;
quintet_composer_v26_WORKING_BASE.html:426:                xml += generateNoteXML(testMidi, DURATIONS.whole, 'whole', false);
quintet_composer_v26_WORKING_BASE.html:430:                let remainingDuration = DIVISIONS * 4; // Full measure in 4/4
quintet_composer_v26_WORKING_BASE.html:432:                while (remainingDuration > 0) {
quintet_composer_v26_WORKING_BASE.html:434:                    let duration, noteType;
quintet_composer_v26_WORKING_BASE.html:439:                        if (rhythmChoice < 0.15 && remainingDuration >= DURATIONS.whole) {
quintet_composer_v26_WORKING_BASE.html:440:                            duration = DURATIONS.whole;
quintet_composer_v26_WORKING_BASE.html:442:                        } else if (rhythmChoice < 0.35 && remainingDuration >= DURATIONS.half) {
quintet_composer_v26_WORKING_BASE.html:443:                            duration = DURATIONS.half;
quintet_composer_v26_WORKING_BASE.html:445:                        } else if (rhythmChoice < 0.70 && remainingDuration >= DURATIONS.quarter) {
quintet_composer_v26_WORKING_BASE.html:446:                            duration = DURATIONS.quarter;
quintet_composer_v26_WORKING_BASE.html:448:                        } else if (remainingDuration >= DURATIONS.eighth) {
quintet_composer_v26_WORKING_BASE.html:449:                            duration = DURATIONS.eighth;
quintet_composer_v26_WORKING_BASE.html:453:                            duration = remainingDuration;
quintet_composer_v26_WORKING_BASE.html:454:                            if (duration >= DURATIONS.quarter) {
quintet_composer_v26_WORKING_BASE.html:456:                            } else if (duration >= DURATIONS.eighth) {
quintet_composer_v26_WORKING_BASE.html:464:                        if (remainingDuration >= DURATIONS.quarter) {
quintet_composer_v26_WORKING_BASE.html:465:                            duration = DURATIONS.quarter;
quintet_composer_v26_WORKING_BASE.html:468:                            duration = remainingDuration;
quintet_composer_v26_WORKING_BASE.html:474:                    if (duration > remainingDuration) {
quintet_composer_v26_WORKING_BASE.html:475:                        duration = remainingDuration;
quintet_composer_v26_WORKING_BASE.html:476:                        // Determine correct note type for remaining duration
quintet_composer_v26_WORKING_BASE.html:477:                        if (duration === DURATIONS.whole) noteType = 'whole';
quintet_composer_v26_WORKING_BASE.html:478:                        else if (duration === DURATIONS.half) noteType = 'half';
quintet_composer_v26_WORKING_BASE.html:479:                        else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet_composer_v26_WORKING_BASE.html:480:                        else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet_composer_v26_WORKING_BASE.html:499:                    xml += generateNoteXML(midi, duration, noteType, false, articulation);
quintet_composer_v26_WORKING_BASE.html:506:                        xml += generateNoteXML(midi2, duration, noteType, true, articulation);
quintet_composer_v26_WORKING_BASE.html:509:                    remainingDuration -= duration;
quintet_composer_v26_WORKING_BASE.html:522:            xml += `<divisions>${DIVISIONS}</divisions>`;
quintet_composer_v26_WORKING_BASE.html:596:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v26_WORKING_BASE.html:597:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v26_WORKING_BASE.html:631:            xml += '</score-partwise>';
quintet_composer_v26_WORKING_BASE.html:690:                    test: () => currentXML.includes('<!DOCTYPE score-partwise'),
quintet_composer_v26_WORKING_BASE.html:694:                    name: 'Divisions Setting',
quintet_composer_v26_WORKING_BASE.html:695:                    test: () => currentXML.includes(`<divisions>${DIVISIONS}</divisions>`),
quintet_composer_v26_WORKING_BASE.html:696:                    message: `Divisions set to ${DIVISIONS} (Sibelius standard)`
quintet_composer_v26_WORKING_BASE.html:710:                    test: () => currentXML.includes('<pitch>') && currentXML.includes('<duration>'),
quintet_composer_v26_WORKING_BASE.html:711:                    message: 'Notes have pitch and duration'
quintet_composer_v26_WORKING_BASE.html:746:            console.log(`Divisions: ${DIVISIONS}`);
quintet_composer_v28_REALITY_FIX.html:273:        const DIVISIONS = 256;
quintet_composer_v28_REALITY_FIX.html:367:        // Duration values
quintet_composer_v28_REALITY_FIX.html:368:        const DURATIONS = {
quintet_composer_v28_REALITY_FIX.html:369:            'whole': DIVISIONS * 4,
quintet_composer_v28_REALITY_FIX.html:370:            'half': DIVISIONS * 2,
quintet_composer_v28_REALITY_FIX.html:371:            'quarter': DIVISIONS,
quintet_composer_v28_REALITY_FIX.html:372:            'eighth': DIVISIONS / 2,
quintet_composer_v28_REALITY_FIX.html:373:            'sixteenth': DIVISIONS / 4
quintet_composer_v28_REALITY_FIX.html:434:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v28_REALITY_FIX.html:449:            xml += `<duration>${duration}</duration>`;
quintet_composer_v28_REALITY_FIX.html:464:                xml += generateNoteXML(midi, DURATIONS.eighth, 'eighth');
quintet_composer_v28_REALITY_FIX.html:476:                xml += generateNoteXML(root, DURATIONS.quarter, 'quarter', false);
quintet_composer_v28_REALITY_FIX.html:481:                    xml += generateNoteXML(third, DURATIONS.quarter, 'quarter', true);
quintet_composer_v28_REALITY_FIX.html:485:                    xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter', true);
quintet_composer_v28_REALITY_FIX.html:501:                    xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:506:                    { duration: DURATIONS.quarter, type: 'quarter' },
quintet_composer_v28_REALITY_FIX.html:507:                    { duration: DURATIONS.quarter, type: 'quarter' },
quintet_composer_v28_REALITY_FIX.html:508:                    { duration: DURATIONS.half, type: 'half' }
quintet_composer_v28_REALITY_FIX.html:515:                    xml += generateNoteXML(midi, r.duration, r.type);
quintet_composer_v28_REALITY_FIX.html:516:                    used += r.duration;
quintet_composer_v28_REALITY_FIX.html:528:            xml += generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v28_REALITY_FIX.html:538:            xml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:539:            xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:540:            xml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:541:            xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:556:                return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v28_REALITY_FIX.html:592:            xml += `<divisions>${DIVISIONS}</divisions>`;
quintet_composer_v28_REALITY_FIX.html:674:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v28_REALITY_FIX.html:675:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v28_REALITY_FIX.html:704:            xml += '</score-partwise>';
quintet_composer_v29_GUITAR_ENHANCED.html:194:        const DIVISIONS = 256;
quintet_composer_v29_GUITAR_ENHANCED.html:266:        const DURATIONS = {
quintet_composer_v29_GUITAR_ENHANCED.html:267:            'whole': DIVISIONS * 4,
quintet_composer_v29_GUITAR_ENHANCED.html:268:            'half': DIVISIONS * 2,
quintet_composer_v29_GUITAR_ENHANCED.html:269:            'quarter': DIVISIONS,
quintet_composer_v29_GUITAR_ENHANCED.html:270:            'eighth': DIVISIONS / 2,
quintet_composer_v29_GUITAR_ENHANCED.html:271:            'sixteenth': DIVISIONS / 4
quintet_composer_v29_GUITAR_ENHANCED.html:340:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v29_GUITAR_ENHANCED.html:349:            xml += '<duration>' + duration + '</duration>';
quintet_composer_v29_GUITAR_ENHANCED.html:368:                        xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter', j > 0);
quintet_composer_v29_GUITAR_ENHANCED.html:373:                const duration = DURATIONS[pattern.rhythm];
quintet_composer_v29_GUITAR_ENHANCED.html:380:                        xml += generateNoteXML(midi, duration, noteType);
quintet_composer_v29_GUITAR_ENHANCED.html:395:                return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v29_GUITAR_ENHANCED.html:412:                        xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:421:                    return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v29_GUITAR_ENHANCED.html:428:                    bassXml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:429:                    bassXml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:430:                    bassXml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:431:                    bassXml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:442:            xml += '<divisions>' + DIVISIONS + '</divisions>';
quintet_composer_v29_GUITAR_ENHANCED.html:502:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" ';
quintet_composer_v29_GUITAR_ENHANCED.html:504:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v29_GUITAR_ENHANCED.html:529:            xml += '</score-partwise>';
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:251:        const DIVISIONS = 256;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:264:        // Duration values
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:265:        const durations = {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:321:                    { midi: midPoint, duration: durations.quarter },
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:322:                    { midi: midPoint + 2, duration: durations.quarter },
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:323:                    { midi: midPoint - 1, duration: durations.quarter },
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:324:                    { midi: midPoint, duration: durations.quarter }
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:331:                notes = [{ midi: 60, duration: durations.whole }]; // Middle C
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:352:                notes.push({ midi: finalMidi, duration: durations.quarter });
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:371:                        notes.push({ midi: Math.min(range.max, midi), duration: durations.eighth });
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:424:        function generateMusicXML() {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:436:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" 
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:438:<score-partwise version="3.1">
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:476:        <divisions>${DIVISIONS}</divisions>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:511:        <duration>${noteData.duration}</duration>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:512:        <type>${getDurationType(noteData.duration)}</type>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:526:</score-partwise>`;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:539:        function getDurationType(duration) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:540:            if (duration >= 1024) return 'whole';
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:541:            if (duration >= 512) return 'half';
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:542:            if (duration >= 256) return 'quarter';
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:543:            if (duration >= 128) return 'eighth';
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:563:                const musicXML = generateMusicXML();
quintet_composer_v32_COMPOSER_PROFILES.html:273:        const DIVISIONS = 256;
quintet_composer_v32_COMPOSER_PROFILES.html:455:                    { midi: mid, duration: 256 },
quintet_composer_v32_COMPOSER_PROFILES.html:456:                    { midi: mid + 2, duration: 256 },
quintet_composer_v32_COMPOSER_PROFILES.html:457:                    { midi: mid - 1, duration: 256 },
quintet_composer_v32_COMPOSER_PROFILES.html:458:                    { midi: mid, duration: 256 }
quintet_composer_v32_COMPOSER_PROFILES.html:480:                            duration: 256,
quintet_composer_v32_COMPOSER_PROFILES.html:487:                                duration: 0,
quintet_composer_v32_COMPOSER_PROFILES.html:492:                                duration: 0,
quintet_composer_v32_COMPOSER_PROFILES.html:504:                            duration: 128 
quintet_composer_v32_COMPOSER_PROFILES.html:515:                            duration: 128 
quintet_composer_v32_COMPOSER_PROFILES.html:526:                                duration: 64 
quintet_composer_v32_COMPOSER_PROFILES.html:545:                            duration: rhythms[i % rhythms.length] 
quintet_composer_v32_COMPOSER_PROFILES.html:555:                            duration: i % 4 === 3 ? 384 : 128 
quintet_composer_v32_COMPOSER_PROFILES.html:564:                            duration: 256 
quintet_composer_v32_COMPOSER_PROFILES.html:573:                let currentDuration = 0;
quintet_composer_v32_COMPOSER_PROFILES.html:576:                while (currentDuration < 1024) {
quintet_composer_v32_COMPOSER_PROFILES.html:581:                    const duration = rhythms[noteIndex % rhythms.length];
quintet_composer_v32_COMPOSER_PROFILES.html:585:                        duration: duration 
quintet_composer_v32_COMPOSER_PROFILES.html:588:                    currentDuration += duration;
quintet_composer_v32_COMPOSER_PROFILES.html:609:                    duration: 256 
quintet_composer_v32_COMPOSER_PROFILES.html:653:        function generateMusicXML() {
quintet_composer_v32_COMPOSER_PROFILES.html:663:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" 
quintet_composer_v32_COMPOSER_PROFILES.html:665:<score-partwise version="3.1">
quintet_composer_v32_COMPOSER_PROFILES.html:706:        <divisions>${DIVISIONS}</divisions>
quintet_composer_v32_COMPOSER_PROFILES.html:757:        <duration>${noteData.duration}</duration>
quintet_composer_v32_COMPOSER_PROFILES.html:758:        <type>${getDurationType(noteData.duration)}</type>`;
quintet_composer_v32_COMPOSER_PROFILES.html:781:</score-partwise>`;
quintet_composer_v32_COMPOSER_PROFILES.html:787:        function getDurationType(duration) {
quintet_composer_v32_COMPOSER_PROFILES.html:788:            if (duration >= 1024) return 'whole';
quintet_composer_v32_COMPOSER_PROFILES.html:789:            if (duration >= 512) return 'half';
quintet_composer_v32_COMPOSER_PROFILES.html:790:            if (duration >= 384) return 'dotted-quarter';
quintet_composer_v32_COMPOSER_PROFILES.html:791:            if (duration >= 256) return 'quarter';
quintet_composer_v32_COMPOSER_PROFILES.html:792:            if (duration >= 128) return 'eighth';
quintet_composer_v32_COMPOSER_PROFILES.html:802:                const musicXML = generateMusicXML();
quintet_composer_v40_WORKING.html:217:            document.getElementById('generateBtn').addEventListener('click', generateMusicXML);
quintet_composer_v40_WORKING.html:229:        function generateMusicXML() {
quintet_composer_v40_WORKING.html:236:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v40_WORKING.html:237:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v40_WORKING.html:278:                        xml += '        <divisions>4</divisions>\n'; // 4 divisions per quarter note
quintet_composer_v40_WORKING.html:332:                        xml += `        <duration>${note.duration}</duration>\n`; // Duration in divisions
quintet_composer_v40_WORKING.html:347:            xml += '</score-partwise>\n';
quintet_composer_v40_WORKING.html:385:                        duration: 2, // eighth note = 2 divisions
quintet_composer_v40_WORKING.html:391:                notes.push({ step: 'C', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:392:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:393:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:394:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:397:                notes.push({ step: 'C', octave: baseOctave, duration: 8, type: 'half' });
quintet_composer_v40_WORKING.html:398:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:399:                notes.push({ step: 'C', octave: baseOctave + 1, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:402:                notes.push({ step: 'E', octave: baseOctave, duration: 6, type: 'quarter', dot: true });
quintet_composer_v40_WORKING.html:403:                notes.push({ step: 'F', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:404:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:405:                notes.push({ step: 'A', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:409:                    notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:410:                    notes.push({ step: 'E', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:414:                notes.push({ step: 'C', octave: baseOctave, duration: 16, type: 'whole' });
quintet_composer_v40_WORKING.html:417:                notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:418:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:419:                notes.push({ step: 'G', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:420:                notes.push({ step: 'B', octave: baseOctave, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:221:                <button id="generateMusicXML" class="btn-musicxml">
quintet_composer_v41_AUTHENTIC_MIDI.html:411:            document.getElementById('generateMusicXML').addEventListener('click', exportMusicXML);
quintet_composer_v41_AUTHENTIC_MIDI.html:479:                            duration: 1, // 16th note
quintet_composer_v41_AUTHENTIC_MIDI.html:485:                    notes.push({ pitch: chord.root, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:486:                    notes.push({ pitch: chord.root - 5, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:487:                    notes.push({ pitch: chord.root - 3, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:488:                    notes.push({ pitch: chord.root + 2, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:495:                            duration: 2,
quintet_composer_v41_AUTHENTIC_MIDI.html:504:                    notes.push({ pitch: chord.notes[2] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:505:                    notes.push({ pitch: chord.notes[1] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:506:                    notes.push({ pitch: chord.notes[0] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:514:                            duration: 2,
quintet_composer_v41_AUTHENTIC_MIDI.html:520:                    notes.push({ pitch: chord.notes[1], duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:526:                    notes.push({ pitch: chord.root, duration: 12, type: 'half', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:527:                    notes.push({ pitch: chord.root + 7, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:530:                    notes.push({ pitch: chord.notes[0], duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:531:                    notes.push({ pitch: chord.notes[1], duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:532:                    notes.push({ pitch: chord.notes[2], duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:542:                        notes.push({ pitch: startNote + 12, duration: 6, type: 'quarter', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:543:                        notes.push({ pitch: startNote + 14, duration: 2, type: 'eighth' });
quintet_composer_v41_AUTHENTIC_MIDI.html:544:                        notes.push({ pitch: startNote + 16, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:547:                        notes.push({ pitch: startNote, duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:551:                    notes.push({ pitch: chord.root, duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:559:                        duration: 2,
quintet_composer_v41_AUTHENTIC_MIDI.html:567:                    notes.push({ pitch: chord.notes[2] + 12, duration: 3, type: 'eighth', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:568:                    notes.push({ pitch: chord.notes[3] + 12, duration: 1, type: '16th' });
quintet_composer_v41_AUTHENTIC_MIDI.html:569:                    notes.push({ pitch: chord.notes[1] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:570:                    notes.push({ pitch: chord.notes[0] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:573:                    notes.push({ pitch: chord.root, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:574:                    notes.push({ pitch: chord.root + 5, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:575:                    notes.push({ pitch: chord.root + 7, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:576:                    notes.push({ pitch: chord.root + 3, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:579:                    notes.push({ pitch: 0, duration: 3, type: 'eighth', rest: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:580:                    notes.push({ pitch: chord.notes[1], duration: 3, type: 'eighth', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:581:                    notes.push({ pitch: 0, duration: 2, type: 'eighth', rest: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:582:                    notes.push({ pitch: chord.notes[2], duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:587:                    notes.push({ pitch: chord.notes[0] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:588:                    notes.push({ pitch: chord.notes[2] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:591:                    notes.push({ pitch: chord.root, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:592:                    notes.push({ pitch: chord.root + 7, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:650:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:651:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:683:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:717:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:727:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:740:            xml += '</score-partwise>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:798:                            const duration = note.duration * (ppq / 4); // Convert to MIDI ticks
quintet_composer_v41_AUTHENTIC_MIDI.html:805:                            track.push(...variableLengthValue(duration));
quintet_composer_v41_AUTHENTIC_MIDI.html:809:                            const duration = note.duration * (ppq / 4);
quintet_composer_v41_AUTHENTIC_MIDI.html:810:                            currentTime += duration;
quintet_composer_v42_1_RANGE_FIX.html:235:                <button id="generateMusicXML" class="btn-musicxml">📄 Export MusicXML</button>
quintet_composer_v42_1_RANGE_FIX.html:565:                        measureNotes.push({ pitch, duration: 4, type: 'quarter' });
quintet_composer_v42_1_RANGE_FIX.html:573:                    pattern.forEach(duration => {
quintet_composer_v42_1_RANGE_FIX.html:583:                            duration, 
quintet_composer_v42_1_RANGE_FIX.html:584:                            type: duration === 4 ? 'quarter' : 'eighth' 
quintet_composer_v42_1_RANGE_FIX.html:599:                            measureNotes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:610:                                measureNotes.push({ pitch, duration: 1, type: '16th' });
quintet_composer_v42_1_RANGE_FIX.html:664:                notes.push({ pitch: chord[0] - 12, duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:665:                notes.push({ pitch: chord[0] - 17, duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:673:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:679:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:683:                    notes.push({ pitch: chord[0], duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:684:                    notes.push({ pitch: chord[1], duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:688:                notes.push({ pitch: chord[1], duration: 16, type: 'whole' });
quintet_composer_v42_1_RANGE_FIX.html:731:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v42_1_RANGE_FIX.html:732:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v42_1_RANGE_FIX.html:764:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v42_1_RANGE_FIX.html:797:                        xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v42_1_RANGE_FIX.html:809:            xml += '</score-partwise>\n';
quintet_composer_v42_1_RANGE_FIX.html:859:                        const duration = note.duration * (ppq / 4);
quintet_composer_v42_1_RANGE_FIX.html:864:                        track.push(...variableLengthValue(duration));
quintet_composer_v42_1_RANGE_FIX.html:996:            document.getElementById('generateMusicXML').addEventListener('click', exportMusicXML);
quintet_composer_v42_TRIADGEN.html:217:                <button id="generateMusicXML" class="btn-musicxml">📄 Export MusicXML</button>
quintet_composer_v42_TRIADGEN.html:541:                        measureNotes.push({ pitch, duration: 4, type: 'quarter' });
quintet_composer_v42_TRIADGEN.html:549:                    pattern.forEach(duration => {
quintet_composer_v42_TRIADGEN.html:554:                            duration, 
quintet_composer_v42_TRIADGEN.html:555:                            type: duration === 4 ? 'quarter' : 'eighth' 
quintet_composer_v42_TRIADGEN.html:565:                            measureNotes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:571:                                measureNotes.push({ pitch, duration: 1, type: '16th' });
quintet_composer_v42_TRIADGEN.html:625:                notes.push({ pitch: chord[0] - 12, duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:626:                notes.push({ pitch: chord[0] - 17, duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:634:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:640:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:644:                    notes.push({ pitch: chord[0], duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:645:                    notes.push({ pitch: chord[1], duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:649:                notes.push({ pitch: chord[1], duration: 16, type: 'whole' });
quintet_composer_v42_TRIADGEN.html:692:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v42_TRIADGEN.html:693:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v42_TRIADGEN.html:725:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v42_TRIADGEN.html:758:                        xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v42_TRIADGEN.html:770:            xml += '</score-partwise>\n';
quintet_composer_v42_TRIADGEN.html:820:                        const duration = note.duration * (ppq / 4);
quintet_composer_v42_TRIADGEN.html:825:                        track.push(...variableLengthValue(duration));
quintet_composer_v42_TRIADGEN.html:957:            document.getElementById('generateMusicXML').addEventListener('click', exportMusicXML);
quintet_composer_v56_FINAL.html:350:                            duration: 1,
quintet_composer_v56_FINAL.html:365:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet_composer_v56_FINAL.html:366:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet_composer_v56_FINAL.html:377:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet_composer_v56_FINAL.html:394:                            duration: 0.5,
quintet_composer_v56_FINAL.html:421:                for (const duration of rhythms) {
quintet_composer_v56_FINAL.html:441:                        duration: duration,
quintet_composer_v56_FINAL.html:445:                    beatCount += duration;
quintet_composer_v56_FINAL.html:466:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 4, isChord: false });
quintet_composer_v56_FINAL.html:468:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:469:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:488:                    [{ note: notes[0], duration: 2 }, { note: notes[1], duration: 2 }] :
quintet_composer_v56_FINAL.html:489:                    [{ note: notes[1], duration: 4 }];
quintet_composer_v56_FINAL.html:494:                        duration: p.duration,
quintet_composer_v56_FINAL.html:517:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:518:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:520:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 4, isChord: false });
quintet_composer_v56_FINAL.html:554:            const beatDuration = 60 / tempo;
quintet_composer_v56_FINAL.html:568:                                    playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume);
quintet_composer_v56_FINAL.html:572:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet_composer_v56_FINAL.html:576:                        beatTime += event.duration * beatDuration;
quintet_composer_v56_FINAL.html:579:                    measureTime += 4 * beatDuration;
quintet_composer_v56_FINAL.html:583:            const totalDuration = composition.measures * 4 * beatDuration;
quintet_composer_v56_FINAL.html:589:            }, totalDuration * 1000);
quintet_composer_v56_FINAL.html:594:        function playNote(midi, startTime, duration, instrument, volume) {
quintet_composer_v56_FINAL.html:621:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.05);
quintet_composer_v56_FINAL.html:622:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v56_FINAL.html:628:            oscillator.stop(startTime + duration);
quintet_composer_v56_FINAL.html:647:            const xml = generateMusicXML(composition);
quintet_composer_v56_FINAL.html:659:        function generateMusicXML(comp) {
quintet_composer_v56_FINAL.html:661:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v56_FINAL.html:662:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v56_FINAL.html:689:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v56_FINAL.html:710:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v56_FINAL.html:715:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet_composer_v56_FINAL.html:727:            xml += '</score-partwise>\n';
quintet_composer_v56_FINAL.html:731:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v56_FINAL.html:748:            xml += `        <duration>${Math.floor(duration)}</duration>\n`;
quintet_composer_v56_FINAL.html:749:            xml += '        <type>' + getDurationType(duration) + '</type>\n';
quintet_composer_v56_FINAL.html:755:        function getDurationType(duration) {
quintet_composer_v56_FINAL.html:756:            if (duration >= 1024) return 'whole';
quintet_composer_v56_FINAL.html:757:            if (duration >= 512) return 'half';
quintet_composer_v56_FINAL.html:758:            if (duration >= 256) return 'quarter';
quintet_composer_v56_FINAL.html:759:            if (duration >= 128) return 'eighth';
quintet_composer_v57_BULLETPROOF.html:329:                            duration: 1,
quintet_composer_v57_BULLETPROOF.html:342:                        measure.push({ notes: [bass], duration: 0.5, isChord: false });
quintet_composer_v57_BULLETPROOF.html:343:                        measure.push({ notes: treble, duration: 0.5, isChord: true });
quintet_composer_v57_BULLETPROOF.html:357:                            duration: 0.5,
quintet_composer_v57_BULLETPROOF.html:384:                        duration: 2,
quintet_composer_v57_BULLETPROOF.html:389:                        duration: 2,
quintet_composer_v57_BULLETPROOF.html:394:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:395:                    measure.push({ notes: [base + 2], duration: 1, isChord: false });
quintet_composer_v57_BULLETPROOF.html:396:                    measure.push({ notes: [base - 1], duration: 1, isChord: false });
quintet_composer_v57_BULLETPROOF.html:419:                        duration: 4,
quintet_composer_v57_BULLETPROOF.html:423:                    measure.push({ notes: [base], duration: 4, isChord: false });
quintet_composer_v57_BULLETPROOF.html:446:                        duration: 2,
quintet_composer_v57_BULLETPROOF.html:449:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:451:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:452:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:475:                        duration: 4,
quintet_composer_v57_BULLETPROOF.html:479:                    measure.push({ notes: [root], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:480:                    measure.push({ notes: [root + 7], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:526:                const beatDuration = 60 / tempo;
quintet_composer_v57_BULLETPROOF.html:539:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet_composer_v57_BULLETPROOF.html:542:                            beatTime += event.duration * beatDuration;
quintet_composer_v57_BULLETPROOF.html:545:                        measureTime += 4 * beatDuration;
quintet_composer_v57_BULLETPROOF.html:549:                const totalDuration = composition.measures * 4 * beatDuration;
quintet_composer_v57_BULLETPROOF.html:555:                }, totalDuration * 1000);
quintet_composer_v57_BULLETPROOF.html:565:        function playNote(midi, startTime, duration, instrument) {
quintet_composer_v57_BULLETPROOF.html:593:                gainNode.gain.setValueAtTime(volume, startTime + duration - 0.05);
quintet_composer_v57_BULLETPROOF.html:594:                gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v57_BULLETPROOF.html:600:                oscillator.stop(startTime + duration);
quintet_composer_v57_BULLETPROOF.html:623:                const xml = generateMusicXML(composition);
quintet_composer_v57_BULLETPROOF.html:639:        function generateMusicXML(comp) {
quintet_composer_v57_BULLETPROOF.html:641:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v57_BULLETPROOF.html:642:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v57_BULLETPROOF.html:666:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v57_BULLETPROOF.html:680:                                xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v57_BULLETPROOF.html:691:            xml += '</score-partwise>\n';
quintet_composer_v57_BULLETPROOF.html:695:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v57_BULLETPROOF.html:712:            xml += '        <duration>' + Math.floor(duration) + '</duration>\n';
quintet_composer_v57_BULLETPROOF.html:713:            xml += '        <type>' + getDurationType(duration) + '</type>\n';
quintet_composer_v57_BULLETPROOF.html:719:        function getDurationType(duration) {
quintet_composer_v57_BULLETPROOF.html:720:            if (duration >= 1024) return 'whole';
quintet_composer_v57_BULLETPROOF.html:721:            if (duration >= 512) return 'half';
quintet_composer_v57_BULLETPROOF.html:722:            if (duration >= 256) return 'quarter';
quintet_composer_v57_BULLETPROOF.html:723:            if (duration >= 128) return 'eighth';
quintet_composer_v57_MULTIPLE_STOPS.html:444:                            duration: 1,
quintet_composer_v57_MULTIPLE_STOPS.html:459:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet_composer_v57_MULTIPLE_STOPS.html:460:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet_composer_v57_MULTIPLE_STOPS.html:470:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet_composer_v57_MULTIPLE_STOPS.html:483:                            duration: i < 4 ? 0.5 : 1,
quintet_composer_v57_MULTIPLE_STOPS.html:506:                    const duration = Math.random() > 0.7 ? 2 : 1;
quintet_composer_v57_MULTIPLE_STOPS.html:522:                            duration: duration,
quintet_composer_v57_MULTIPLE_STOPS.html:530:                            duration: duration,
quintet_composer_v57_MULTIPLE_STOPS.html:536:                    beatCount += duration;
quintet_composer_v57_MULTIPLE_STOPS.html:563:                        duration: 4, 
quintet_composer_v57_MULTIPLE_STOPS.html:568:                    measure.push({ notes: [baseNote], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:577:                            duration: 2, 
quintet_composer_v57_MULTIPLE_STOPS.html:582:                        measure.push({ notes: [secondNote], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:607:                        measure.push({ notes: stop1, duration: 2, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:609:                        measure.push({ notes: [note1], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:612:                    measure.push({ notes: [noteToMidi(notes[1], 3)], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:618:                        measure.push({ notes: stop, duration: 4, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:620:                        measure.push({ notes: [baseNote], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:645:                        measure.push({ notes: stop, duration: 2, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:647:                        measure.push({ notes: [root], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:650:                    measure.push({ notes: [noteToMidi(chord.notes[2], 2)], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:656:                            measure.push({ notes: tripleStop, duration: 4, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:658:                            measure.push({ notes: [root], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:661:                        measure.push({ notes: [root], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:714:            const beatDuration = 60 / tempo;
quintet_composer_v57_MULTIPLE_STOPS.html:729:                                playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume, detune);
quintet_composer_v57_MULTIPLE_STOPS.html:732:                        beatTime += event.duration * beatDuration;
quintet_composer_v57_MULTIPLE_STOPS.html:735:                    measureTime += 4 * beatDuration;
quintet_composer_v57_MULTIPLE_STOPS.html:739:            const totalDuration = composition.measures * 4 * beatDuration;
quintet_composer_v57_MULTIPLE_STOPS.html:745:            }, totalDuration * 1000);
quintet_composer_v57_MULTIPLE_STOPS.html:750:        function playNote(midi, startTime, duration, instrument, volume, detune = 0) {
quintet_composer_v57_MULTIPLE_STOPS.html:779:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.1);
quintet_composer_v57_MULTIPLE_STOPS.html:780:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v57_MULTIPLE_STOPS.html:786:            oscillator.stop(startTime + duration);
quintet_composer_v57_MULTIPLE_STOPS.html:805:            const xml = generateMusicXML(composition);
quintet_composer_v57_MULTIPLE_STOPS.html:817:        function generateMusicXML(comp) {
quintet_composer_v57_MULTIPLE_STOPS.html:819:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v57_MULTIPLE_STOPS.html:820:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v57_MULTIPLE_STOPS.html:847:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:869:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v57_MULTIPLE_STOPS.html:874:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet_composer_v57_MULTIPLE_STOPS.html:886:            xml += '</score-partwise>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:890:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v57_MULTIPLE_STOPS.html:907:            xml += `        <duration>${Math.floor(duration)}</duration>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:908:            xml += '        <type>' + getDurationType(duration) + '</type>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:914:        function getDurationType(duration) {
quintet_composer_v57_MULTIPLE_STOPS.html:915:            if (duration >= 1024) return 'whole';
quintet_composer_v57_MULTIPLE_STOPS.html:916:            if (duration >= 512) return 'half';
quintet_composer_v57_MULTIPLE_STOPS.html:917:            if (duration >= 256) return 'quarter';
quintet_composer_v57_MULTIPLE_STOPS.html:918:            if (duration >= 128) return 'eighth';
quintet_composer_v57_SIBELIUS_FIX.html:353:                        duration: 1,
quintet_composer_v57_SIBELIUS_FIX.html:359:                events.push({ notes: [chord[0] - 12].filter(n => n >= 40), duration: 0.5 });
quintet_composer_v57_SIBELIUS_FIX.html:360:                events.push({ notes: [chord[1], chord[2]].filter(n => n <= 67), duration: 0.5, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:361:                events.push({ notes: [chord[2] - 12].filter(n => n >= 40), duration: 0.5 });
quintet_composer_v57_SIBELIUS_FIX.html:362:                events.push({ notes: [chord[0], chord[1]].filter(n => n <= 67), duration: 0.5, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:367:                events.push({ notes: classicalChord, duration: 4, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:373:                    events.push({ notes: [note], duration: 0.666 });
quintet_composer_v57_SIBELIUS_FIX.html:398:                events.push({ notes: [note], duration: rhythms[i] });
quintet_composer_v57_SIBELIUS_FIX.html:431:            events.push({ notes: [note], duration: 4 });
quintet_composer_v57_SIBELIUS_FIX.html:507:                        duration: event.duration,
quintet_composer_v57_SIBELIUS_FIX.html:582:            const beatDuration = 60 / tempo;
quintet_composer_v57_SIBELIUS_FIX.html:595:                            const startTime = audioContext.currentTime + (beatPosition * beatDuration);
quintet_composer_v57_SIBELIUS_FIX.html:598:                                playNote(note, startTime, event.duration * beatDuration, instrument, index > 0);
quintet_composer_v57_SIBELIUS_FIX.html:602:                        beatPosition += event.duration;
quintet_composer_v57_SIBELIUS_FIX.html:607:                    await new Promise(resolve => setTimeout(resolve, 4 * beatDuration * 1000));
quintet_composer_v57_SIBELIUS_FIX.html:616:        function playNote(midiNote, startTime, duration, instrument, isMultipleStop = false) {
quintet_composer_v57_SIBELIUS_FIX.html:646:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v57_SIBELIUS_FIX.html:652:            oscillator.stop(startTime + duration);
quintet_composer_v57_SIBELIUS_FIX.html:666:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v57_SIBELIUS_FIX.html:667:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v57_SIBELIUS_FIX.html:694:                xml += '        <divisions>4</divisions>\n';
quintet_composer_v57_SIBELIUS_FIX.html:742:            xml += '</score-partwise>';
quintet_composer_v57_SIBELIUS_FIX.html:775:                        // Duration
quintet_composer_v57_SIBELIUS_FIX.html:776:                        xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v57_SIBELIUS_FIX.html:779:                        const noteType = getNoteType(event.duration);
quintet_composer_v57_SIBELIUS_FIX.html:806:        function getNoteType(duration) {
quintet_composer_v57_SIBELIUS_FIX.html:807:            if (duration >= 4) return 'whole';
quintet_composer_v57_SIBELIUS_FIX.html:808:            if (duration >= 2) return 'half';
quintet_composer_v57_SIBELIUS_FIX.html:809:            if (duration >= 1) return 'quarter';
quintet_composer_v57_SIBELIUS_FIX.html:810:            if (duration >= 0.5) return 'eighth';
quintet_composer_v58_FAILSAFE.html:369:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:370:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:371:                events.push({ notes: [chordTones[2]], duration: 2 });
quintet_composer_v58_FAILSAFE.html:373:                events.push({ notes: [chordTones[2]], duration: 2 });
quintet_composer_v58_FAILSAFE.html:374:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:375:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:377:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:378:                events.push({ notes: [chordTones[2]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:379:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:380:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:401:                events.push({ notes: [guitarChord[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:402:                events.push({ notes: guitarChord.slice(1, 4), duration: 1, isChord: true });
quintet_composer_v58_FAILSAFE.html:403:                events.push({ notes: guitarChord.slice(1, 4), duration: 1, isChord: true });
quintet_composer_v58_FAILSAFE.html:404:                events.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v58_FAILSAFE.html:408:                    events.push({ notes: [note], duration: 0.5 });
quintet_composer_v58_FAILSAFE.html:412:                events.push({ notes: guitarChord, duration: 4, isChord: true });
quintet_composer_v58_FAILSAFE.html:447:            events.push({ notes: [note], duration: 4 });
quintet_composer_v58_FAILSAFE.html:619:            const beatDuration = 60 / tempo;
quintet_composer_v58_FAILSAFE.html:639:                                    startTime + (beatPosition * beatDuration), 
quintet_composer_v58_FAILSAFE.html:640:                                    event.duration * beatDuration * 0.9, // Slight gap between notes
quintet_composer_v58_FAILSAFE.html:646:                        beatPosition += event.duration;
quintet_composer_v58_FAILSAFE.html:653:                        setTimeout(resolve, 4 * beatDuration * 1000)
quintet_composer_v58_FAILSAFE.html:663:        function playNote(midiNote, startTime, duration, instrument) {
quintet_composer_v58_FAILSAFE.html:688:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v58_FAILSAFE.html:694:            oscillator.stop(startTime + duration);
quintet_composer_v58_FAILSAFE.html:708:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v58_FAILSAFE.html:709:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v58_FAILSAFE.html:734:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v58_FAILSAFE.html:791:                                xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v58_FAILSAFE.html:792:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v58_FAILSAFE.html:798:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v58_FAILSAFE.html:799:                            xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v58_FAILSAFE.html:810:            xml += '</score-partwise>';
quintet_composer_v58_FAILSAFE.html:840:        function getNoteType(duration) {
quintet_composer_v58_FAILSAFE.html:841:            if (duration >= 4) return 'whole';
quintet_composer_v58_FAILSAFE.html:842:            if (duration >= 2) return 'half';
quintet_composer_v58_FAILSAFE.html:843:            if (duration >= 1) return 'quarter';
quintet_composer_v58_FAILSAFE.html:844:            if (duration >= 0.5) return 'eighth';
quintet_composer_v59_BULLETPROOF.html:302:                let totalDuration = 0;
quintet_composer_v59_BULLETPROOF.html:303:                pattern.forEach((duration, i) => {
quintet_composer_v59_BULLETPROOF.html:329:                        duration: duration
quintet_composer_v59_BULLETPROOF.html:332:                    totalDuration += duration;
quintet_composer_v59_BULLETPROOF.html:333:                    if (totalDuration >= 4) return;
quintet_composer_v59_BULLETPROOF.html:382:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:383:                    measureEvents.push({ notes: [note - 2], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:386:                    measureEvents.push({ notes: [note], duration: 4 });
quintet_composer_v59_BULLETPROOF.html:389:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:390:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:419:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v59_BULLETPROOF.html:423:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet_composer_v59_BULLETPROOF.html:424:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet_composer_v59_BULLETPROOF.html:428:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v59_BULLETPROOF.html:576:            const beatDuration = 60 / tempo;
quintet_composer_v59_BULLETPROOF.html:594:                                    startTime + (beatPosition * beatDuration),
quintet_composer_v59_BULLETPROOF.html:595:                                    event.duration * beatDuration * 0.9,
quintet_composer_v59_BULLETPROOF.html:601:                        beatPosition += event.duration;
quintet_composer_v59_BULLETPROOF.html:607:                        setTimeout(resolve, 4 * beatDuration * 1000)
quintet_composer_v59_BULLETPROOF.html:617:        function playNote(midiNote, startTime, duration, instrument) {
quintet_composer_v59_BULLETPROOF.html:640:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v59_BULLETPROOF.html:646:            oscillator.stop(startTime + duration);
quintet_composer_v59_BULLETPROOF.html:660:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v59_BULLETPROOF.html:661:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v59_BULLETPROOF.html:684:                        xml += '        <divisions>4</divisions>\n';
quintet_composer_v59_BULLETPROOF.html:737:                                xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v59_BULLETPROOF.html:738:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v59_BULLETPROOF.html:750:            xml += '</score-partwise>';
quintet_composer_v59_BULLETPROOF.html:778:        function getNoteType(duration) {
quintet_composer_v59_BULLETPROOF.html:779:            if (duration >= 4) return 'whole';
quintet_composer_v59_BULLETPROOF.html:780:            if (duration >= 2) return 'half';
quintet_composer_v59_BULLETPROOF.html:781:            if (duration >= 1) return 'quarter';
quintet_composer_v59_BULLETPROOF.html:782:            if (duration >= 0.5) return 'eighth';
quintet_composer_v59_BULLETPROOF_RESTORED.html:317:                            duration: 1,
quintet_composer_v59_BULLETPROOF_RESTORED.html:325:                        duration: 2,
quintet_composer_v59_BULLETPROOF_RESTORED.html:330:                        duration: 2,
quintet_composer_v59_BULLETPROOF_RESTORED.html:338:                            duration: 1.33,
quintet_composer_v59_BULLETPROOF_RESTORED.html:383:                        duration: rhythm,
quintet_composer_v59_BULLETPROOF_RESTORED.html:428:                    duration: 4,
quintet_composer_v59_BULLETPROOF_RESTORED.html:461:                    duration: 2,
quintet_composer_v59_BULLETPROOF_RESTORED.html:467:                    duration: 2,
quintet_composer_v59_BULLETPROOF_RESTORED.html:511:            const beatDuration = 60 / currentTempo;
quintet_composer_v59_BULLETPROOF_RESTORED.html:520:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v59_BULLETPROOF_RESTORED.html:522:                        currentTime += event.duration * beatDuration;
quintet_composer_v59_BULLETPROOF_RESTORED.html:530:            }, composition.measures * 4 * beatDuration * 1000);
quintet_composer_v59_BULLETPROOF_RESTORED.html:533:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:558:            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
quintet_composer_v59_BULLETPROOF_RESTORED.html:561:            oscillator.stop(startTime + duration);
quintet_composer_v59_BULLETPROOF_RESTORED.html:579:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:580:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:601:                xml += '        <divisions>4</divisions>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:622:                        xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v59_BULLETPROOF_RESTORED.html:623:                        xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:642:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v59_BULLETPROOF_RESTORED.html:643:                            xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:654:            xml += '</score-partwise>';
quintet_composer_v59_BULLETPROOF_RESTORED.html:694:        function getDurationType(duration) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:695:            if (duration >= 4) return 'whole';
quintet_composer_v59_BULLETPROOF_RESTORED.html:696:            if (duration >= 2) return 'half';
quintet_composer_v59_BULLETPROOF_RESTORED.html:697:            if (duration >= 1) return 'quarter';
quintet_composer_v59_BULLETPROOF_RESTORED.html:698:            if (duration >= 0.5) return 'eighth';
quintet_composer_v60_ACTUALLY_WORKING.html:426:                        duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:431:                        duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:439:                            duration: 1,
quintet_composer_v60_ACTUALLY_WORKING.html:447:                        duration: 1,
quintet_composer_v60_ACTUALLY_WORKING.html:452:                        duration: 1,
quintet_composer_v60_ACTUALLY_WORKING.html:457:                        duration: 1,
quintet_composer_v60_ACTUALLY_WORKING.html:462:                        duration: 1,
quintet_composer_v60_ACTUALLY_WORKING.html:487:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet_composer_v60_ACTUALLY_WORKING.html:489:                    if (beatCount + duration > 4) break;
quintet_composer_v60_ACTUALLY_WORKING.html:507:                        duration: duration,
quintet_composer_v60_ACTUALLY_WORKING.html:511:                    beatCount += duration;
quintet_composer_v60_ACTUALLY_WORKING.html:540:                        duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:545:                        duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:551:                        duration: 4,
quintet_composer_v60_ACTUALLY_WORKING.html:580:                    duration: 4,
quintet_composer_v60_ACTUALLY_WORKING.html:614:                    duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:619:                    duration: 2,
quintet_composer_v60_ACTUALLY_WORKING.html:668:            const beatDuration = 60 / currentTempo;
quintet_composer_v60_ACTUALLY_WORKING.html:677:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v60_ACTUALLY_WORKING.html:679:                        currentTime += event.duration * beatDuration;
quintet_composer_v60_ACTUALLY_WORKING.html:687:            }, composition.measures * 4 * beatDuration * 1000);
quintet_composer_v60_ACTUALLY_WORKING.html:690:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v60_ACTUALLY_WORKING.html:715:            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
quintet_composer_v60_ACTUALLY_WORKING.html:718:            oscillator.stop(startTime + duration);
quintet_composer_v60_ACTUALLY_WORKING.html:736:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v60_ACTUALLY_WORKING.html:737:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v60_ACTUALLY_WORKING.html:758:                xml += '        <divisions>4</divisions>\n';
quintet_composer_v60_ACTUALLY_WORKING.html:785:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v60_ACTUALLY_WORKING.html:786:                            xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet_composer_v60_ACTUALLY_WORKING.html:797:            xml += '</score-partwise>';
quintet_composer_v60_ACTUALLY_WORKING.html:837:        function getDurationType(duration) {
quintet_composer_v60_ACTUALLY_WORKING.html:838:            if (duration >= 4) return 'whole';
quintet_composer_v60_ACTUALLY_WORKING.html:839:            if (duration >= 2) return 'half';
quintet_composer_v60_ACTUALLY_WORKING.html:840:            if (duration >= 1) return 'quarter';
quintet_composer_v60_ACTUALLY_WORKING.html:841:            if (duration >= 0.5) return 'eighth';
quintet_composer_v60_COMPOSER_PROFILES.html:576:                let totalDuration = 0;
quintet_composer_v60_COMPOSER_PROFILES.html:577:                rhythmPattern.forEach((duration, i) => {
quintet_composer_v60_COMPOSER_PROFILES.html:613:                        duration: duration,
quintet_composer_v60_COMPOSER_PROFILES.html:617:                    totalDuration += duration;
quintet_composer_v60_COMPOSER_PROFILES.html:618:                    if (totalDuration >= 4) return;
quintet_composer_v60_COMPOSER_PROFILES.html:645:                            duration: 0.5 
quintet_composer_v60_COMPOSER_PROFILES.html:652:                        duration: 4, 
quintet_composer_v60_COMPOSER_PROFILES.html:658:                    measureEvents.push({ notes: voicing, duration: 1, isChord: true, accent: true });
quintet_composer_v60_COMPOSER_PROFILES.html:659:                    measureEvents.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v60_COMPOSER_PROFILES.html:660:                    measureEvents.push({ notes: voicing, duration: 1, isChord: true, accent: true });
quintet_composer_v60_COMPOSER_PROFILES.html:661:                    measureEvents.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v60_COMPOSER_PROFILES.html:664:                    measureEvents.push({ notes: [voicing[0]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:665:                    measureEvents.push({ notes: [voicing[2]], duration: 0.5 }); // Index
quintet_composer_v60_COMPOSER_PROFILES.html:666:                    measureEvents.push({ notes: [voicing[1]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:667:                    measureEvents.push({ notes: [voicing[3]], duration: 0.5 }); // Middle
quintet_composer_v60_COMPOSER_PROFILES.html:668:                    measureEvents.push({ notes: [voicing[0]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:669:                    measureEvents.push({ notes: [voicing[2]], duration: 0.5 }); // Index
quintet_composer_v60_COMPOSER_PROFILES.html:670:                    measureEvents.push({ notes: [voicing[1]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:671:                    measureEvents.push({ notes: [voicing[3]], duration: 0.5 }); // Ring
quintet_composer_v60_COMPOSER_PROFILES.html:675:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:828:                    measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:829:                    measureEvents.push({ notes: [note + 2], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:830:                    measureEvents.push({ notes: [note - 1], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:831:                    measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:834:                    measureEvents.push({ notes: [note], duration: 4 });
quintet_composer_v60_COMPOSER_PROFILES.html:837:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v60_COMPOSER_PROFILES.html:838:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet_composer_v60_COMPOSER_PROFILES.html:918:            const beatDuration = 60 / tempo;
quintet_composer_v60_COMPOSER_PROFILES.html:934:                                playNote(note, startTime + (beatPosition * beatDuration), 
quintet_composer_v60_COMPOSER_PROFILES.html:935:                                        event.duration * beatDuration * 0.9, instrument,
quintet_composer_v60_COMPOSER_PROFILES.html:940:                        beatPosition += event.duration;
quintet_composer_v60_COMPOSER_PROFILES.html:946:                        setTimeout(resolve, 4 * beatDuration * 1000)
quintet_composer_v60_COMPOSER_PROFILES.html:956:        function playNote(midiNote, startTime, duration, instrument, dynamics, articulation) {
quintet_composer_v60_COMPOSER_PROFILES.html:991:                gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration * 0.3);
quintet_composer_v60_COMPOSER_PROFILES.html:996:                gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet_composer_v60_COMPOSER_PROFILES.html:1003:            oscillator.stop(startTime + duration);
quintet_composer_v60_COMPOSER_PROFILES.html:1020:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v60_COMPOSER_PROFILES.html:1021:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v60_COMPOSER_PROFILES.html:1062:        function getNoteType(duration) {
quintet_composer_v60_COMPOSER_PROFILES.html:1063:            if (duration >= 4) return 'whole';
quintet_composer_v60_COMPOSER_PROFILES.html:1064:            if (duration >= 2) return 'half';
quintet_composer_v60_COMPOSER_PROFILES.html:1065:            if (duration >= 1) return 'quarter';
quintet_composer_v60_COMPOSER_PROFILES.html:1066:            if (duration >= 0.5) return 'eighth';
quintet_composer_v60_COMPOSER_PROFILES.html:1067:            if (duration >= 0.25) return 'sixteenth';
quintet_composer_v61_OCTAVE_FIX.html:436:                        duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:441:                        duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:449:                            duration: 1,
quintet_composer_v61_OCTAVE_FIX.html:457:                        duration: 1,
quintet_composer_v61_OCTAVE_FIX.html:462:                        duration: 1,
quintet_composer_v61_OCTAVE_FIX.html:467:                        duration: 1,
quintet_composer_v61_OCTAVE_FIX.html:472:                        duration: 1,
quintet_composer_v61_OCTAVE_FIX.html:497:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet_composer_v61_OCTAVE_FIX.html:499:                    if (beatCount + duration > 4) break;
quintet_composer_v61_OCTAVE_FIX.html:517:                        duration: duration,
quintet_composer_v61_OCTAVE_FIX.html:521:                    beatCount += duration;
quintet_composer_v61_OCTAVE_FIX.html:550:                        duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:555:                        duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:561:                        duration: 4,
quintet_composer_v61_OCTAVE_FIX.html:590:                    duration: 4,
quintet_composer_v61_OCTAVE_FIX.html:624:                    duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:629:                    duration: 2,
quintet_composer_v61_OCTAVE_FIX.html:678:            const beatDuration = 60 / currentTempo;
quintet_composer_v61_OCTAVE_FIX.html:687:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v61_OCTAVE_FIX.html:689:                        currentTime += event.duration * beatDuration;
quintet_composer_v61_OCTAVE_FIX.html:697:            }, composition.measures * 4 * beatDuration * 1000);
quintet_composer_v61_OCTAVE_FIX.html:700:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v61_OCTAVE_FIX.html:725:            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
quintet_composer_v61_OCTAVE_FIX.html:728:            oscillator.stop(startTime + duration);
quintet_composer_v61_OCTAVE_FIX.html:746:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v61_OCTAVE_FIX.html:747:            xml += '<score-partwise version="3.1">\n';
quintet_composer_v61_OCTAVE_FIX.html:768:                xml += '        <divisions>4</divisions>\n';
quintet_composer_v61_OCTAVE_FIX.html:795:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet_composer_v61_OCTAVE_FIX.html:796:                            xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet_composer_v61_OCTAVE_FIX.html:807:            xml += '</score-partwise>';
quintet_composer_v61_OCTAVE_FIX.html:847:        function getDurationType(duration) {
quintet_composer_v61_OCTAVE_FIX.html:848:            if (duration >= 4) return 'whole';
quintet_composer_v61_OCTAVE_FIX.html:849:            if (duration >= 2) return 'half';
quintet_composer_v61_OCTAVE_FIX.html:850:            if (duration >= 1) return 'quarter';
quintet_composer_v61_OCTAVE_FIX.html:851:            if (duration >= 0.5) return 'eighth';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:616:                rhythms.forEach(duration => {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:622:                        duration: duration
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:635:                    duration: 4
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:644:                    duration: 4
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:653:                    duration: 4,
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:666:                    const divisions = 4;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:669:                    xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:670:                    xml += '<score-partwise version="3.1">\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:712:                        xml += `        <divisions>${divisions}</divisions>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:739:                                xml += this.noteToMusicXML(note, divisions);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:750:                                    xml += this.noteToMusicXML(note, divisions);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:759:                    xml += '</score-partwise>\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:777:            noteToMusicXML(note, divisions) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:797:                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:798:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:804:            durationToType(duration) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:805:                // BULLETPROOF: Map duration to note type
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:812:                return types[duration] || 'quarter';
quintet_composer_v63_REAL_FIXES.html:176:                this.divisions = 256;
quintet_composer_v63_REAL_FIXES.html:224:                            duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:230:                            duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:241:                                duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:251:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:256:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:262:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:267:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:289:                let remainingDuration = 4;
quintet_composer_v63_REAL_FIXES.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v63_REAL_FIXES.html:291:                    if (remainingDuration >= duration) {
quintet_composer_v63_REAL_FIXES.html:295:                            duration: this.divisions * duration,
quintet_composer_v63_REAL_FIXES.html:296:                            type: duration === 2 ? 'half' : duration === 1 ? 'quarter' : 'eighth'
quintet_composer_v63_REAL_FIXES.html:298:                        remainingDuration -= duration;
quintet_composer_v63_REAL_FIXES.html:321:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:326:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:331:                            duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:339:                            duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:344:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:349:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:357:                            duration: this.divisions / 2,
quintet_composer_v63_REAL_FIXES.html:362:                            duration: this.divisions / 2,
quintet_composer_v63_REAL_FIXES.html:367:                            duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:372:                            duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:400:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:405:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:410:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:415:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:422:                        duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:427:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:432:                        duration: this.divisions,
quintet_composer_v63_REAL_FIXES.html:439:                        duration: this.divisions / 2,
quintet_composer_v63_REAL_FIXES.html:444:                        duration: this.divisions / 2,
quintet_composer_v63_REAL_FIXES.html:449:                        duration: this.divisions * 3,
quintet_composer_v63_REAL_FIXES.html:475:                    duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:480:                    duration: this.divisions * 2,
quintet_composer_v63_REAL_FIXES.html:562:            const xml = generateMusicXML(compositionData);
quintet_composer_v63_REAL_FIXES.html:566:        function generateMusicXML(data) {
quintet_composer_v63_REAL_FIXES.html:569:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v63_REAL_FIXES.html:570:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v63_REAL_FIXES.html:605:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v63_REAL_FIXES.html:632:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v63_REAL_FIXES.html:643:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v63_REAL_FIXES.html:655:            xml += '</score-partwise>';
quintet_composer_v64_GUITAR_FIXED.html:176:                this.divisions = 256;
quintet_composer_v64_GUITAR_FIXED.html:224:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:230:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:241:                                duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:251:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:256:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:262:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:267:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:289:                let remainingDuration = 4;
quintet_composer_v64_GUITAR_FIXED.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v64_GUITAR_FIXED.html:291:                    if (remainingDuration >= duration) {
quintet_composer_v64_GUITAR_FIXED.html:295:                            duration: this.divisions * duration,
quintet_composer_v64_GUITAR_FIXED.html:296:                            type: duration === 2 ? 'half' : duration === 1 ? 'quarter' : 'eighth'
quintet_composer_v64_GUITAR_FIXED.html:298:                        remainingDuration -= duration;
quintet_composer_v64_GUITAR_FIXED.html:321:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:326:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:331:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:339:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:344:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:349:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:357:                            duration: this.divisions / 2,
quintet_composer_v64_GUITAR_FIXED.html:362:                            duration: this.divisions / 2,
quintet_composer_v64_GUITAR_FIXED.html:367:                            duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:372:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:400:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:405:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:410:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:415:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:422:                        duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:427:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:432:                        duration: this.divisions,
quintet_composer_v64_GUITAR_FIXED.html:439:                        duration: this.divisions / 2,
quintet_composer_v64_GUITAR_FIXED.html:444:                        duration: this.divisions / 2,
quintet_composer_v64_GUITAR_FIXED.html:449:                        duration: this.divisions * 3,
quintet_composer_v64_GUITAR_FIXED.html:475:                    duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:480:                    duration: this.divisions * 2,
quintet_composer_v64_GUITAR_FIXED.html:563:            const xml = generateMusicXML(compositionData);
quintet_composer_v64_GUITAR_FIXED.html:567:        function generateMusicXML(data) {
quintet_composer_v64_GUITAR_FIXED.html:570:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v64_GUITAR_FIXED.html:571:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v64_GUITAR_FIXED.html:606:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v64_GUITAR_FIXED.html:634:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_FIXED.html:645:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_FIXED.html:657:            xml += '</score-partwise>';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:176:                this.divisions = 256;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:224:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:230:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:241:                                duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:251:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:256:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:262:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:267:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:289:                let remainingDuration = 4;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:290:                rhythmPattern.forEach(duration => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:291:                    if (remainingDuration >= duration) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:295:                            duration: this.divisions * duration,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:296:                            type: duration === 2 ? 'half' : duration === 1 ? 'quarter' : 'eighth'
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:298:                        remainingDuration -= duration;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:321:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:326:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:331:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:339:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:344:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:349:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:357:                            duration: this.divisions / 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:362:                            duration: this.divisions / 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:367:                            duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:372:                            duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:400:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:405:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:410:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:415:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:422:                        duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:427:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:432:                        duration: this.divisions,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:439:                        duration: this.divisions / 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:444:                        duration: this.divisions / 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:449:                        duration: this.divisions * 3,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:475:                    duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:480:                    duration: this.divisions * 2,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:562:            const xml = generateMusicXML(compositionData);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:566:        function generateMusicXML(data) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:569:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:570:            xml += '<score-partwise version="3.0">\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:605:                        xml += '        <divisions>256</divisions>\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:632:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:643:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:655:            xml += '</score-partwise>';
quintet_composer_v7_final.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v7_final.html:265:                        function addNote(startBeat, duration, vel) {
quintet_composer_v7_final.html:285:                                start: (m * divisions * 4) + startBeat,
quintet_composer_v7_final.html:286:                                duration: duration,
quintet_composer_v7_final.html:296:                                addNote(b * divisions, divisions, velocity);
quintet_composer_v7_final.html:300:                            addNote(0, divisions * 2, velocity);
quintet_composer_v7_final.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet_composer_v7_final.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet_composer_v7_final.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet_composer_v7_final.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet_composer_v7_final.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet_composer_v7_final.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet_composer_v7_final.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet_composer_v7_final.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet_composer_v7_final.html:324:                                addNote(0, divisions, velocity);
quintet_composer_v7_final.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet_composer_v7_final.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet_composer_v7_final.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet_composer_v7_final.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet_composer_v7_final.html:439:                        track.push.apply(track, varLength(duration));
quintet_composer_v7_final.html:444:                        lastTick = startTick + duration;
quintet_composer_v7_final.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v7_final.html:489:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_composer_v7_final.html:490:                xml += '<score-partwise version="3.0">\n';
quintet_composer_v7_final.html:520:                            xml += '        <divisions>' + divisions + '</divisions>\n';
quintet_composer_v7_final.html:554:                        var measureDuration = divisions * 4;
quintet_composer_v7_final.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet_composer_v7_final.html:562:                                var restDuration = noteStart - currentBeat;
quintet_composer_v7_final.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet_composer_v7_final.html:587:                            var duration = Math.max(1, note.duration);
quintet_composer_v7_final.html:588:                            xml += '        <duration>' + duration + '</duration>\n';
quintet_composer_v7_final.html:593:                            if (duration >= divisions * 4) {
quintet_composer_v7_final.html:595:                            } else if (duration >= divisions * 2) {
quintet_composer_v7_final.html:597:                            } else if (duration === divisions * 1.5) {
quintet_composer_v7_final.html:600:                            } else if (duration >= divisions) {
quintet_composer_v7_final.html:602:                            } else if (duration >= divisions * 0.5) {
quintet_composer_v7_final.html:614:                            currentBeat = noteStart + note.duration;
quintet_composer_v7_final.html:618:                        if (currentBeat < measureDuration) {
quintet_composer_v7_final.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v7_final.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_composer_v7_final.html:632:                xml += '</score-partwise>\n';
quintet_v62_real_music.html:360:                        duration: rhythms[i % rhythms.length],
quintet_v62_real_music.html:386:            generateClassicalPattern(chord, duration) {
quintet_v62_real_music.html:396:                for (let beat = 0; beat < duration; beat++) {
quintet_v62_real_music.html:399:                        duration: 0.25,
quintet_v62_real_music.html:404:                        duration: 0.25,
quintet_v62_real_music.html:411:            generateTravisPattern(chord, duration) {
quintet_v62_real_music.html:414:                for (let i = 0; i < duration * 2; i++) {
quintet_v62_real_music.html:418:                            duration: 0.5,
quintet_v62_real_music.html:424:                            duration: 0.5,
quintet_v62_real_music.html:432:            generateFlamencoPattern(chord, duration) {
quintet_v62_real_music.html:443:                for (let beat = 0; beat < duration; beat++) {
quintet_v62_real_music.html:447:                            duration: 0.25,
quintet_v62_real_music.html:456:            generateJazzComping(chord, duration) {
quintet_v62_real_music.html:460:                    { notes: [chord.root, chord.seventh, chord.third], duration: 1, technique: 'comp' },
quintet_v62_real_music.html:461:                    { notes: [chord.third, chord.seventh, chord.ninth], duration: 0.5, technique: 'comp' },
quintet_v62_real_music.html:462:                    { notes: [], duration: 0.5, technique: 'rest' } // Syncopation
quintet_v62_real_music.html:465:                for (let i = 0; i < duration; i++) {
quintet_v62_real_music.html:471:            generateFingerstyle(chord, duration) {
quintet_v62_real_music.html:475:                for (let beat = 0; beat < duration * 4; beat++) {
quintet_v62_real_music.html:479:                            duration: 0.25,
quintet_v62_real_music.html:485:                            duration: 0.25,
quintet_v62_real_music.html:491:                            duration: 0.25,
quintet_v62_real_music.html:499:            generateBossaNova(chord, duration) {
quintet_v62_real_music.html:504:                for (let i = 0; i < duration; i++) {
quintet_v62_real_music.html:507:                        duration: bossaRhythm[i % bossaRhythm.length],
quintet_v62_real_music.html:608:                        duration: item.duration
quintet_v62_real_music.html:637:                        duration: 1
quintet_v62_real_music.html:672:                        duration: 1
quintet_v62_real_music.html:790:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_v62_real_music.html:791:                xml += '<score-partwise version="3.1">\n';
quintet_v62_real_music.html:835:                            xml += '        <divisions>4</divisions>\n';
quintet_v62_real_music.html:866:                xml += '</score-partwise>\n';
quintet_v62_real_music.html:899:                xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v62_real_music.html:900:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_v62_real_music.html:921:                        xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v62_real_music.html:922:                        xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_v62_real_music.html:942:            // BULLETPROOF: Duration to note type
quintet_v62_real_music.html:943:            durationToType(duration) {
quintet_v62_real_music.html:951:                return types[duration] || 'quarter';
quintet_v62_real_music.html:976:                const totalDuration = this.composition.measures * 4 * (60000 / this.composition.tempo);
quintet_v62_real_music.html:981:                    }, totalDuration)
quintet_v63.html:200:                    duration: rhythms[i]
quintet_v63.html:215:                duration: 4 // Whole note
quintet_v63.html:227:                duration: 4
quintet_v63.html:237:                { pitch: chord.root, octave: 3, duration: 4 },
quintet_v63.html:238:                { pitch: chord.third, octave: 3, duration: 4 },
quintet_v63.html:239:                { pitch: chord.fifth, octave: 3, duration: 4 }
quintet_v63.html:322:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_v63.html:323:            xml += '<score-partwise version="3.1">\n';
quintet_v63.html:367:                        xml += '        <divisions>4</divisions>\n';
quintet_v63.html:398:                            xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v63.html:399:                            xml += `        <type>${getDurationType(note.duration)}</type>\n`;
quintet_v63.html:410:            xml += '</score-partwise>\n';
quintet_v63.html:424:        // TESTED: Get duration type
quintet_v63.html:425:        function getDurationType(duration) {
quintet_v63.html:433:            return types[duration] || 'quarter';
quintet_v64.html:270:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:271:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:272:                    notes.push({pitch: chord.third, octave: 4, duration: 1});
quintet_v64.html:273:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:278:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:279:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:280:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:281:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:282:                    notes.push({pitch: chord.third, octave: 4, duration: 1});
quintet_v64.html:287:                    notes.push({pitch: chord.root, octave: 3, duration: 0.5});
quintet_v64.html:288:                    notes.push({pitch: chord.third, octave: 3, duration: 0.5});
quintet_v64.html:289:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:290:                    notes.push({pitch: chord.root, octave: 3, duration: 0.5});
quintet_v64.html:291:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:296:                    notes.push({pitch: chord.third, octave: 3, duration: 1.5});
quintet_v64.html:297:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:298:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:303:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:304:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:305:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:306:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:307:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:308:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:313:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:314:                    notes.push({pitch: chord.third, octave: 3, duration: 1});
quintet_v64.html:315:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:328:                notes.push({pitch: chord.root, octave: 5, duration: 2});
quintet_v64.html:329:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:330:                notes.push({pitch: chord.fifth, octave: 5, duration: 1});
quintet_v64.html:333:                notes.push({pitch: chord.fifth, octave: 5, duration: 2});
quintet_v64.html:337:                    duration: 2,
quintet_v64.html:342:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:343:                notes.push({pitch: chord.fifth, octave: 5, duration: 1});
quintet_v64.html:344:                notes.push({pitch: chord.root, octave: 5, duration: 1});
quintet_v64.html:345:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:354:                {pitch: chord.third, octave: 4, duration: 2},
quintet_v64.html:355:                {pitch: chord.fifth, octave: 4, duration: 2}
quintet_v64.html:362:                {pitch: chord.fifth, octave: 3, duration: 4}
quintet_v64.html:369:                {pitch: chord.root, octave: 2, duration: 2},
quintet_v64.html:370:                {pitch: chord.fifth, octave: 2, duration: 2}
quintet_v64.html:400:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet_v64.html:401:            xml += '<score-partwise version="3.1">\n';
quintet_v64.html:440:                        xml += '        <divisions>4</divisions>\n';
quintet_v64.html:469:                            xml += '        <duration>' + Math.round(note.duration * 4) + '</duration>\n';
quintet_v64.html:470:                            xml += '        <type>' + getDurationType(note.duration) + '</type>\n';
quintet_v64.html:484:                                xml += '        <duration>' + Math.round(note.duration * 4) + '</duration>\n';
quintet_v64.html:485:                                xml += '        <type>' + getDurationType(note.duration) + '</type>\n';
quintet_v64.html:497:            xml += '</score-partwise>\n';
quintet_v64.html:511:        // Helper function for note durations
quintet_v64.html:512:        function getDurationType(duration) {
quintet_v64.html:513:            if (duration >= 4) return 'whole';
quintet_v64.html:514:            if (duration >= 2) return 'half';
quintet_v64.html:515:            if (duration >= 1) return 'quarter';
quintet_v64.html:516:            if (duration >= 0.5) return 'eighth';
 
=== NOTE/REST GENERATION === 
 
complete_profiles.js:18:            notes: chord
complete_profiles.js:27:    if (!profile.notes) return [80, 80, 80, 80]; // Default mezzo-forte
complete_profiles.js:29:    const velocities = profile.notes.map(n => n.velocity || 80);
complete_profiles.js:44:    if (!profile.notes) return [4, 4, 4, 4]; // Default 4-bar phrases
complete_profiles.js:50:    for (let i = 1; i < profile.notes.length; i++) {
complete_profiles.js:51:        const gap = profile.notes[i].time - profile.notes[i-1].time;
complete_profiles.js:52:        currentPhrase.push(profile.notes[i-1]);
profile_loader.js:45:                // Use profile intervals for next note selection
rhythm_patterns.js:3:    if (!profile || !profile.notes) return [1, 1, 1, 1]; // Default quarter notes
rhythm_patterns.js:5:    // Calculate time deltas between notes
rhythm_patterns.js:7:    for (let i = 1; i < profile.notes.length; i++) {
rhythm_patterns.js:8:        const delta = profile.notes[i].time - profile.notes[i-1].time;
rhythm_patterns.js:15:window.applyRhythm = function(notes, profile) {
rhythm_patterns.js:17:    return notes.map((note, i) => ({
rhythm_patterns.js:18:        pitch: note,
structure_generator.js:109:            sparse: { violin1: 'melody', violin2: 'rest', viola: 'rest', cello: 'pedal', bass: 'pedal' },
bulletproof_integrated.html:114:                const part = { name: inst.name, notes: [] };
bulletproof_integrated.html:128:                        part.notes.push({
bulletproof_integrated.html:156:                    part.notes.filter(n => n.measure === m).forEach(note => {
bulletproof_integrated.html:158:                        const oct = Math.floor(note.pitch / 12) - 1;
bulletproof_integrated.html:159:                        const name = names[note.pitch % 12];
bulletproof_integrated.html:160:                        xml += '<note><pitch><step>' + name.replace('#','') + '</step>';
bulletproof_integrated.html:162:                        xml += `<octave>${oct}</octave></pitch><duration>${note.duration*4}</duration>`;
bulletproof_integrated.html:163:                        xml += `<type>${note.duration===4?'whole':note.duration===2?'half':note.duration===1?'quarter':note.duration===0.5?'eighth':'16th'}</type></note>\n`;
bulletproof_integrated.html:193:                part.notes.forEach(n => {
index.html:276:            const riffNotes = [];
index.html:280:                riffNotes.push({
index.html:289:                notes: riffNotes,
index.html:293:            document.getElementById('guitarStatus').textContent = '✓ Generated 16-note riff';
index.html:311:                const notes = [];
index.html:313:                    notes.push({
index.html:322:                    notes: notes
index.html:348:                    guitarPart = { type: 'guitar', notes: [], fromFile: true };
index.html:400:                html += `${instrument}: ${part.notes ? part.notes.length : 'Loaded'} notes`;
index.html:417:            if (!guitar.notes || shift === 0) return guitar;
index.html:422:                notes: guitar.notes.map(note => ({
index.html:423:                    ...note,
index.html:424:                    frequency: note.frequency * multiplier
index.html:447:                if (part.notes) {
index.html:448:                    part.notes.forEach((note, noteIndex) => {
index.html:449:                        const startTime = now + (noteIndex * beatLength * 0.25);
index.html:457:                        osc.frequency.value = note.frequency;
index.html:542:                // Add a sample note
index.html:544:      <note>
index.html:551:      </note>`;
quintet_composer_v13_PRODUCTION.html:223:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v13_PRODUCTION.html:224:                <select id="noteType">
quintet_composer_v13_PRODUCTION.html:225:                    <option value="quarter">Simple (Quarter Notes)</option>
quintet_composer_v13_PRODUCTION.html:275:            // String tunings (MIDI note numbers)
quintet_composer_v13_PRODUCTION.html:292:                let numNotes = stopType === 'double' ? 2 : stopType === 'triple' ? 3 : 4;
quintet_composer_v13_PRODUCTION.html:306:                    if (numNotes >= 2) {
quintet_composer_v13_PRODUCTION.html:312:                                if (chord.length === numNotes) break;
quintet_composer_v13_PRODUCTION.html:317:                        if (chord.length < numNotes) {
quintet_composer_v13_PRODUCTION.html:320:                                const note = basePitch + interval;
quintet_composer_v13_PRODUCTION.html:321:                                if (!chord.includes(note) && this.canPlayNote(note, instrument)) {
quintet_composer_v13_PRODUCTION.html:322:                                    chord.push(note);
quintet_composer_v13_PRODUCTION.html:323:                                    if (chord.length === numNotes) break;
quintet_composer_v13_PRODUCTION.html:333:                        return { notes: chord, validation: validation };
quintet_composer_v13_PRODUCTION.html:342:                    notes: [basePitch], 
quintet_composer_v13_PRODUCTION.html:343:                    validation: { status: 'playable', message: 'Single note fallback' }
quintet_composer_v13_PRODUCTION.html:347:            validateStop: function(notes, instrument) {
quintet_composer_v13_PRODUCTION.html:348:                if (!notes || notes.length === 0) {
quintet_composer_v13_PRODUCTION.html:349:                    return { status: 'impossible', message: 'No notes' };
quintet_composer_v13_PRODUCTION.html:352:                if (notes.length === 1) {
quintet_composer_v13_PRODUCTION.html:353:                    return { status: 'playable', message: 'Single note' };
quintet_composer_v13_PRODUCTION.html:356:                if (notes.length > 4) {
quintet_composer_v13_PRODUCTION.html:357:                    return { status: 'impossible', message: 'More than 4 notes' };
quintet_composer_v13_PRODUCTION.html:361:                const sortedNotes = [...notes].sort((a, b) => a - b);
quintet_composer_v13_PRODUCTION.html:363:                // Check if all notes are playable
quintet_composer_v13_PRODUCTION.html:365:                for (let note of sortedNotes) {
quintet_composer_v13_PRODUCTION.html:366:                    if (note < tuning[0] - 2 || note > tuning[3] + 24) {
quintet_composer_v13_PRODUCTION.html:367:                        return { status: 'impossible', message: 'Note out of range' };
quintet_composer_v13_PRODUCTION.html:372:                const assignment = this.assignStringsOptimal(sortedNotes, instrument);
quintet_composer_v13_PRODUCTION.html:384:                if (notes.length === 3) {
quintet_composer_v13_PRODUCTION.html:389:                if (notes.length === 4) {
quintet_composer_v13_PRODUCTION.html:395:                if (notes.length === 2) {
quintet_composer_v13_PRODUCTION.html:409:            assignStringsOptimal: function(notes, instrument) {
quintet_composer_v13_PRODUCTION.html:414:                // Try to assign each note to best string
quintet_composer_v13_PRODUCTION.html:415:                for (let note of notes) {
quintet_composer_v13_PRODUCTION.html:422:                        const position = note - tuning[s];
quintet_composer_v13_PRODUCTION.html:435:                        note: note,
quintet_composer_v13_PRODUCTION.html:449:                // Get only fingered notes (not open strings)
quintet_composer_v13_PRODUCTION.html:477:            canPlayNote: function(note, instrument) {
quintet_composer_v13_PRODUCTION.html:479:                return note >= tuning[0] && note <= tuning[3] + 24;
quintet_composer_v13_PRODUCTION.html:499:            const noteType = document.getElementById('noteType').value;
quintet_composer_v13_PRODUCTION.html:525:                    notes: []
quintet_composer_v13_PRODUCTION.html:528:                // Generate notes for each instrument
quintet_composer_v13_PRODUCTION.html:542:                    let notesInMeasure = 4;
quintet_composer_v13_PRODUCTION.html:543:                    if (timeSignature === '3/4') notesInMeasure = 3;
quintet_composer_v13_PRODUCTION.html:544:                    else if (timeSignature === '6/8') notesInMeasure = 6;
quintet_composer_v13_PRODUCTION.html:546:                    for (let n = 0; n < notesInMeasure; n++) {
quintet_composer_v13_PRODUCTION.html:557:                        if (noteType === 'mixed' && n % 2 === 1) {
quintet_composer_v13_PRODUCTION.html:560:                        } else if (noteType === 'complex') {
quintet_composer_v13_PRODUCTION.html:567:                            } else if (pattern === 2 && n === notesInMeasure - 1) {
quintet_composer_v13_PRODUCTION.html:596:                                if (result.notes.length > 1) {
quintet_composer_v13_PRODUCTION.html:597:                                    multipleStop = result.notes;
quintet_composer_v13_PRODUCTION.html:603:                        measure.notes.push({
quintet_composer_v13_PRODUCTION.html:637:                    const notes = measure.notes.filter(n => n.instrument === idx);
quintet_composer_v13_PRODUCTION.html:638:                    instrumentCounts[idx] += notes.length;
quintet_composer_v13_PRODUCTION.html:641:                    notes.forEach(note => {
quintet_composer_v13_PRODUCTION.html:642:                        if (note.multipleStop) {
quintet_composer_v13_PRODUCTION.html:643:                            const len = note.multipleStop.length;
quintet_composer_v13_PRODUCTION.html:648:                            if (note.stopValidation) {
quintet_composer_v13_PRODUCTION.html:649:                                if (note.stopValidation.status === 'playable') stopsCount.playable++;
quintet_composer_v13_PRODUCTION.html:650:                                else if (note.stopValidation.status === 'difficult') stopsCount.difficult++;
quintet_composer_v13_PRODUCTION.html:655:                    const stops = notes.filter(n => n.multipleStop).length;
quintet_composer_v13_PRODUCTION.html:656:                    output += `  ${inst}: ${notes.length} notes`;
quintet_composer_v13_PRODUCTION.html:673:                    <div class="stat-label">notes</div>
quintet_composer_v13_PRODUCTION.html:732:                    const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v13_PRODUCTION.html:734:                    instNotes.forEach(note => {
quintet_composer_v13_PRODUCTION.html:735:                        const measureStartTick = (measure.number - 1) * ticksPerQuarter * 4;
quintet_composer_v13_PRODUCTION.html:736:                        const noteStartTick = measureStartTick + Math.round(note.time * ticksPerQuarter);
quintet_composer_v13_PRODUCTION.html:737:                        const noteEndTick = noteStartTick + Math.round(note.duration * ticksPerQuarter);
quintet_composer_v13_PRODUCTION.html:739:                        if (note.multipleStop && note.multipleStop.length > 1) {
quintet_composer_v13_PRODUCTION.html:740:                            // CRITICAL FIX: Multiple stops need simultaneous notes
quintet_composer_v13_PRODUCTION.html:741:                            // All notes start at same time
quintet_composer_v13_PRODUCTION.html:742:                            note.multipleStop.forEach((pitch, idx) => {
quintet_composer_v13_PRODUCTION.html:744:                                    tick: noteStartTick,
quintet_composer_v13_PRODUCTION.html:747:                                    velocity: note.velocity
quintet_composer_v13_PRODUCTION.html:750:                                    tick: noteEndTick,
quintet_composer_v13_PRODUCTION.html:757:                            // Single note
quintet_composer_v13_PRODUCTION.html:759:                                tick: noteStartTick,
quintet_composer_v13_PRODUCTION.html:761:                                pitch: note.pitch,
quintet_composer_v13_PRODUCTION.html:762:                                velocity: note.velocity
quintet_composer_v13_PRODUCTION.html:765:                                tick: noteEndTick,
quintet_composer_v13_PRODUCTION.html:767:                                pitch: note.pitch,
quintet_composer_v13_PRODUCTION.html:884:                    const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v13_PRODUCTION.html:886:                    instNotes.forEach(note => {
quintet_composer_v13_PRODUCTION.html:887:                        if (note.multipleStop && note.multipleStop.length > 1) {
quintet_composer_v13_PRODUCTION.html:888:                            // Multiple stop - all notes as a chord
quintet_composer_v13_PRODUCTION.html:889:                            note.multipleStop.forEach((pitch, idx) => {
quintet_composer_v13_PRODUCTION.html:890:                                xml += '      <note>\n';
quintet_composer_v13_PRODUCTION.html:895:                                const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v13_PRODUCTION.html:896:                                const step = noteNames[pitch % 12];
quintet_composer_v13_PRODUCTION.html:905:                                xml += `        <duration>${Math.round(note.duration * 4)}</duration>\n';
quintet_composer_v13_PRODUCTION.html:908:                                if (note.duration >= 2) type = 'half';
quintet_composer_v13_PRODUCTION.html:909:                                else if (note.duration >= 1) type = 'quarter';
quintet_composer_v13_PRODUCTION.html:910:                                else if (note.duration >= 0.5) type = 'eighth';
quintet_composer_v13_PRODUCTION.html:911:                                else if (note.duration >= 0.25) type = 'sixteenth';
quintet_composer_v13_PRODUCTION.html:914:                                if (note.duration === 1.5 || note.duration === 0.75) {
quintet_composer_v13_PRODUCTION.html:919:                                if (idx === 0 && note.stopValidation) {
quintet_composer_v13_PRODUCTION.html:920:                                    if (note.multipleStop.length === 3) {
quintet_composer_v13_PRODUCTION.html:926:                                    } else if (note.multipleStop.length === 4) {
quintet_composer_v13_PRODUCTION.html:935:                                xml += '      </note>\n';
quintet_composer_v13_PRODUCTION.html:938:                            // Single note
quintet_composer_v13_PRODUCTION.html:939:                            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v13_PRODUCTION.html:940:                            const step = noteNames[note.pitch % 12];
quintet_composer_v13_PRODUCTION.html:941:                            const octave = Math.floor(note.pitch / 12) - 1;
quintet_composer_v13_PRODUCTION.html:942:                            const alter = [1, 3, 6, 8, 10].includes(note.pitch % 12) ? 1 : 0;
quintet_composer_v13_PRODUCTION.html:944:                            xml += '      <note>\n';
quintet_composer_v13_PRODUCTION.html:950:                            xml += `        <duration>${Math.round(note.duration * 4)}</duration>\n';
quintet_composer_v13_PRODUCTION.html:953:                            if (note.duration >= 2) type = 'half';
quintet_composer_v13_PRODUCTION.html:954:                            else if (note.duration >= 1) type = 'quarter';
quintet_composer_v13_PRODUCTION.html:955:                            else if (note.duration >= 0.5) type = 'eighth';
quintet_composer_v13_PRODUCTION.html:956:                            else if (note.duration >= 0.25) type = 'sixteenth';
quintet_composer_v13_PRODUCTION.html:959:                            if (note.duration === 1.5 || note.duration === 0.75) {
quintet_composer_v13_PRODUCTION.html:963:                            xml += '      </note>\n';
quintet_composer_v13_PRODUCTION.html:1011:                m.notes.forEach(n => {
quintet_composer_v13_PRODUCTION.html:1043:                { notes: [60, 67], inst: 'violin', expected: 'playable' },
quintet_composer_v13_PRODUCTION.html:1044:                { notes: [55, 62, 69], inst: 'violin', expected: 'difficult' },
quintet_composer_v13_PRODUCTION.html:1045:                { notes: [55, 62, 69, 76], inst: 'violin', expected: 'difficult' },
quintet_composer_v13_PRODUCTION.html:1046:                { notes: [36, 90], inst: 'cello', expected: 'impossible' }
quintet_composer_v13_PRODUCTION.html:1050:                const result = StopsValidator.validateStop(test.notes, test.inst);
quintet_composer_v13_PRODUCTION.html:1051:                console.log(`${test.inst} ${test.notes}: ${result.status} (expected: ${test.expected})`);
quintet_composer_v14_WORKING_BASE.html:105:        .instrument-card .note-count {
quintet_composer_v14_WORKING_BASE.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v14_WORKING_BASE.html:165:                <select id="noteType">
quintet_composer_v14_WORKING_BASE.html:166:                    <option value="simple">Simple (Quarter notes)</option>
quintet_composer_v14_WORKING_BASE.html:184:                <div class="note-count" id="guitar-count">-</div>
quintet_composer_v14_WORKING_BASE.html:188:                <div class="note-count" id="violin1-count">-</div>
quintet_composer_v14_WORKING_BASE.html:192:                <div class="note-count" id="violin2-count">-</div>
quintet_composer_v14_WORKING_BASE.html:196:                <div class="note-count" id="viola-count">-</div>
quintet_composer_v14_WORKING_BASE.html:200:                <div class="note-count" id="cello-count">-</div>
quintet_composer_v14_WORKING_BASE.html:235:                var noteType = document.getElementById('noteType').value;
quintet_composer_v14_WORKING_BASE.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v14_WORKING_BASE.html:257:                // Generate notes for each instrument
quintet_composer_v14_WORKING_BASE.html:259:                    var notes = [];
quintet_composer_v14_WORKING_BASE.html:264:                        // Helper function to add a note
quintet_composer_v14_WORKING_BASE.html:265:                        function addNote(startBeat, duration, vel) {
quintet_composer_v14_WORKING_BASE.html:283:                            notes.push({
quintet_composer_v14_WORKING_BASE.html:293:                        if (noteType === 'simple') {
quintet_composer_v14_WORKING_BASE.html:294:                            // 4 quarter notes
quintet_composer_v14_WORKING_BASE.html:296:                                addNote(b * divisions, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:298:                        } else if (noteType === 'moderate') {
quintet_composer_v14_WORKING_BASE.html:299:                            // Half note + 2 quarters
quintet_composer_v14_WORKING_BASE.html:300:                            addNote(0, divisions * 2, velocity);
quintet_composer_v14_WORKING_BASE.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:303:                        } else if (noteType === 'complex') {
quintet_composer_v14_WORKING_BASE.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet_composer_v14_WORKING_BASE.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet_composer_v14_WORKING_BASE.html:324:                                addNote(0, divisions, velocity);
quintet_composer_v14_WORKING_BASE.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet_composer_v14_WORKING_BASE.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet_composer_v14_WORKING_BASE.html:334:                        notes: notes
quintet_composer_v14_WORKING_BASE.html:338:                    document.getElementById(instrumentNames[inst].toLowerCase() + '-count').textContent = notes.length;
quintet_composer_v14_WORKING_BASE.html:349:                    composition.instruments.reduce(function(sum, inst) { return sum + inst.notes.length; }, 0) + 
quintet_composer_v14_WORKING_BASE.html:350:                    ' total notes';
quintet_composer_v14_WORKING_BASE.html:419:                    // Sort notes by start time
quintet_composer_v14_WORKING_BASE.html:420:                    var sortedNotes = instrument.notes.slice().sort(function(a, b) {
quintet_composer_v14_WORKING_BASE.html:424:                    // Write notes
quintet_composer_v14_WORKING_BASE.html:426:                    for (var n = 0; n < sortedNotes.length; n++) {
quintet_composer_v14_WORKING_BASE.html:427:                        var note = sortedNotes[n];
quintet_composer_v14_WORKING_BASE.html:428:                        var startTick = Math.round(note.start * ticksPerQuarter / 4);
quintet_composer_v14_WORKING_BASE.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet_composer_v14_WORKING_BASE.html:431:                        // Note on
quintet_composer_v14_WORKING_BASE.html:434:                        track.push(0x90 + i); // Note on
quintet_composer_v14_WORKING_BASE.html:435:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet_composer_v14_WORKING_BASE.html:436:                        track.push(Math.max(1, Math.min(127, note.velocity)));
quintet_composer_v14_WORKING_BASE.html:438:                        // Note off
quintet_composer_v14_WORKING_BASE.html:440:                        track.push(0x80 + i); // Note off
quintet_composer_v14_WORKING_BASE.html:441:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet_composer_v14_WORKING_BASE.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v14_WORKING_BASE.html:542:                        // Get notes for this measure
quintet_composer_v14_WORKING_BASE.html:543:                        var measureNotes = instrument.notes.filter(function(n) {
quintet_composer_v14_WORKING_BASE.html:548:                        measureNotes.sort(function(a, b) {
quintet_composer_v14_WORKING_BASE.html:556:                        for (var n = 0; n < measureNotes.length; n++) {
quintet_composer_v14_WORKING_BASE.html:557:                            var note = measureNotes[n];
quintet_composer_v14_WORKING_BASE.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet_composer_v14_WORKING_BASE.html:560:                            // Add rest if there's a gap
quintet_composer_v14_WORKING_BASE.html:561:                            if (noteStart > currentBeat) {
quintet_composer_v14_WORKING_BASE.html:562:                                var restDuration = noteStart - currentBeat;
quintet_composer_v14_WORKING_BASE.html:563:                                xml += '      <note>\n';
quintet_composer_v14_WORKING_BASE.html:564:                                xml += '        <rest/>\n';
quintet_composer_v14_WORKING_BASE.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet_composer_v14_WORKING_BASE.html:566:                                xml += '      </note>\n';
quintet_composer_v14_WORKING_BASE.html:569:                            // Add the note
quintet_composer_v14_WORKING_BASE.html:570:                            xml += '      <note>\n';
quintet_composer_v14_WORKING_BASE.html:572:                            // Convert MIDI pitch to note name
quintet_composer_v14_WORKING_BASE.html:574:                            var noteName = pitchNames[note.pitch % 12];
quintet_composer_v14_WORKING_BASE.html:575:                            var octave = Math.floor(note.pitch / 12) - 1;
quintet_composer_v14_WORKING_BASE.html:576:                            var alter = noteName.includes('#') ? 1 : 0;
quintet_composer_v14_WORKING_BASE.html:577:                            var step = noteName.replace('#', '');
quintet_composer_v14_WORKING_BASE.html:587:                            var duration = Math.max(1, note.duration);
quintet_composer_v14_WORKING_BASE.html:590:                            // Determine note type
quintet_composer_v14_WORKING_BASE.html:612:                            xml += '      </note>\n';
quintet_composer_v14_WORKING_BASE.html:614:                            currentBeat = noteStart + note.duration;
quintet_composer_v14_WORKING_BASE.html:617:                        // Fill rest of measure if needed
quintet_composer_v14_WORKING_BASE.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v14_WORKING_BASE.html:620:                            xml += '      <note>\n';
quintet_composer_v14_WORKING_BASE.html:621:                            xml += '        <rest/>\n';
quintet_composer_v14_WORKING_BASE.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_composer_v14_WORKING_BASE.html:623:                            xml += '      </note>\n';
quintet_composer_v16_HARMONIZED.html:318:        // Convert chord symbols to actual notes
quintet_composer_v16_HARMONIZED.html:319:        function getChordNotes(key, chordSymbol) {
quintet_composer_v16_HARMONIZED.html:364:                let numNotes = stopType === 'double' ? 2 : stopType === 'triple' ? 3 : 4;
quintet_composer_v16_HARMONIZED.html:367:                // Add notes using chord tones
quintet_composer_v16_HARMONIZED.html:369:                for (let i = 1; i < numNotes && stop.length < numNotes; i++) {
quintet_composer_v16_HARMONIZED.html:371:                    const note = basePitch + interval;
quintet_composer_v16_HARMONIZED.html:372:                    if (note >= tuning[0] && note <= tuning[3] + 12) {
quintet_composer_v16_HARMONIZED.html:373:                        stop.push(note);
quintet_composer_v16_HARMONIZED.html:406:                const measure = { number: m + 1, notes: [] };
quintet_composer_v16_HARMONIZED.html:410:                const chord = getChordNotes(key, chordSymbol);
quintet_composer_v16_HARMONIZED.html:427:                                const melodyNotes = [chord.root + 12, chord.third + 12, chord.fifth + 12];
quintet_composer_v16_HARMONIZED.html:428:                                pitch = melodyNotes[Math.floor(Math.random() * melodyNotes.length)];
quintet_composer_v16_HARMONIZED.html:429:                                // Add passing notes occasionally
quintet_composer_v16_HARMONIZED.html:468:                        measure.notes.push({
quintet_composer_v16_HARMONIZED.html:501:                    const notes = measure.notes.filter(n => n.instrument === idx);
quintet_composer_v16_HARMONIZED.html:502:                    const stops = notes.filter(n => n.multipleStop).length;
quintet_composer_v16_HARMONIZED.html:504:                    notes.forEach(n => {
quintet_composer_v16_HARMONIZED.html:512:                    output += `  ${inst}: ${notes.length} notes`;
quintet_composer_v16_HARMONIZED.html:533:                measure.notes.forEach(note => {
quintet_composer_v16_HARMONIZED.html:534:                    const time = `${measure.number - 1}:${note.time}:0`;
quintet_composer_v16_HARMONIZED.html:536:                    if (note.multipleStop && note.multipleStop.length > 1) {
quintet_composer_v16_HARMONIZED.html:537:                        // Play multiple notes
quintet_composer_v16_HARMONIZED.html:538:                        note.multipleStop.forEach(pitch => {
quintet_composer_v16_HARMONIZED.html:541:                            }, [{time: time, pitch: Tone.Frequency(pitch, 'midi'), inst: note.instrument}]).start(0);
quintet_composer_v16_HARMONIZED.html:545:                        // Play single note
quintet_composer_v16_HARMONIZED.html:548:                        }, [{time: time, pitch: Tone.Frequency(note.pitch, 'midi'), inst: note.instrument}]).start(0);
quintet_composer_v16_HARMONIZED.html:602:                // Collect notes
quintet_composer_v16_HARMONIZED.html:604:                    const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v16_HARMONIZED.html:605:                    instNotes.forEach(note => {
quintet_composer_v16_HARMONIZED.html:606:                        const startTick = (mIdx * 4 + note.time) * ticksPerQuarter;
quintet_composer_v16_HARMONIZED.html:609:                        if (note.multipleStop && note.multipleStop.length > 1) {
quintet_composer_v16_HARMONIZED.html:610:                            note.multipleStop.forEach(pitch => {
quintet_composer_v16_HARMONIZED.html:615:                            events.push({ tick: startTick, type: 'on', pitch: note.pitch });
quintet_composer_v16_HARMONIZED.html:616:                            events.push({ tick: endTick, type: 'off', pitch: note.pitch });
quintet_composer_v16_HARMONIZED.html:702:                    const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v16_HARMONIZED.html:703:                    instNotes.forEach(note => {
quintet_composer_v16_HARMONIZED.html:704:                        if (note.multipleStop && note.multipleStop.length > 1) {
quintet_composer_v16_HARMONIZED.html:705:                            note.multipleStop.forEach((pitch, idx) => {
quintet_composer_v16_HARMONIZED.html:706:                                xml += '      <note>\n';
quintet_composer_v16_HARMONIZED.html:709:                                const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v16_HARMONIZED.html:710:                                const step = noteNames[pitch % 12];
quintet_composer_v16_HARMONIZED.html:716:                                xml += '      </note>\n';
quintet_composer_v16_HARMONIZED.html:719:                            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v16_HARMONIZED.html:720:                            const step = noteNames[note.pitch % 12];
quintet_composer_v16_HARMONIZED.html:721:                            const octave = Math.floor(note.pitch / 12) - 1;
quintet_composer_v16_HARMONIZED.html:723:                            xml += '      <note>\n';
quintet_composer_v16_HARMONIZED.html:727:                            xml += '      </note>\n';
quintet_composer_v17_TRIAD.html:391:        // Get chord notes for triads
quintet_composer_v17_TRIAD.html:392:        function getChordNotes(key, chordSymbol) {
quintet_composer_v17_TRIAD.html:436:            let notes = [];
quintet_composer_v17_TRIAD.html:442:                        const melodyNote = chord.triad[Math.floor(Math.random() * 3)] + 
quintet_composer_v17_TRIAD.html:444:                        notes = [melodyNote];
quintet_composer_v17_TRIAD.html:450:                            notes = [chord.third + 12, chord.fifth + 12];
quintet_composer_v17_TRIAD.html:452:                            notes = [chord.third + 12, chord.root + 24];
quintet_composer_v17_TRIAD.html:454:                            notes = beat % 2 === 0 ? 
quintet_composer_v17_TRIAD.html:463:                            notes = [chord.root, chord.third];
quintet_composer_v17_TRIAD.html:465:                            notes = [chord.root - 12, chord.fifth];
quintet_composer_v17_TRIAD.html:467:                            notes = beat % 2 === 0 ?
quintet_composer_v17_TRIAD.html:472:                        notes = notes.map(n => n < 36 ? n + 12 : n > 60 ? n - 12 : n);
quintet_composer_v17_TRIAD.html:477:            return notes;
quintet_composer_v17_TRIAD.html:504:                    const measure = { number: m + 1, notes: [] };
quintet_composer_v17_TRIAD.html:506:                    const chord = getChordNotes(key, chordSymbol);
quintet_composer_v17_TRIAD.html:533:                                measure.notes.push({
quintet_composer_v17_TRIAD.html:546:                            const guitarNotes = generateTriadPart(chord, 'guitar', voicing, m, beat);
quintet_composer_v17_TRIAD.html:547:                            measure.notes.push({
quintet_composer_v17_TRIAD.html:549:                                pitch: guitarNotes[0],
quintet_composer_v17_TRIAD.html:556:                            const violinNotes = generateTriadPart(chord, 'violins', voicing, m, beat);
quintet_composer_v17_TRIAD.html:557:                            if (violinNotes.length >= 2) {
quintet_composer_v17_TRIAD.html:558:                                measure.notes.push({
quintet_composer_v17_TRIAD.html:560:                                    pitch: violinNotes[0],
quintet_composer_v17_TRIAD.html:565:                                measure.notes.push({
quintet_composer_v17_TRIAD.html:567:                                    pitch: violinNotes[1],
quintet_composer_v17_TRIAD.html:575:                            const lowerNotes = generateTriadPart(chord, 'lower', voicing, m, beat);
quintet_composer_v17_TRIAD.html:576:                            if (lowerNotes.length >= 2) {
quintet_composer_v17_TRIAD.html:577:                                measure.notes.push({
quintet_composer_v17_TRIAD.html:579:                                    pitch: lowerNotes[0],
quintet_composer_v17_TRIAD.html:584:                                measure.notes.push({
quintet_composer_v17_TRIAD.html:586:                                    pitch: lowerNotes[1],
quintet_composer_v17_TRIAD.html:627:                        const notes = measure.notes.filter(n => n.instrument === idx);
quintet_composer_v17_TRIAD.html:628:                        output += `  ${inst}: ${notes.length} notes\n`;
quintet_composer_v17_TRIAD.html:644:                measure.notes.forEach(note => {
quintet_composer_v17_TRIAD.html:645:                    const time = `${measure.number - 1}:${note.time}:0`;
quintet_composer_v17_TRIAD.html:648:                    }, [{time: time, pitch: Tone.Frequency(note.pitch, 'midi'), inst: note.instrument}]).start(0);
quintet_composer_v17_TRIAD.html:702:                    // Collect notes
quintet_composer_v17_TRIAD.html:704:                        const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v17_TRIAD.html:705:                        instNotes.forEach(note => {
quintet_composer_v17_TRIAD.html:706:                            const startTick = (mIdx * 4 + note.time) * ticksPerQuarter;
quintet_composer_v17_TRIAD.html:709:                            events.push({ tick: startTick, type: 'on', pitch: note.pitch });
quintet_composer_v17_TRIAD.html:710:                            events.push({ tick: endTick, type: 'off', pitch: note.pitch });
quintet_composer_v17_TRIAD.html:802:                        const instNotes = measure.notes.filter(n => n.instrument === inst);
quintet_composer_v17_TRIAD.html:803:                        instNotes.forEach(note => {
quintet_composer_v17_TRIAD.html:804:                            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v17_TRIAD.html:805:                            const step = noteNames[note.pitch % 12];
quintet_composer_v17_TRIAD.html:806:                            const octave = Math.floor(note.pitch / 12) - 1;
quintet_composer_v17_TRIAD.html:808:                            xml += '      <note>\n';
quintet_composer_v17_TRIAD.html:812:                            xml += '      </note>\n';
quintet_composer_v18_COMPLETE.html:153:        .note-display {
quintet_composer_v18_COMPLETE.html:161:        .note-item {
quintet_composer_v18_COMPLETE.html:167:        .stop-note {
quintet_composer_v18_COMPLETE.html:312:                <div class="stat-value" id="totalNotes">0</div>
quintet_composer_v18_COMPLETE.html:313:                <div class="stat-label">Total Notes</div>
quintet_composer_v18_COMPLETE.html:340:        'C': { sharps: 0, flats: 0, notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'] },
quintet_composer_v18_COMPLETE.html:341:        'G': { sharps: 1, flats: 0, notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'] },
quintet_composer_v18_COMPLETE.html:342:        'D': { sharps: 2, flats: 0, notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'] },
quintet_composer_v18_COMPLETE.html:343:        'A': { sharps: 3, flats: 0, notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'] },
quintet_composer_v18_COMPLETE.html:344:        'E': { sharps: 4, flats: 0, notes: ['E', 'F#', 'G#', 'A', 'B', 'C#', 'D#'] },
quintet_composer_v18_COMPLETE.html:345:        'B': { sharps: 5, flats: 0, notes: ['B', 'C#', 'D#', 'E', 'F#', 'G#', 'A#'] },
quintet_composer_v18_COMPLETE.html:346:        'F#': { sharps: 6, flats: 0, notes: ['F#', 'G#', 'A#', 'B', 'C#', 'D#', 'E#'] },
quintet_composer_v18_COMPLETE.html:347:        'Db': { sharps: 0, flats: 5, notes: ['Db', 'Eb', 'F', 'Gb', 'Ab', 'Bb', 'C'] },
quintet_composer_v18_COMPLETE.html:348:        'Ab': { sharps: 0, flats: 4, notes: ['Ab', 'Bb', 'C', 'Db', 'Eb', 'F', 'G'] },
quintet_composer_v18_COMPLETE.html:349:        'Eb': { sharps: 0, flats: 3, notes: ['Eb', 'F', 'G', 'Ab', 'Bb', 'C', 'D'] },
quintet_composer_v18_COMPLETE.html:350:        'Bb': { sharps: 0, flats: 2, notes: ['Bb', 'C', 'D', 'Eb', 'F', 'G', 'A'] },
quintet_composer_v18_COMPLETE.html:351:        'F': { sharps: 0, flats: 1, notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'] },
quintet_composer_v18_COMPLETE.html:352:        'Am': { sharps: 0, flats: 0, notes: ['A', 'B', 'C', 'D', 'E', 'F', 'G'] },
quintet_composer_v18_COMPLETE.html:353:        'Em': { sharps: 1, flats: 0, notes: ['E', 'F#', 'G', 'A', 'B', 'C', 'D'] },
quintet_composer_v18_COMPLETE.html:354:        'Bm': { sharps: 2, flats: 0, notes: ['B', 'C#', 'D', 'E', 'F#', 'G', 'A'] },
quintet_composer_v18_COMPLETE.html:355:        'F#m': { sharps: 3, flats: 0, notes: ['F#', 'G#', 'A', 'B', 'C#', 'D', 'E'] },
quintet_composer_v18_COMPLETE.html:356:        'C#m': { sharps: 4, flats: 0, notes: ['C#', 'D#', 'E', 'F#', 'G#', 'A', 'B'] },
quintet_composer_v18_COMPLETE.html:357:        'G#m': { sharps: 5, flats: 0, notes: ['G#', 'A#', 'B', 'C#', 'D#', 'E', 'F#'] },
quintet_composer_v18_COMPLETE.html:358:        'Ebm': { sharps: 0, flats: 6, notes: ['Eb', 'F', 'Gb', 'Ab', 'Bb', 'Cb', 'Db'] },
quintet_composer_v18_COMPLETE.html:359:        'Bbm': { sharps: 0, flats: 5, notes: ['Bb', 'C', 'Db', 'Eb', 'F', 'Gb', 'Ab'] },
quintet_composer_v18_COMPLETE.html:360:        'Fm': { sharps: 0, flats: 4, notes: ['F', 'G', 'Ab', 'Bb', 'C', 'Db', 'Eb'] },
quintet_composer_v18_COMPLETE.html:361:        'Cm': { sharps: 0, flats: 3, notes: ['C', 'D', 'Eb', 'F', 'G', 'Ab', 'Bb'] },
quintet_composer_v18_COMPLETE.html:362:        'Gm': { sharps: 0, flats: 2, notes: ['G', 'A', 'Bb', 'C', 'D', 'Eb', 'F'] },
quintet_composer_v18_COMPLETE.html:363:        'Dm': { sharps: 0, flats: 1, notes: ['D', 'E', 'F', 'G', 'A', 'Bb', 'C'] }
quintet_composer_v18_COMPLETE.html:368:        simple: [4, 4, 4, 4], // Quarter notes
quintet_composer_v18_COMPLETE.html:394:                guitar: { name: 'Classical Guitar', notes: [], clef: 'treble' },
quintet_composer_v18_COMPLETE.html:395:                violin1: { name: 'Violin I', notes: [], clef: 'treble' },
quintet_composer_v18_COMPLETE.html:396:                violin2: { name: 'Violin II', notes: [], clef: 'treble' },
quintet_composer_v18_COMPLETE.html:397:                viola: { name: 'Viola', notes: [], clef: 'alto' }, // ALTO CLEF!
quintet_composer_v18_COMPLETE.html:398:                cello: { name: 'Cello', notes: [], clef: 'bass' }
quintet_composer_v18_COMPLETE.html:402:        // Generate notes for each instrument
quintet_composer_v18_COMPLETE.html:431:            inst.notes = [];
quintet_composer_v18_COMPLETE.html:434:                const measureNotes = [];
quintet_composer_v18_COMPLETE.html:453:                    // Generate note(s)
quintet_composer_v18_COMPLETE.html:454:                    const baseNote = keyData.notes[Math.floor(Math.random() * keyData.notes.length)];
quintet_composer_v18_COMPLETE.html:458:                        // Single note
quintet_composer_v18_COMPLETE.html:459:                        measureNotes.push({
quintet_composer_v18_COMPLETE.html:460:                            pitch: baseNote + octave,
quintet_composer_v18_COMPLETE.html:466:                        const stopNotes = generateStop(baseNote, octave, stopType, keyData);
quintet_composer_v18_COMPLETE.html:467:                        measureNotes.push({
quintet_composer_v18_COMPLETE.html:468:                            pitch: stopNotes,
quintet_composer_v18_COMPLETE.html:479:                inst.notes.push(measureNotes);
quintet_composer_v18_COMPLETE.html:484:    function generateStop(baseNote, octave, stopType, keyData) {
quintet_composer_v18_COMPLETE.html:485:        const notes = [baseNote + octave];
quintet_composer_v18_COMPLETE.html:495:            const noteIndex = (keyData.notes.indexOf(baseNote) + interval) % keyData.notes.length;
quintet_composer_v18_COMPLETE.html:496:            notes.push(keyData.notes[noteIndex] + octave);
quintet_composer_v18_COMPLETE.html:499:        return notes;
quintet_composer_v18_COMPLETE.html:526:            const notesDiv = document.createElement('div');
quintet_composer_v18_COMPLETE.html:527:            notesDiv.className = 'note-display';
quintet_composer_v18_COMPLETE.html:530:            if (inst.notes[0]) {
quintet_composer_v18_COMPLETE.html:531:                inst.notes[0].forEach(note => {
quintet_composer_v18_COMPLETE.html:532:                    const noteSpan = document.createElement('span');
quintet_composer_v18_COMPLETE.html:533:                    noteSpan.className = note.isStop ? 'note-item stop-note' : 'note-item';
quintet_composer_v18_COMPLETE.html:535:                    if (note.isStop) {
quintet_composer_v18_COMPLETE.html:536:                        noteSpan.textContent = '[' + note.pitch.join('+') + ']';
quintet_composer_v18_COMPLETE.html:538:                        noteSpan.textContent = note.pitch;
quintet_composer_v18_COMPLETE.html:541:                    notesDiv.appendChild(noteSpan);
quintet_composer_v18_COMPLETE.html:546:            row.appendChild(notesDiv);
quintet_composer_v18_COMPLETE.html:633:                // Add notes
quintet_composer_v18_COMPLETE.html:634:                if (inst.notes[m]) {
quintet_composer_v18_COMPLETE.html:635:                    inst.notes[m].forEach(note => {
quintet_composer_v18_COMPLETE.html:636:                        if (note.isStop) {
quintet_composer_v18_COMPLETE.html:638:                            note.pitch.forEach((pitch, index) => {
quintet_composer_v18_COMPLETE.html:640:      <note>`;
quintet_composer_v18_COMPLETE.html:650:        <duration>${note.duration}</duration>
quintet_composer_v18_COMPLETE.html:651:        <type>${getDurationType(note.duration)}</type>
quintet_composer_v18_COMPLETE.html:652:      </note>`;
quintet_composer_v18_COMPLETE.html:655:                            // Single note
quintet_composer_v18_COMPLETE.html:657:      <note>
quintet_composer_v18_COMPLETE.html:659:          <step>${note.pitch[0]}</step>
quintet_composer_v18_COMPLETE.html:660:          <octave>${note.pitch[1]}</octave>
quintet_composer_v18_COMPLETE.html:662:        <duration>${note.duration}</duration>
quintet_composer_v18_COMPLETE.html:663:        <type>${getDurationType(note.duration)}</type>
quintet_composer_v18_COMPLETE.html:664:      </note>`;
quintet_composer_v18_COMPLETE.html:731:                notes: result
quintet_composer_v18_COMPLETE.html:739:            testResults.map(r => `${r.test}: ${r.result} - ${JSON.stringify(r.notes)}`).join('<br>');
quintet_composer_v18_COMPLETE.html:745:        let totalNotes = 0;
quintet_composer_v18_COMPLETE.html:750:            inst.notes.forEach(measure => {
quintet_composer_v18_COMPLETE.html:751:                measure.forEach(note => {
quintet_composer_v18_COMPLETE.html:752:                    totalNotes++;
quintet_composer_v18_COMPLETE.html:753:                    if (note.isStop) totalStops++;
quintet_composer_v18_COMPLETE.html:758:        document.getElementById('totalNotes').textContent = totalNotes;
quintet_composer_v18_COMPLETE.html:760:        document.getElementById('harmonyComplexity').textContent = Math.round(totalStops / totalNotes * 100);
quintet_composer_v18_COMPLETE.html:792:    console.log('String Quintet Composer v18 - All Features Restored');
quintet_composer_v20_CORRECT_RANGES.html:166:        .note-regular {
quintet_composer_v20_CORRECT_RANGES.html:169:        .note-stop {
quintet_composer_v20_CORRECT_RANGES.html:228:                    <option value="whole">Whole Notes</option>
quintet_composer_v20_CORRECT_RANGES.html:229:                    <option value="half">Half Notes</option>
quintet_composer_v20_CORRECT_RANGES.html:230:                    <option value="quarter" selected>Quarter Notes</option>
quintet_composer_v20_CORRECT_RANGES.html:349:        whole: [16],                           // One whole note
quintet_composer_v20_CORRECT_RANGES.html:350:        half: [8, 8],                         // Two half notes
quintet_composer_v20_CORRECT_RANGES.html:351:        quarter: [4, 4, 4, 4],                 // Four quarter notes
quintet_composer_v20_CORRECT_RANGES.html:356:    // Generate note in correct range for instrument
quintet_composer_v20_CORRECT_RANGES.html:357:    function generateNoteInRange(instrumentId, keyScale) {
quintet_composer_v20_CORRECT_RANGES.html:359:        const note = keyScale[Math.floor(Math.random() * keyScale.length)];
quintet_composer_v20_CORRECT_RANGES.html:381:        // Parse note for XML
quintet_composer_v20_CORRECT_RANGES.html:382:        const step = note.replace(/[#b]/, '');
quintet_composer_v20_CORRECT_RANGES.html:384:        if (note.includes('#')) alter = 1;
quintet_composer_v20_CORRECT_RANGES.html:385:        if (note.includes('b')) alter = -1;
quintet_composer_v20_CORRECT_RANGES.html:388:            pitch: note,
quintet_composer_v20_CORRECT_RANGES.html:459:                    const notes = [];
quintet_composer_v20_CORRECT_RANGES.html:460:                    const baseNote = generateNoteInRange(instrumentId, composition.keyData.scale);
quintet_composer_v20_CORRECT_RANGES.html:461:                    notes.push(baseNote);
quintet_composer_v20_CORRECT_RANGES.html:463:                    // Add additional notes for stop
quintet_composer_v20_CORRECT_RANGES.html:465:                        const stopNote = generateNoteInRange(instrumentId, composition.keyData.scale);
quintet_composer_v20_CORRECT_RANGES.html:466:                        notes.push(stopNote);
quintet_composer_v20_CORRECT_RANGES.html:471:                        notes: notes,
quintet_composer_v20_CORRECT_RANGES.html:475:                    // Single note
quintet_composer_v20_CORRECT_RANGES.html:476:                    const note = generateNoteInRange(instrumentId, composition.keyData.scale);
quintet_composer_v20_CORRECT_RANGES.html:478:                        type: 'note',
quintet_composer_v20_CORRECT_RANGES.html:479:                        notes: [note],
quintet_composer_v20_CORRECT_RANGES.html:540:                        const chord = event.notes.map(n => n.pitch + n.octave).join('+');
quintet_composer_v20_CORRECT_RANGES.html:541:                        measureText += `<span class="note-stop">[${chord}]</span> `;
quintet_composer_v20_CORRECT_RANGES.html:543:                        const note = event.notes[0].pitch + event.notes[0].octave;
quintet_composer_v20_CORRECT_RANGES.html:544:                        measureText += `<span class="note-regular">${note}</span> `;
quintet_composer_v20_CORRECT_RANGES.html:637:                    // Notes
quintet_composer_v20_CORRECT_RANGES.html:639:                        event.notes.forEach((note, idx) => {
quintet_composer_v20_CORRECT_RANGES.html:641:      <note>`;
quintet_composer_v20_CORRECT_RANGES.html:650:          <step>${note.step}</step>`;
quintet_composer_v20_CORRECT_RANGES.html:652:                            if (note.alter !== 0) {
quintet_composer_v20_CORRECT_RANGES.html:654:          <alter>${note.alter}</alter>`;
quintet_composer_v20_CORRECT_RANGES.html:658:          <octave>${note.octave}</octave>
quintet_composer_v20_CORRECT_RANGES.html:662:      </note>`;
quintet_composer_v20_CORRECT_RANGES.html:716:            const testNote = generateNoteInRange(inst, ['C', 'D', 'E', 'F', 'G', 'A', 'B']);
quintet_composer_v20_CORRECT_RANGES.html:717:            console.log(`${inst}: Generated ${testNote.pitch}${testNote.octave}`);
quintet_composer_v21_ABSOLUTE_FIX.html:164:        .note-stop {
quintet_composer_v21_ABSOLUTE_FIX.html:222:                    <option value="whole">Whole Notes</option>
quintet_composer_v21_ABSOLUTE_FIX.html:223:                    <option value="half">Half Notes</option>
quintet_composer_v21_ABSOLUTE_FIX.html:224:                    <option value="quarter" selected>Quarter Notes</option>
quintet_composer_v21_ABSOLUTE_FIX.html:270:            lowest: { note: 'E', octave: 3 },
quintet_composer_v21_ABSOLUTE_FIX.html:271:            highest: { note: 'B', octave: 5 },
quintet_composer_v21_ABSOLUTE_FIX.html:278:            lowest: { note: 'G', octave: 3 },
quintet_composer_v21_ABSOLUTE_FIX.html:279:            highest: { note: 'E', octave: 7 },
quintet_composer_v21_ABSOLUTE_FIX.html:286:            lowest: { note: 'G', octave: 3 },
quintet_composer_v21_ABSOLUTE_FIX.html:287:            highest: { note: 'E', octave: 7 },
quintet_composer_v21_ABSOLUTE_FIX.html:294:            lowest: { note: 'C', octave: 3 },
quintet_composer_v21_ABSOLUTE_FIX.html:295:            highest: { note: 'E', octave: 6 },
quintet_composer_v21_ABSOLUTE_FIX.html:302:            lowest: { note: 'C', octave: 2 },
quintet_composer_v21_ABSOLUTE_FIX.html:303:            highest: { note: 'A', octave: 5 },
quintet_composer_v21_ABSOLUTE_FIX.html:340:    // Generate note in correct range
quintet_composer_v21_ABSOLUTE_FIX.html:341:    function generateNoteInRange(instrumentKey, scale) {
quintet_composer_v21_ABSOLUTE_FIX.html:343:        const note = scale[Math.floor(Math.random() * scale.length)];
quintet_composer_v21_ABSOLUTE_FIX.html:350:        // Parse note for XML
quintet_composer_v21_ABSOLUTE_FIX.html:351:        const step = note.replace(/[#b]/, '');
quintet_composer_v21_ABSOLUTE_FIX.html:353:        if (note.includes('#')) alter = 1;
quintet_composer_v21_ABSOLUTE_FIX.html:354:        if (note.includes('b')) alter = -1;
quintet_composer_v21_ABSOLUTE_FIX.html:356:        return { pitch: note, step: step, octave: octave, alter: alter };
quintet_composer_v21_ABSOLUTE_FIX.html:415:                        const notes = [];
quintet_composer_v21_ABSOLUTE_FIX.html:417:                            notes.push(generateNoteInRange(instrumentKey, keyData.scale));
quintet_composer_v21_ABSOLUTE_FIX.html:421:                            notes: notes,
quintet_composer_v21_ABSOLUTE_FIX.html:425:                        // Single note
quintet_composer_v21_ABSOLUTE_FIX.html:426:                        const note = generateNoteInRange(instrumentKey, keyData.scale);
quintet_composer_v21_ABSOLUTE_FIX.html:428:                            type: 'note',
quintet_composer_v21_ABSOLUTE_FIX.html:429:                            notes: [note],
quintet_composer_v21_ABSOLUTE_FIX.html:489:                        const chord = event.notes.map(n => n.pitch + n.octave).join('+');
quintet_composer_v21_ABSOLUTE_FIX.html:490:                        measureText += `<span class="note-stop">[${chord}]</span> `;
quintet_composer_v21_ABSOLUTE_FIX.html:492:                        const note = event.notes[0].pitch + event.notes[0].octave;
quintet_composer_v21_ABSOLUTE_FIX.html:493:                        measureText += `${note} `;
quintet_composer_v21_ABSOLUTE_FIX.html:584:                // Add notes
quintet_composer_v21_ABSOLUTE_FIX.html:586:                    event.notes.forEach((note, idx) => {
quintet_composer_v21_ABSOLUTE_FIX.html:588:      <note>`;
quintet_composer_v21_ABSOLUTE_FIX.html:597:          <step>${note.step}</step>`;
quintet_composer_v21_ABSOLUTE_FIX.html:599:                        if (note.alter !== 0) {
quintet_composer_v21_ABSOLUTE_FIX.html:601:          <alter>${note.alter}</alter>`;
quintet_composer_v21_ABSOLUTE_FIX.html:605:          <octave>${note.octave}</octave>
quintet_composer_v21_ABSOLUTE_FIX.html:609:      </note>`;
quintet_composer_v21_ABSOLUTE_FIX.html:669:    console.log('All features restored: keys, rhythms, stops');
quintet_composer_v22_FULL_FEATURES.html:164:        .note-stop {
quintet_composer_v22_FULL_FEATURES.html:222:                    <option value="whole">Whole Notes</option>
quintet_composer_v22_FULL_FEATURES.html:223:                    <option value="half">Half Notes</option>
quintet_composer_v22_FULL_FEATURES.html:224:                    <option value="quarter" selected>Quarter Notes</option>
quintet_composer_v22_FULL_FEATURES.html:270:            lowest: { note: 'E', octave: 3 },
quintet_composer_v22_FULL_FEATURES.html:271:            highest: { note: 'B', octave: 5 },
quintet_composer_v22_FULL_FEATURES.html:278:            lowest: { note: 'G', octave: 3 },
quintet_composer_v22_FULL_FEATURES.html:279:            highest: { note: 'E', octave: 7 },
quintet_composer_v22_FULL_FEATURES.html:286:            lowest: { note: 'G', octave: 3 },
quintet_composer_v22_FULL_FEATURES.html:287:            highest: { note: 'E', octave: 7 },
quintet_composer_v22_FULL_FEATURES.html:294:            lowest: { note: 'C', octave: 3 },
quintet_composer_v22_FULL_FEATURES.html:295:            highest: { note: 'E', octave: 6 },
quintet_composer_v22_FULL_FEATURES.html:302:            lowest: { note: 'C', octave: 2 },
quintet_composer_v22_FULL_FEATURES.html:303:            highest: { note: 'A', octave: 5 },
quintet_composer_v22_FULL_FEATURES.html:340:    // Generate note in correct range
quintet_composer_v22_FULL_FEATURES.html:341:    function generateNoteInRange(instrumentKey, scale) {
quintet_composer_v22_FULL_FEATURES.html:343:        const note = scale[Math.floor(Math.random() * scale.length)];
quintet_composer_v22_FULL_FEATURES.html:350:        // Parse note for XML
quintet_composer_v22_FULL_FEATURES.html:351:        const step = note.replace(/[#b]/, '');
quintet_composer_v22_FULL_FEATURES.html:353:        if (note.includes('#')) alter = 1;
quintet_composer_v22_FULL_FEATURES.html:354:        if (note.includes('b')) alter = -1;
quintet_composer_v22_FULL_FEATURES.html:356:        return { pitch: note, step: step, octave: octave, alter: alter };
quintet_composer_v22_FULL_FEATURES.html:415:                        const notes = [];
quintet_composer_v22_FULL_FEATURES.html:417:                            notes.push(generateNoteInRange(instrumentKey, keyData.scale));
quintet_composer_v22_FULL_FEATURES.html:421:                            notes: notes,
quintet_composer_v22_FULL_FEATURES.html:425:                        // Single note
quintet_composer_v22_FULL_FEATURES.html:426:                        const note = generateNoteInRange(instrumentKey, keyData.scale);
quintet_composer_v22_FULL_FEATURES.html:428:                            type: 'note',
quintet_composer_v22_FULL_FEATURES.html:429:                            notes: [note],
quintet_composer_v22_FULL_FEATURES.html:489:                        const chord = event.notes.map(n => n.pitch + n.octave).join('+');
quintet_composer_v22_FULL_FEATURES.html:490:                        measureText += `<span class="note-stop">[${chord}]</span> `;
quintet_composer_v22_FULL_FEATURES.html:492:                        const note = event.notes[0].pitch + event.notes[0].octave;
quintet_composer_v22_FULL_FEATURES.html:493:                        measureText += `${note} `;
quintet_composer_v22_FULL_FEATURES.html:584:                // Add notes
quintet_composer_v22_FULL_FEATURES.html:586:                    event.notes.forEach((note, idx) => {
quintet_composer_v22_FULL_FEATURES.html:588:      <note>`;
quintet_composer_v22_FULL_FEATURES.html:597:          <step>${note.step}</step>`;
quintet_composer_v22_FULL_FEATURES.html:599:                        if (note.alter !== 0) {
quintet_composer_v22_FULL_FEATURES.html:601:          <alter>${note.alter}</alter>`;
quintet_composer_v22_FULL_FEATURES.html:605:          <octave>${note.octave}</octave>
quintet_composer_v22_FULL_FEATURES.html:609:      </note>`;
quintet_composer_v22_FULL_FEATURES.html:669:    console.log('All features restored: keys, rhythms, stops');
quintet_composer_v23_FIXED.html:234:                <li>Uses correct 256 divisions per quarter note</li>
quintet_composer_v23_FIXED.html:313:        // CRITICAL: Sibelius 25.4 requires exactly 256 divisions per quarter note
quintet_composer_v23_FIXED.html:328:        // Instrument ranges (MIDI note numbers)
quintet_composer_v23_FIXED.html:342:        // Convert MIDI note to pitch
quintet_composer_v23_FIXED.html:344:            const notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v23_FIXED.html:346:            const noteIndex = midi % 12;
quintet_composer_v23_FIXED.html:347:            const noteName = notes[noteIndex];
quintet_composer_v23_FIXED.html:350:                step: noteName.replace('#', ''),
quintet_composer_v23_FIXED.html:351:                alter: noteName.includes('#') ? 1 : 0,
quintet_composer_v23_FIXED.html:356:        // Get random note in range
quintet_composer_v23_FIXED.html:357:        function getRandomNoteInRange(min, max) {
quintet_composer_v23_FIXED.html:361:        // Generate note with proper duration
quintet_composer_v23_FIXED.html:362:        function generateNote(instrument, duration, measureNumber, noteInMeasure, options = {}) {
quintet_composer_v23_FIXED.html:364:            const midi = getRandomNoteInRange(range.min, range.max);
quintet_composer_v23_FIXED.html:367:            let noteType;
quintet_composer_v23_FIXED.html:368:            if (duration === DURATIONS.whole) noteType = 'whole';
quintet_composer_v23_FIXED.html:369:            else if (duration === DURATIONS.half) noteType = 'half';
quintet_composer_v23_FIXED.html:370:            else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet_composer_v23_FIXED.html:371:            else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet_composer_v23_FIXED.html:372:            else if (duration === DURATIONS.sixteenth) noteType = '16th';
quintet_composer_v23_FIXED.html:373:            else noteType = 'quarter'; // fallback
quintet_composer_v23_FIXED.html:376:      <note>
quintet_composer_v23_FIXED.html:385:        <type>${noteType}</type>
quintet_composer_v23_FIXED.html:387:      </note>`;
quintet_composer_v23_FIXED.html:435:            let noteCount = 0;
quintet_composer_v23_FIXED.html:439:                let noteDuration;
quintet_composer_v23_FIXED.html:449:                    noteDuration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)] || DURATIONS.quarter;
quintet_composer_v23_FIXED.html:451:                    // Simple quarter notes
quintet_composer_v23_FIXED.html:452:                    noteDuration = Math.min(DURATIONS.quarter, remainingDuration);
quintet_composer_v23_FIXED.html:455:                // Generate main note
quintet_composer_v23_FIXED.html:456:                xml += generateNote(instrument, noteDuration, measureNumber, noteCount);
quintet_composer_v23_FIXED.html:460:                    xml += generateNote(instrument, noteDuration, measureNumber, noteCount, { isChord: true });
quintet_composer_v23_FIXED.html:462:                        xml += generateNote(instrument, noteDuration, measureNumber, noteCount, { isChord: true });
quintet_composer_v23_FIXED.html:466:                currentDuration += noteDuration;
quintet_composer_v23_FIXED.html:467:                noteCount++;
quintet_composer_v23_FIXED.html:518:      <supports element="beam" type="yes"/>
quintet_composer_v26_WORKING_BASE.html:210:                <label for="density">Note Density:</label>
quintet_composer_v26_WORKING_BASE.html:315:        function midiToNote(midi) {
quintet_composer_v26_WORKING_BASE.html:316:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v26_WORKING_BASE.html:319:            const noteIndex = midi % 12;
quintet_composer_v26_WORKING_BASE.html:320:            const noteName = noteNames[noteIndex];
quintet_composer_v26_WORKING_BASE.html:323:            const step = noteName.replace('#', '');
quintet_composer_v26_WORKING_BASE.html:324:            const alter = noteName.includes('#') ? 1 : 0;
quintet_composer_v26_WORKING_BASE.html:328:                const noteString = `${noteName}${octave}`;
quintet_composer_v26_WORKING_BASE.html:329:                debugLog(`MIDI ${midi} -> ${noteString}`);
quintet_composer_v26_WORKING_BASE.html:336:            let rangeInfo = 'INSTRUMENT RANGES (MIDI -> Note):\n\n';
quintet_composer_v26_WORKING_BASE.html:339:                const lowNote = midiToNote(range.min);
quintet_composer_v26_WORKING_BASE.html:340:                const highNote = midiToNote(range.max);
quintet_composer_v26_WORKING_BASE.html:341:                const lowName = `${lowNote.step}${lowNote.alter ? '#' : ''}${lowNote.octave}`;
quintet_composer_v26_WORKING_BASE.html:342:                const highName = `${highNote.step}${highNote.alter ? '#' : ''}${highNote.octave}`;
quintet_composer_v26_WORKING_BASE.html:346:                rangeInfo += `  Notes: ${lowName} to ${highName}\n`;
quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet_composer_v26_WORKING_BASE.html:360:            const note = midiToNote(midi);
quintet_composer_v26_WORKING_BASE.html:361:            let xml = '<note>';
quintet_composer_v26_WORKING_BASE.html:363:            // CRITICAL: chord element must come FIRST after <note>
quintet_composer_v26_WORKING_BASE.html:369:            xml += `<step>${note.step}</step>`;
quintet_composer_v26_WORKING_BASE.html:370:            if (note.alter) {
quintet_composer_v26_WORKING_BASE.html:371:                xml += `<alter>${note.alter}</alter>`;
quintet_composer_v26_WORKING_BASE.html:373:            xml += `<octave>${note.octave}</octave>`;
quintet_composer_v26_WORKING_BASE.html:377:            xml += `<type>${noteType}</type>`;
quintet_composer_v26_WORKING_BASE.html:388:            xml += '</note>';
quintet_composer_v26_WORKING_BASE.html:404:                // Test mode: specific notes to verify ranges
quintet_composer_v26_WORKING_BASE.html:407:                    // First measure: lowest note
quintet_composer_v26_WORKING_BASE.html:409:                    debugLog(`${instrumentName}: Testing LOWEST note - MIDI ${testMidi}`);
quintet_composer_v26_WORKING_BASE.html:411:                    // Second measure: middle note
quintet_composer_v26_WORKING_BASE.html:413:                    debugLog(`${instrumentName}: Testing MIDDLE note - MIDI ${testMidi}`);
quintet_composer_v26_WORKING_BASE.html:415:                    // Third measure: highest note
quintet_composer_v26_WORKING_BASE.html:417:                    debugLog(`${instrumentName}: Testing HIGHEST note - MIDI ${testMidi}`);
quintet_composer_v26_WORKING_BASE.html:425:                // Generate whole notes for clarity in test mode
quintet_composer_v26_WORKING_BASE.html:426:                xml += generateNoteXML(testMidi, DURATIONS.whole, 'whole', false);
quintet_composer_v26_WORKING_BASE.html:434:                    let duration, noteType;
quintet_composer_v26_WORKING_BASE.html:441:                            noteType = 'whole';
quintet_composer_v26_WORKING_BASE.html:444:                            noteType = 'half';
quintet_composer_v26_WORKING_BASE.html:447:                            noteType = 'quarter';
quintet_composer_v26_WORKING_BASE.html:450:                            noteType = 'eighth';
quintet_composer_v26_WORKING_BASE.html:455:                                noteType = 'quarter';
quintet_composer_v26_WORKING_BASE.html:457:                                noteType = 'eighth';
quintet_composer_v26_WORKING_BASE.html:459:                                noteType = 'sixteenth';
quintet_composer_v26_WORKING_BASE.html:466:                            noteType = 'quarter';
quintet_composer_v26_WORKING_BASE.html:469:                            noteType = 'eighth';
quintet_composer_v26_WORKING_BASE.html:476:                        // Determine correct note type for remaining duration
quintet_composer_v26_WORKING_BASE.html:477:                        if (duration === DURATIONS.whole) noteType = 'whole';
quintet_composer_v26_WORKING_BASE.html:478:                        else if (duration === DURATIONS.half) noteType = 'half';
quintet_composer_v26_WORKING_BASE.html:479:                        else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet_composer_v26_WORKING_BASE.html:480:                        else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet_composer_v26_WORKING_BASE.html:481:                        else noteType = 'sixteenth';
quintet_composer_v26_WORKING_BASE.html:484:                    // Generate note(s) - ENSURE within range
quintet_composer_v26_WORKING_BASE.html:499:                    xml += generateNoteXML(midi, duration, noteType, false, articulation);
quintet_composer_v26_WORKING_BASE.html:506:                        xml += generateNoteXML(midi2, duration, noteType, true, articulation);
quintet_composer_v26_WORKING_BASE.html:560:            // Generate notes for first measure
quintet_composer_v26_WORKING_BASE.html:609:            xml += '<supports element="beam" type="yes"/>\n';
quintet_composer_v26_WORKING_BASE.html:709:                    name: 'Note Structure',
quintet_composer_v26_WORKING_BASE.html:711:                    message: 'Notes have pitch and duration'
quintet_composer_v28_REALITY_FIX.html:250:                    <input type="checkbox" id="simpleMode"> Simple Mode (Whole notes only)
quintet_composer_v28_REALITY_FIX.html:412:                debugLog(`Measure ${m + 1}: ${chordSymbol} - Notes: ${chordTones.join(', ')}`);
quintet_composer_v28_REALITY_FIX.html:424:        function midiToNote(midi) {
quintet_composer_v28_REALITY_FIX.html:425:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v28_REALITY_FIX.html:427:            const noteIndex = midi % 12;
quintet_composer_v28_REALITY_FIX.html:428:            const noteName = noteNames[noteIndex];
quintet_composer_v28_REALITY_FIX.html:429:            const step = noteName.replace('#', '');
quintet_composer_v28_REALITY_FIX.html:430:            const alter = noteName.includes('#') ? 1 : 0;
quintet_composer_v28_REALITY_FIX.html:434:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v28_REALITY_FIX.html:435:            const note = midiToNote(midi);
quintet_composer_v28_REALITY_FIX.html:436:            let xml = '<note>';
quintet_composer_v28_REALITY_FIX.html:443:            xml += `<step>${note.step}</step>`;
quintet_composer_v28_REALITY_FIX.html:444:            if (note.alter) {
quintet_composer_v28_REALITY_FIX.html:445:                xml += `<alter>${note.alter}</alter>`;
quintet_composer_v28_REALITY_FIX.html:447:            xml += `<octave>${note.octave}</octave>`;
quintet_composer_v28_REALITY_FIX.html:451:            xml += `<type>${noteType}</type>`;
quintet_composer_v28_REALITY_FIX.html:453:            xml += '</note>';
quintet_composer_v28_REALITY_FIX.html:464:                xml += generateNoteXML(midi, DURATIONS.eighth, 'eighth');
quintet_composer_v28_REALITY_FIX.html:472:            // Quarter note chords
quintet_composer_v28_REALITY_FIX.html:474:                // First note of chord
quintet_composer_v28_REALITY_FIX.html:476:                xml += generateNoteXML(root, DURATIONS.quarter, 'quarter', false);
quintet_composer_v28_REALITY_FIX.html:481:                    xml += generateNoteXML(third, DURATIONS.quarter, 'quarter', true);
quintet_composer_v28_REALITY_FIX.html:485:                    xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter', true);
quintet_composer_v28_REALITY_FIX.html:497:                // Simple quarter notes from chord
quintet_composer_v28_REALITY_FIX.html:501:                    xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:515:                    xml += generateNoteXML(midi, r.duration, r.type);
quintet_composer_v28_REALITY_FIX.html:525:            // Sustained whole note from chord
quintet_composer_v28_REALITY_FIX.html:528:            xml += generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v28_REALITY_FIX.html:538:            xml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:539:            xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:540:            xml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:541:            xml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v28_REALITY_FIX.html:553:                // Simple mode - just whole notes
quintet_composer_v28_REALITY_FIX.html:556:                return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v29_GUITAR_ENHANCED.html:182:                    <input type="checkbox" id="simpleMode"> Simple Mode (Whole notes)</label>
quintet_composer_v29_GUITAR_ENHANCED.html:330:        function midiToNote(midi) {
quintet_composer_v29_GUITAR_ENHANCED.html:331:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v29_GUITAR_ENHANCED.html:333:            const noteIndex = midi % 12;
quintet_composer_v29_GUITAR_ENHANCED.html:334:            const noteName = noteNames[noteIndex];
quintet_composer_v29_GUITAR_ENHANCED.html:335:            const step = noteName.replace('#', '');
quintet_composer_v29_GUITAR_ENHANCED.html:336:            const alter = noteName.includes('#') ? 1 : 0;
quintet_composer_v29_GUITAR_ENHANCED.html:340:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v29_GUITAR_ENHANCED.html:341:            const note = midiToNote(midi);
quintet_composer_v29_GUITAR_ENHANCED.html:342:            let xml = '<note>';
quintet_composer_v29_GUITAR_ENHANCED.html:345:            xml += '<step>' + note.step + '</step>';
quintet_composer_v29_GUITAR_ENHANCED.html:346:            if (note.alter) xml += '<alter>' + note.alter + '</alter>';
quintet_composer_v29_GUITAR_ENHANCED.html:347:            xml += '<octave>' + note.octave + '</octave>';
quintet_composer_v29_GUITAR_ENHANCED.html:351:            xml += '<type>' + noteType + '</type>';
quintet_composer_v29_GUITAR_ENHANCED.html:352:            xml += '</note>';
quintet_composer_v29_GUITAR_ENHANCED.html:363:                // Block chords - quarter note chords
quintet_composer_v29_GUITAR_ENHANCED.html:365:                    // Generate 3-note chord
quintet_composer_v29_GUITAR_ENHANCED.html:368:                        xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter', j > 0);
quintet_composer_v29_GUITAR_ENHANCED.html:374:                const noteType = pattern.rhythm;
quintet_composer_v29_GUITAR_ENHANCED.html:380:                        xml += generateNoteXML(midi, duration, noteType);
quintet_composer_v29_GUITAR_ENHANCED.html:395:                return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v29_GUITAR_ENHANCED.html:412:                        xml += generateNoteXML(midi, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:421:                    return generateNoteXML(midi, DURATIONS.whole, 'whole');
quintet_composer_v29_GUITAR_ENHANCED.html:428:                    bassXml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:429:                    bassXml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:430:                    bassXml += generateNoteXML(root, DURATIONS.quarter, 'quarter');
quintet_composer_v29_GUITAR_ENHANCED.html:431:                    bassXml += generateNoteXML(fifth, DURATIONS.quarter, 'quarter');
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:167:                Enable Failsafe (ALWAYS generates notes)
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:272:        let notesGenerated = 0;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:294:        function generateNotesWithFailsafe(instrumentName, measureNum, chord, complexity) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:295:            let notes = [];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:302:                notes = generateAdvancedNotes(instrumentName, chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:304:                notes = generateModerateNotes(instrumentName, chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:307:            // FAILSAFE LEVEL 1: If no notes, use simple generation
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:308:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:311:                notes = generateSimpleNotes(instrumentName, chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:315:            // FAILSAFE LEVEL 2: If still no notes, generate quarter notes
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:316:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:320:                notes = [
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:328:            // FAILSAFE LEVEL 3: Ultimate fallback - middle C whole note
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:329:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:331:                notes = [{ midi: 60, duration: durations.whole }]; // Middle C
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:334:            notesGenerated += notes.length;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:335:            return notes;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:339:        function generateSimpleNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:341:            const chordNotes = getChordNotes(chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:342:            const notes = [];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:344:            // Generate 4 quarter notes from chord
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:346:                const chordTone = chordNotes[i % chordNotes.length];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:352:                notes.push({ midi: finalMidi, duration: durations.quarter });
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:355:            return notes;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:359:        function generateModerateNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:362:                const notes = [];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:367:                    const chordNotes = getChordNotes(chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:370:                        const midi = 48 + chordNotes[interval % chordNotes.length];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:371:                        notes.push({ midi: Math.min(range.max, midi), duration: durations.eighth });
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:375:                    return generateSimpleNotes(instrumentName, chord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:378:                return notes;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:386:        function generateAdvancedNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:390:                const notes = [];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:397:                return generateSimpleNotes(instrumentName, chord); // Fallback to simple
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:404:        function getChordNotes(chordSymbol) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:417:        function midiToNote(midi) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:418:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:420:            const noteName = noteNames[midi % 12];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:421:            return { step: noteName.replace('#', ''), alter: noteName.includes('#') ? 1 : 0, octave };
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:433:            notesGenerated = 0;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:494:                    // Generate notes with failsafe
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:495:                    const notes = generateNotesWithFailsafe(instrumentName, measure + 1, chord, complexity);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:497:                    if (document.getElementById('validateMeasures').checked && notes.length === 0) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:498:                        debugLog(`CRITICAL: No notes in ${instrumentName} measure ${measure + 1}!`, 'error');
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:501:                    notes.forEach((noteData, noteIndex) => {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:502:                        const note = midiToNote(noteData.midi);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:504:      <note>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:505:        ${noteIndex > 0 && noteData.chord ? '<chord/>' : ''}
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:507:          <step>${note.step}</step>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:508:          ${note.alter ? `<alter>${note.alter}</alter>` : ''}
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:509:          <octave>${note.octave}</octave>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:511:        <duration>${noteData.duration}</duration>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:512:        <type>${getDurationType(noteData.duration)}</type>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:513:      </note>`;
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:528:            debugLog(`Generation complete: ${measuresGenerated} measures, ${notesGenerated} notes, ${failsafeTriggered} failsafes triggered`, 'info');
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:601:            let notes = generateAdvancedNotes(testInstrument, testChord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:602:            if (notes.length === 0) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:603:                notes = generateSimpleNotes(testInstrument, testChord);
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:609:            notes = [];
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:610:            notes = generateNotesWithFailsafe(testInstrument, 1, testChord, 'advanced');
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:611:            if (notes.length > 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:302:                description: 'Contrapuntal texture with constant eighth notes'
quintet_composer_v32_COMPOSER_PROFILES.html:424:        // FAILSAFE NOTE GENERATION - Bulletproof from v31
quintet_composer_v32_COMPOSER_PROFILES.html:425:        function generateNotesWithFailsafe(instrument, measure, chord, profile) {
quintet_composer_v32_COMPOSER_PROFILES.html:426:            let notes = [];
quintet_composer_v32_COMPOSER_PROFILES.html:430:                notes = generateProfileNotes(instrument, chord, profile);
quintet_composer_v32_COMPOSER_PROFILES.html:432:                if (notes.length > 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:433:                    debugLog(`✓ Generated ${notes.length} notes for ${instrument} m${measure}`);
quintet_composer_v32_COMPOSER_PROFILES.html:440:            if (!notes || notes.length === 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:444:                    notes = generateSimpleNotes(instrument, chord);
quintet_composer_v32_COMPOSER_PROFILES.html:450:            if (!notes || notes.length === 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:454:                notes = [
quintet_composer_v32_COMPOSER_PROFILES.html:462:            return notes;
quintet_composer_v32_COMPOSER_PROFILES.html:465:        // Generate notes based on composer profile
quintet_composer_v32_COMPOSER_PROFILES.html:466:        function generateProfileNotes(instrument, chord, profile) {
quintet_composer_v32_COMPOSER_PROFILES.html:468:            const chordNotes = getChordNotes(chord, profile.era === 'Jazz');
quintet_composer_v32_COMPOSER_PROFILES.html:470:            const notes = [];
quintet_composer_v32_COMPOSER_PROFILES.html:477:                        const midi = 48 + chordNotes[0];
quintet_composer_v32_COMPOSER_PROFILES.html:478:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:485:                            notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:486:                                midi: Math.min(range.max, 48 + chordNotes[1]), 
quintet_composer_v32_COMPOSER_PROFILES.html:490:                            notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:491:                                midi: Math.min(range.max, 48 + chordNotes[2]), 
quintet_composer_v32_COMPOSER_PROFILES.html:501:                        const midi = 48 + chordNotes[index % chordNotes.length];
quintet_composer_v32_COMPOSER_PROFILES.html:502:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:510:                        const noteIndex = i % chordNotes.length;
quintet_composer_v32_COMPOSER_PROFILES.html:511:                        const octaveShift = Math.floor(i / chordNotes.length) * 12;
quintet_composer_v32_COMPOSER_PROFILES.html:512:                        const midi = 48 + chordNotes[noteIndex] + octaveShift;
quintet_composer_v32_COMPOSER_PROFILES.html:513:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:523:                            const midi = 48 + chordNotes[index % chordNotes.length];
quintet_composer_v32_COMPOSER_PROFILES.html:524:                            notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:532:                    return generateSimpleNotes(instrument, chord);
quintet_composer_v32_COMPOSER_PROFILES.html:541:                        const base = 67 + chordNotes[0];
quintet_composer_v32_COMPOSER_PROFILES.html:543:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:552:                        const midi = 67 + chordNotes[degree % chordNotes.length];
quintet_composer_v32_COMPOSER_PROFILES.html:553:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:561:                        const midi = 67 + chordNotes[i % chordNotes.length];
quintet_composer_v32_COMPOSER_PROFILES.html:562:                        notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:574:                let noteIndex = 0;
quintet_composer_v32_COMPOSER_PROFILES.html:580:                    const midi = 60 + chordNotes[chordTone % chordNotes.length] + octaveAdjust;
quintet_composer_v32_COMPOSER_PROFILES.html:581:                    const duration = rhythms[noteIndex % rhythms.length];
quintet_composer_v32_COMPOSER_PROFILES.html:583:                    notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:589:                    noteIndex++;
quintet_composer_v32_COMPOSER_PROFILES.html:593:            return notes;
quintet_composer_v32_COMPOSER_PROFILES.html:596:        // Simple note generation (failsafe)
quintet_composer_v32_COMPOSER_PROFILES.html:597:        function generateSimpleNotes(instrument, chord) {
quintet_composer_v32_COMPOSER_PROFILES.html:599:            const chordNotes = getChordNotes(chord, false);
quintet_composer_v32_COMPOSER_PROFILES.html:600:            const notes = [];
quintet_composer_v32_COMPOSER_PROFILES.html:603:                const chordTone = chordNotes[i % chordNotes.length];
quintet_composer_v32_COMPOSER_PROFILES.html:607:                notes.push({ 
quintet_composer_v32_COMPOSER_PROFILES.html:613:            return notes;
quintet_composer_v32_COMPOSER_PROFILES.html:616:        function getChordNotes(chordSymbol, isJazz) {
quintet_composer_v32_COMPOSER_PROFILES.html:642:        function midiToNote(midi) {
quintet_composer_v32_COMPOSER_PROFILES.html:643:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v32_COMPOSER_PROFILES.html:645:            const noteName = noteNames[midi % 12];
quintet_composer_v32_COMPOSER_PROFILES.html:647:                step: noteName.replace('#', ''), 
quintet_composer_v32_COMPOSER_PROFILES.html:648:                alter: noteName.includes('#') ? 1 : 0, 
quintet_composer_v32_COMPOSER_PROFILES.html:739:                    // Generate notes with failsafe
quintet_composer_v32_COMPOSER_PROFILES.html:740:                    const notes = generateNotesWithFailsafe(
quintet_composer_v32_COMPOSER_PROFILES.html:747:                    notes.forEach((noteData, noteIndex) => {
quintet_composer_v32_COMPOSER_PROFILES.html:748:                        const note = midiToNote(noteData.midi);
quintet_composer_v32_COMPOSER_PROFILES.html:750:      <note>
quintet_composer_v32_COMPOSER_PROFILES.html:751:        ${noteData.chord ? '<chord/>' : ''}
quintet_composer_v32_COMPOSER_PROFILES.html:753:          <step>${note.step}</step>
quintet_composer_v32_COMPOSER_PROFILES.html:754:          ${note.alter ? `<alter>${note.alter}</alter>` : ''}
quintet_composer_v32_COMPOSER_PROFILES.html:755:          <octave>${note.octave}</octave>
quintet_composer_v32_COMPOSER_PROFILES.html:757:        <duration>${noteData.duration}</duration>
quintet_composer_v32_COMPOSER_PROFILES.html:758:        <type>${getDurationType(noteData.duration)}</type>`;
quintet_composer_v32_COMPOSER_PROFILES.html:761:                        if (profile.ornaments && Math.random() < 0.1 && noteIndex === 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:769:      </note>`;
quintet_composer_v32_COMPOSER_PROFILES.html:859:            const testNotes = generateNotesWithFailsafe(
quintet_composer_v32_COMPOSER_PROFILES.html:866:            if (testNotes && testNotes.length > 0) {
quintet_composer_v32_COMPOSER_PROFILES.html:868:                debugLog(`Test generated ${testNotes.length} notes`);
quintet_composer_v40_WORKING.html:278:                        xml += '        <divisions>4</divisions>\n'; // 4 divisions per quarter note
quintet_composer_v40_WORKING.html:320:                    // Generate notes based on composer style
quintet_composer_v40_WORKING.html:321:                    const notes = generateNotesForStyle(part.name, m);
quintet_composer_v40_WORKING.html:323:                    notes.forEach(note => {
quintet_composer_v40_WORKING.html:324:                        xml += '      <note>\n';
quintet_composer_v40_WORKING.html:326:                        xml += `          <step>${note.step}</step>\n`;
quintet_composer_v40_WORKING.html:327:                        if (note.alter) {
quintet_composer_v40_WORKING.html:328:                            xml += `          <alter>${note.alter}</alter>\n`;
quintet_composer_v40_WORKING.html:330:                        xml += `          <octave>${note.octave}</octave>\n`;
quintet_composer_v40_WORKING.html:332:                        xml += `        <duration>${note.duration}</duration>\n`; // Duration in divisions
quintet_composer_v40_WORKING.html:334:                        xml += `        <type>${note.type}</type>\n`;
quintet_composer_v40_WORKING.html:335:                        if (note.dot) {
quintet_composer_v40_WORKING.html:338:                        xml += '      </note>\n';
quintet_composer_v40_WORKING.html:366:        // Generate notes for each instrument and measure
quintet_composer_v40_WORKING.html:367:        function generateNotesForStyle(instrument, measureNum) {
quintet_composer_v40_WORKING.html:368:            const notes = [];
quintet_composer_v40_WORKING.html:379:                // Bach-style: running eighth notes
quintet_composer_v40_WORKING.html:382:                    notes.push({
quintet_composer_v40_WORKING.html:385:                        duration: 2, // eighth note = 2 divisions
quintet_composer_v40_WORKING.html:391:                notes.push({ step: 'C', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:392:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:393:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:394:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:397:                notes.push({ step: 'C', octave: baseOctave, duration: 8, type: 'half' });
quintet_composer_v40_WORKING.html:398:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:399:                notes.push({ step: 'C', octave: baseOctave + 1, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:402:                notes.push({ step: 'E', octave: baseOctave, duration: 6, type: 'quarter', dot: true });
quintet_composer_v40_WORKING.html:403:                notes.push({ step: 'F', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:404:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:405:                notes.push({ step: 'A', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:409:                    notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:410:                    notes.push({ step: 'E', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:414:                notes.push({ step: 'C', octave: baseOctave, duration: 16, type: 'whole' });
quintet_composer_v40_WORKING.html:417:                notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:418:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet_composer_v40_WORKING.html:419:                notes.push({ step: 'G', octave: baseOctave, duration: 2, type: 'eighth' });
quintet_composer_v40_WORKING.html:420:                notes.push({ step: 'B', octave: baseOctave, duration: 8, type: 'half' });
quintet_composer_v40_WORKING.html:423:            return notes;
quintet_composer_v41_AUTHENTIC_MIDI.html:380:        let generatedNotes = {};
quintet_composer_v41_AUTHENTIC_MIDI.html:445:            generatedNotes = {};
quintet_composer_v41_AUTHENTIC_MIDI.html:448:                generatedNotes[instName] = [];
quintet_composer_v41_AUTHENTIC_MIDI.html:453:                    const measureNotes = generateMeasureForInstrument(instName, inst, chordSymbol, keyData, m);
quintet_composer_v41_AUTHENTIC_MIDI.html:454:                    generatedNotes[instName].push(measureNotes);
quintet_composer_v41_AUTHENTIC_MIDI.html:458:            return generatedNotes;
quintet_composer_v41_AUTHENTIC_MIDI.html:462:            const notes = [];
quintet_composer_v41_AUTHENTIC_MIDI.html:472:                    // Running sixteenth notes
quintet_composer_v41_AUTHENTIC_MIDI.html:477:                        notes.push({
quintet_composer_v41_AUTHENTIC_MIDI.html:479:                            duration: 1, // 16th note
quintet_composer_v41_AUTHENTIC_MIDI.html:485:                    notes.push({ pitch: chord.root, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:486:                    notes.push({ pitch: chord.root - 5, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:487:                    notes.push({ pitch: chord.root - 3, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:488:                    notes.push({ pitch: chord.root + 2, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:490:                    // Inner voices: steady eighth notes
quintet_composer_v41_AUTHENTIC_MIDI.html:492:                        const chordTone = chord.notes[i % chord.notes.length];
quintet_composer_v41_AUTHENTIC_MIDI.html:493:                        notes.push({
quintet_composer_v41_AUTHENTIC_MIDI.html:504:                    notes.push({ pitch: chord.notes[2] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:505:                    notes.push({ pitch: chord.notes[1] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:506:                    notes.push({ pitch: chord.notes[0] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:512:                        notes.push({
quintet_composer_v41_AUTHENTIC_MIDI.html:513:                            pitch: constrainToRange(chord.notes[chordIndex % chord.notes.length], inst.range),
quintet_composer_v41_AUTHENTIC_MIDI.html:520:                    notes.push({ pitch: chord.notes[1], duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:526:                    notes.push({ pitch: chord.root, duration: 12, type: 'half', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:527:                    notes.push({ pitch: chord.root + 7, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:530:                    notes.push({ pitch: chord.notes[0], duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:531:                    notes.push({ pitch: chord.notes[1], duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:532:                    notes.push({ pitch: chord.notes[2], duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:539:                    const startNote = keyData.root + wholeTone[measureNum % 6];
quintet_composer_v41_AUTHENTIC_MIDI.html:542:                        notes.push({ pitch: startNote + 12, duration: 6, type: 'quarter', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:543:                        notes.push({ pitch: startNote + 14, duration: 2, type: 'eighth' });
quintet_composer_v41_AUTHENTIC_MIDI.html:544:                        notes.push({ pitch: startNote + 16, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:547:                        notes.push({ pitch: startNote, duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:551:                    notes.push({ pitch: chord.root, duration: 16, type: 'whole' });
quintet_composer_v41_AUTHENTIC_MIDI.html:557:                    notes.push({
quintet_composer_v41_AUTHENTIC_MIDI.html:558:                        pitch: chord.notes[pattern[i] % chord.notes.length],
quintet_composer_v41_AUTHENTIC_MIDI.html:567:                    notes.push({ pitch: chord.notes[2] + 12, duration: 3, type: 'eighth', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:568:                    notes.push({ pitch: chord.notes[3] + 12, duration: 1, type: '16th' });
quintet_composer_v41_AUTHENTIC_MIDI.html:569:                    notes.push({ pitch: chord.notes[1] + 12, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:570:                    notes.push({ pitch: chord.notes[0] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:573:                    notes.push({ pitch: chord.root, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:574:                    notes.push({ pitch: chord.root + 5, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:575:                    notes.push({ pitch: chord.root + 7, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:576:                    notes.push({ pitch: chord.root + 3, duration: 4, type: 'quarter' });
quintet_composer_v41_AUTHENTIC_MIDI.html:579:                    notes.push({ pitch: 0, duration: 3, type: 'eighth', rest: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:580:                    notes.push({ pitch: chord.notes[1], duration: 3, type: 'eighth', dot: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:581:                    notes.push({ pitch: 0, duration: 2, type: 'eighth', rest: true });
quintet_composer_v41_AUTHENTIC_MIDI.html:582:                    notes.push({ pitch: chord.notes[2], duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:587:                    notes.push({ pitch: chord.notes[0] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:588:                    notes.push({ pitch: chord.notes[2] + 12, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:591:                    notes.push({ pitch: chord.root, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:592:                    notes.push({ pitch: chord.root + 7, duration: 8, type: 'half' });
quintet_composer_v41_AUTHENTIC_MIDI.html:596:            return notes;
quintet_composer_v41_AUTHENTIC_MIDI.html:603:            let notes = [];
quintet_composer_v41_AUTHENTIC_MIDI.html:615:            // Build chord notes
quintet_composer_v41_AUTHENTIC_MIDI.html:618:                notes = [chordRoot, chordRoot + 4, chordRoot + 7, chordRoot + 11];
quintet_composer_v41_AUTHENTIC_MIDI.html:621:                notes = [chordRoot, chordRoot + 4, chordRoot + 7, chordRoot + 11];
quintet_composer_v41_AUTHENTIC_MIDI.html:624:                notes = [chordRoot, chordRoot + 3, chordRoot + 7];
quintet_composer_v41_AUTHENTIC_MIDI.html:627:                notes = [chordRoot, chordRoot + 4, chordRoot + 7];
quintet_composer_v41_AUTHENTIC_MIDI.html:630:            return { root: chordRoot, notes };
quintet_composer_v41_AUTHENTIC_MIDI.html:704:                    // Add notes
quintet_composer_v41_AUTHENTIC_MIDI.html:705:                    const measureNotes = generatedNotes[instName][m];
quintet_composer_v41_AUTHENTIC_MIDI.html:706:                    measureNotes.forEach(note => {
quintet_composer_v41_AUTHENTIC_MIDI.html:707:                        if (!note.rest) {
quintet_composer_v41_AUTHENTIC_MIDI.html:708:                            xml += '      <note>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:709:                            const pitchInfo = midiToPitch(note.pitch);
quintet_composer_v41_AUTHENTIC_MIDI.html:717:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:719:                            xml += `        <type>${note.type}</type>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:720:                            if (note.dot) {
quintet_composer_v41_AUTHENTIC_MIDI.html:723:                            xml += '      </note>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:725:                            xml += '      <note>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:726:                            xml += '        <rest/>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:727:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:729:                            xml += `        <type>${note.type}</type>\n`;
quintet_composer_v41_AUTHENTIC_MIDI.html:730:                            xml += '      </note>\n';
quintet_composer_v41_AUTHENTIC_MIDI.html:754:            const ppq = 480; // Pulses per quarter note
quintet_composer_v41_AUTHENTIC_MIDI.html:793:                // Add notes
quintet_composer_v41_AUTHENTIC_MIDI.html:794:                generatedNotes[instName].forEach(measure => {
quintet_composer_v41_AUTHENTIC_MIDI.html:795:                    measure.forEach(note => {
quintet_composer_v41_AUTHENTIC_MIDI.html:796:                        if (!note.rest) {
quintet_composer_v41_AUTHENTIC_MIDI.html:798:                            const duration = note.duration * (ppq / 4); // Convert to MIDI ticks
quintet_composer_v41_AUTHENTIC_MIDI.html:800:                            // Note on
quintet_composer_v41_AUTHENTIC_MIDI.html:802:                            track.push(...[0x90 + channel, note.pitch, velocity]);
quintet_composer_v41_AUTHENTIC_MIDI.html:804:                            // Note off
quintet_composer_v41_AUTHENTIC_MIDI.html:806:                            track.push(...[0x80 + channel, note.pitch, 0]);
quintet_composer_v41_AUTHENTIC_MIDI.html:808:                            // Rest
quintet_composer_v41_AUTHENTIC_MIDI.html:809:                            const duration = note.duration * (ppq / 4);
quintet_composer_v41_AUTHENTIC_MIDI.html:840:            const noteMap = [
quintet_composer_v41_AUTHENTIC_MIDI.html:859:                step: noteMap[pitchClass].step,
quintet_composer_v41_AUTHENTIC_MIDI.html:860:                alter: noteMap[pitchClass].alter,
quintet_composer_v42_1_RANGE_FIX.html:245:        const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v42_1_RANGE_FIX.html:247:        function midiToNoteName(midi) {
quintet_composer_v42_1_RANGE_FIX.html:249:            return noteNames[midi % 12] + octave;
quintet_composer_v42_1_RANGE_FIX.html:253:        function applyInversion(notes, inversion) {
quintet_composer_v42_1_RANGE_FIX.html:254:            const inverted = [...notes];
quintet_composer_v42_1_RANGE_FIX.html:257:                    const note = inverted.shift();
quintet_composer_v42_1_RANGE_FIX.html:258:                    inverted.push(note + 12);
quintet_composer_v42_1_RANGE_FIX.html:459:        let generatedNotes = {};
quintet_composer_v42_1_RANGE_FIX.html:464:        function buildChord(rootNote, chordType, inversion = 0) {
quintet_composer_v42_1_RANGE_FIX.html:465:            const chord = chordType.map(interval => rootNote + interval);
quintet_composer_v42_1_RANGE_FIX.html:503:                    notes: chord,
quintet_composer_v42_1_RANGE_FIX.html:549:            const scaleNotes = scales[scale] || scales['major'];
quintet_composer_v42_1_RANGE_FIX.html:553:                const measureNotes = [];
quintet_composer_v42_1_RANGE_FIX.html:556:                    // Quarter notes on chord tones
quintet_composer_v42_1_RANGE_FIX.html:558:                        const scaleIndex = Math.floor(Math.random() * 5); // First 5 notes of scale
quintet_composer_v42_1_RANGE_FIX.html:559:                        let pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_1_RANGE_FIX.html:565:                        measureNotes.push({ pitch, duration: 4, type: 'quarter' });
quintet_composer_v42_1_RANGE_FIX.html:574:                        const scaleIndex = Math.floor(Math.random() * scaleNotes.length);
quintet_composer_v42_1_RANGE_FIX.html:575:                        let pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_1_RANGE_FIX.html:581:                        measureNotes.push({ 
quintet_composer_v42_1_RANGE_FIX.html:591:                            const scaleIndex = Math.floor(Math.random() * scaleNotes.length);
quintet_composer_v42_1_RANGE_FIX.html:593:                            let pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_1_RANGE_FIX.html:596:                            if (pitch > violinRange.max - 12) pitch = root + scaleNotes[scaleIndex];
quintet_composer_v42_1_RANGE_FIX.html:599:                            measureNotes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:601:                            // Sixteenth note run
quintet_composer_v42_1_RANGE_FIX.html:603:                                const scaleIndex = (m * 4 + i * 2 + j) % scaleNotes.length;
quintet_composer_v42_1_RANGE_FIX.html:604:                                let pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_1_RANGE_FIX.html:610:                                measureNotes.push({ pitch, duration: 1, type: '16th' });
quintet_composer_v42_1_RANGE_FIX.html:616:                melody.push(measureNotes);
quintet_composer_v42_1_RANGE_FIX.html:635:            generatedNotes = {};
quintet_composer_v42_1_RANGE_FIX.html:639:                generatedNotes[instName] = [];
quintet_composer_v42_1_RANGE_FIX.html:645:                    generatedNotes[instName] = generateMelody(scale, keyData.root, measures, complexity);
quintet_composer_v42_1_RANGE_FIX.html:650:                        const measureNotes = generateHarmonyPart(inst, chord, selectedComposer.characteristics.rhythm);
quintet_composer_v42_1_RANGE_FIX.html:651:                        generatedNotes[instName].push(measureNotes);
quintet_composer_v42_1_RANGE_FIX.html:656:            return generatedNotes;
quintet_composer_v42_1_RANGE_FIX.html:660:            const notes = [];
quintet_composer_v42_1_RANGE_FIX.html:664:                notes.push({ pitch: chord[0] - 12, duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:665:                notes.push({ pitch: chord[0] - 17, duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:673:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:676:                    // Constant eighth notes
quintet_composer_v42_1_RANGE_FIX.html:679:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_1_RANGE_FIX.html:683:                    notes.push({ pitch: chord[0], duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:684:                    notes.push({ pitch: chord[1], duration: 8, type: 'half' });
quintet_composer_v42_1_RANGE_FIX.html:688:                notes.push({ pitch: chord[1], duration: 16, type: 'whole' });
quintet_composer_v42_1_RANGE_FIX.html:691:            // Ensure notes are in range
quintet_composer_v42_1_RANGE_FIX.html:692:            notes.forEach(note => {
quintet_composer_v42_1_RANGE_FIX.html:693:                while (note.pitch < instrument.range.min) note.pitch += 12;
quintet_composer_v42_1_RANGE_FIX.html:694:                while (note.pitch > instrument.range.max) note.pitch -= 12;
quintet_composer_v42_1_RANGE_FIX.html:697:            return notes;
quintet_composer_v42_1_RANGE_FIX.html:710:                const noteStr = chord.notes.map(midiToNoteName).join('-');
quintet_composer_v42_1_RANGE_FIX.html:711:                html += `(${noteStr}) `;
quintet_composer_v42_1_RANGE_FIX.html:785:                    // Add notes
quintet_composer_v42_1_RANGE_FIX.html:786:                    const measureNotes = generatedNotes[instName][m];
quintet_composer_v42_1_RANGE_FIX.html:787:                    measureNotes.forEach(note => {
quintet_composer_v42_1_RANGE_FIX.html:788:                        xml += '      <note>\n';
quintet_composer_v42_1_RANGE_FIX.html:789:                        const pitchInfo = midiToPitch(note.pitch);
quintet_composer_v42_1_RANGE_FIX.html:797:                        xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v42_1_RANGE_FIX.html:799:                        xml += `        <type>${note.type}</type>\n`;
quintet_composer_v42_1_RANGE_FIX.html:800:                        xml += '      </note>\n';
quintet_composer_v42_1_RANGE_FIX.html:856:                generatedNotes[instName].forEach(measure => {
quintet_composer_v42_1_RANGE_FIX.html:857:                    measure.forEach(note => {
quintet_composer_v42_1_RANGE_FIX.html:859:                        const duration = note.duration * (ppq / 4);
quintet_composer_v42_1_RANGE_FIX.html:862:                        track.push(...[0x90 + channel, note.pitch, velocity]);
quintet_composer_v42_1_RANGE_FIX.html:865:                        track.push(...[0x80 + channel, note.pitch, 0]);
quintet_composer_v42_1_RANGE_FIX.html:893:            const noteMap = [
quintet_composer_v42_1_RANGE_FIX.html:912:                step: noteMap[pitchClass].step,
quintet_composer_v42_1_RANGE_FIX.html:913:                alter: noteMap[pitchClass].alter,
quintet_composer_v42_TRIADGEN.html:227:        const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v42_TRIADGEN.html:229:        function midiToNoteName(midi) {
quintet_composer_v42_TRIADGEN.html:231:            return noteNames[midi % 12] + octave;
quintet_composer_v42_TRIADGEN.html:235:        function applyInversion(notes, inversion) {
quintet_composer_v42_TRIADGEN.html:236:            const inverted = [...notes];
quintet_composer_v42_TRIADGEN.html:239:                    const note = inverted.shift();
quintet_composer_v42_TRIADGEN.html:240:                    inverted.push(note + 12);
quintet_composer_v42_TRIADGEN.html:441:        let generatedNotes = {};
quintet_composer_v42_TRIADGEN.html:446:        function buildChord(rootNote, chordType, inversion = 0) {
quintet_composer_v42_TRIADGEN.html:447:            const chord = chordType.map(interval => rootNote + interval);
quintet_composer_v42_TRIADGEN.html:485:                    notes: chord,
quintet_composer_v42_TRIADGEN.html:531:            const scaleNotes = scales[scale] || scales['major'];
quintet_composer_v42_TRIADGEN.html:534:                const measureNotes = [];
quintet_composer_v42_TRIADGEN.html:537:                    // Quarter notes on chord tones
quintet_composer_v42_TRIADGEN.html:539:                        const scaleIndex = Math.floor(Math.random() * 5); // First 5 notes of scale
quintet_composer_v42_TRIADGEN.html:540:                        const pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_TRIADGEN.html:541:                        measureNotes.push({ pitch, duration: 4, type: 'quarter' });
quintet_composer_v42_TRIADGEN.html:550:                        const scaleIndex = Math.floor(Math.random() * scaleNotes.length);
quintet_composer_v42_TRIADGEN.html:551:                        const pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_TRIADGEN.html:552:                        measureNotes.push({ 
quintet_composer_v42_TRIADGEN.html:562:                            const scaleIndex = Math.floor(Math.random() * scaleNotes.length);
quintet_composer_v42_TRIADGEN.html:563:                            const pitch = root + scaleNotes[scaleIndex] + 
quintet_composer_v42_TRIADGEN.html:565:                            measureNotes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:567:                            // Sixteenth note run
quintet_composer_v42_TRIADGEN.html:569:                                const scaleIndex = (m * 4 + i * 2 + j) % scaleNotes.length;
quintet_composer_v42_TRIADGEN.html:570:                                const pitch = root + scaleNotes[scaleIndex] + 12;
quintet_composer_v42_TRIADGEN.html:571:                                measureNotes.push({ pitch, duration: 1, type: '16th' });
quintet_composer_v42_TRIADGEN.html:577:                melody.push(measureNotes);
quintet_composer_v42_TRIADGEN.html:596:            generatedNotes = {};
quintet_composer_v42_TRIADGEN.html:600:                generatedNotes[instName] = [];
quintet_composer_v42_TRIADGEN.html:606:                    generatedNotes[instName] = generateMelody(scale, keyData.root, measures, complexity);
quintet_composer_v42_TRIADGEN.html:611:                        const measureNotes = generateHarmonyPart(inst, chord, selectedComposer.characteristics.rhythm);
quintet_composer_v42_TRIADGEN.html:612:                        generatedNotes[instName].push(measureNotes);
quintet_composer_v42_TRIADGEN.html:617:            return generatedNotes;
quintet_composer_v42_TRIADGEN.html:621:            const notes = [];
quintet_composer_v42_TRIADGEN.html:625:                notes.push({ pitch: chord[0] - 12, duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:626:                notes.push({ pitch: chord[0] - 17, duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:634:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:637:                    // Constant eighth notes
quintet_composer_v42_TRIADGEN.html:640:                        notes.push({ pitch, duration: 2, type: 'eighth' });
quintet_composer_v42_TRIADGEN.html:644:                    notes.push({ pitch: chord[0], duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:645:                    notes.push({ pitch: chord[1], duration: 8, type: 'half' });
quintet_composer_v42_TRIADGEN.html:649:                notes.push({ pitch: chord[1], duration: 16, type: 'whole' });
quintet_composer_v42_TRIADGEN.html:652:            // Ensure notes are in range
quintet_composer_v42_TRIADGEN.html:653:            notes.forEach(note => {
quintet_composer_v42_TRIADGEN.html:654:                while (note.pitch < instrument.range.min) note.pitch += 12;
quintet_composer_v42_TRIADGEN.html:655:                while (note.pitch > instrument.range.max) note.pitch -= 12;
quintet_composer_v42_TRIADGEN.html:658:            return notes;
quintet_composer_v42_TRIADGEN.html:671:                const noteStr = chord.notes.map(midiToNoteName).join('-');
quintet_composer_v42_TRIADGEN.html:672:                html += `(${noteStr}) `;
quintet_composer_v42_TRIADGEN.html:746:                    // Add notes
quintet_composer_v42_TRIADGEN.html:747:                    const measureNotes = generatedNotes[instName][m];
quintet_composer_v42_TRIADGEN.html:748:                    measureNotes.forEach(note => {
quintet_composer_v42_TRIADGEN.html:749:                        xml += '      <note>\n';
quintet_composer_v42_TRIADGEN.html:750:                        const pitchInfo = midiToPitch(note.pitch);
quintet_composer_v42_TRIADGEN.html:758:                        xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v42_TRIADGEN.html:760:                        xml += `        <type>${note.type}</type>\n`;
quintet_composer_v42_TRIADGEN.html:761:                        xml += '      </note>\n';
quintet_composer_v42_TRIADGEN.html:817:                generatedNotes[instName].forEach(measure => {
quintet_composer_v42_TRIADGEN.html:818:                    measure.forEach(note => {
quintet_composer_v42_TRIADGEN.html:820:                        const duration = note.duration * (ppq / 4);
quintet_composer_v42_TRIADGEN.html:823:                        track.push(...[0x90 + channel, note.pitch, velocity]);
quintet_composer_v42_TRIADGEN.html:826:                        track.push(...[0x80 + channel, note.pitch, 0]);
quintet_composer_v42_TRIADGEN.html:854:            const noteMap = [
quintet_composer_v42_TRIADGEN.html:873:                step: noteMap[pitchClass].step,
quintet_composer_v42_TRIADGEN.html:874:                alter: noteMap[pitchClass].alter,
quintet_composer_v56_FINAL.html:202:            'C': { tonic: 'C', notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'], sharps: 0 },
quintet_composer_v56_FINAL.html:203:            'G': { tonic: 'G', notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'], sharps: 1 },
quintet_composer_v56_FINAL.html:204:            'D': { tonic: 'D', notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'], sharps: 2 },
quintet_composer_v56_FINAL.html:205:            'A': { tonic: 'A', notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'], sharps: 3 },
quintet_composer_v56_FINAL.html:206:            'F': { tonic: 'F', notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'], sharps: -1 },
quintet_composer_v56_FINAL.html:207:            'Bb': { tonic: 'Bb', notes: ['Bb', 'C', 'D', 'Eb', 'F', 'G', 'A'], sharps: -2 },
quintet_composer_v56_FINAL.html:208:            'Am': { tonic: 'A', notes: ['A', 'B', 'C', 'D', 'E', 'F', 'G'], sharps: 0, minor: true },
quintet_composer_v56_FINAL.html:209:            'Em': { tonic: 'E', notes: ['E', 'F#', 'G', 'A', 'B', 'C', 'D'], sharps: 1, minor: true },
quintet_composer_v56_FINAL.html:210:            'Dm': { tonic: 'D', notes: ['D', 'E', 'F', 'G', 'A', 'Bb', 'C'], sharps: -1, minor: true }
quintet_composer_v56_FINAL.html:222:        // Note to MIDI conversion
quintet_composer_v56_FINAL.html:223:        function noteToMidi(note, octave) {
quintet_composer_v56_FINAL.html:224:            const noteMap = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };
quintet_composer_v56_FINAL.html:225:            let midi = 12 + (octave * 12) + noteMap[note[0]];
quintet_composer_v56_FINAL.html:226:            if (note.includes('#')) midi++;
quintet_composer_v56_FINAL.html:227:            if (note.includes('b')) midi--;
quintet_composer_v56_FINAL.html:304:            const root = keyData.notes[degree - 1];
quintet_composer_v56_FINAL.html:305:            const third = keyData.notes[(degree - 1 + 2) % 7];
quintet_composer_v56_FINAL.html:306:            const fifth = keyData.notes[(degree - 1 + 4) % 7];
quintet_composer_v56_FINAL.html:307:            const seventh = keyData.notes[(degree - 1 + 6) % 7];
quintet_composer_v56_FINAL.html:314:                notes: [root, third, fifth],
quintet_composer_v56_FINAL.html:339:                        noteToMidi(chord.root, 2),
quintet_composer_v56_FINAL.html:340:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v56_FINAL.html:341:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v56_FINAL.html:342:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v56_FINAL.html:343:                        noteToMidi(chord.notes[2], 3),
quintet_composer_v56_FINAL.html:344:                        noteToMidi(chord.notes[0], 4)
quintet_composer_v56_FINAL.html:345:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v56_FINAL.html:349:                            notes: voicing,
quintet_composer_v56_FINAL.html:357:                    const bassNote = noteToMidi(chord.root, 2);
quintet_composer_v56_FINAL.html:359:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v56_FINAL.html:360:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v56_FINAL.html:361:                        noteToMidi(chord.notes[2], 3)
quintet_composer_v56_FINAL.html:362:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v56_FINAL.html:365:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet_composer_v56_FINAL.html:366:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet_composer_v56_FINAL.html:371:                        noteToMidi(chord.root, 2),
quintet_composer_v56_FINAL.html:372:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v56_FINAL.html:373:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v56_FINAL.html:374:                        noteToMidi(chord.notes[1], 3)
quintet_composer_v56_FINAL.html:375:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v56_FINAL.html:377:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet_composer_v56_FINAL.html:380:                    const arpNotes = [
quintet_composer_v56_FINAL.html:381:                        noteToMidi(chord.root, 2),
quintet_composer_v56_FINAL.html:382:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v56_FINAL.html:383:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v56_FINAL.html:384:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v56_FINAL.html:385:                        noteToMidi(chord.notes[2], 3),
quintet_composer_v56_FINAL.html:386:                        noteToMidi(chord.notes[0], 3)
quintet_composer_v56_FINAL.html:387:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v56_FINAL.html:391:                        const noteIdx = pattern[i] % arpNotes.length;
quintet_composer_v56_FINAL.html:393:                            notes: [arpNotes[noteIdx]],
quintet_composer_v56_FINAL.html:410:            let lastNote = 69;
quintet_composer_v56_FINAL.html:426:                            noteToMidi(chord.notes[0], 5),
quintet_composer_v56_FINAL.html:427:                            noteToMidi(chord.notes[1], 5),
quintet_composer_v56_FINAL.html:428:                            noteToMidi(chord.notes[2], 5),
quintet_composer_v56_FINAL.html:429:                            noteToMidi(chord.notes[0], 6)
quintet_composer_v56_FINAL.html:431:                        lastNote = chordMidis[Math.floor(Math.random() * chordMidis.length)];
quintet_composer_v56_FINAL.html:434:                        lastNote = lastNote + (direction * 2);
quintet_composer_v56_FINAL.html:437:                    lastNote = Math.max(RANGES.violin1.min, Math.min(RANGES.violin1.max, lastNote));
quintet_composer_v56_FINAL.html:440:                        notes: [lastNote],
quintet_composer_v56_FINAL.html:462:                const note = chord.notes[1];
quintet_composer_v56_FINAL.html:466:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 4, isChord: false });
quintet_composer_v56_FINAL.html:468:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:469:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:486:                const notes = [chord.notes[2], chord.notes[0]];
quintet_composer_v56_FINAL.html:488:                    [{ note: notes[0], duration: 2 }, { note: notes[1], duration: 2 }] :
quintet_composer_v56_FINAL.html:489:                    [{ note: notes[1], duration: 4 }];
quintet_composer_v56_FINAL.html:493:                        notes: [noteToMidi(p.note, 3)],
quintet_composer_v56_FINAL.html:517:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:518:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet_composer_v56_FINAL.html:520:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 4, isChord: false });
quintet_composer_v56_FINAL.html:565:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v56_FINAL.html:567:                                event.notes.forEach(note => {
quintet_composer_v56_FINAL.html:568:                                    playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume);
quintet_composer_v56_FINAL.html:571:                                event.notes.forEach(note => {
quintet_composer_v56_FINAL.html:572:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet_composer_v56_FINAL.html:594:        function playNote(midi, startTime, duration, instrument, volume) {
quintet_composer_v56_FINAL.html:706:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v56_FINAL.html:707:                            if (event.isChord && event.notes.length > 1) {
quintet_composer_v56_FINAL.html:708:                                event.notes.forEach((note, idx) => {
quintet_composer_v56_FINAL.html:709:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet_composer_v56_FINAL.html:710:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v56_FINAL.html:713:                                event.notes.forEach(note => {
quintet_composer_v56_FINAL.html:714:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet_composer_v56_FINAL.html:715:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet_composer_v56_FINAL.html:731:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v56_FINAL.html:732:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v56_FINAL.html:734:            const noteIndex = midi % 12;
quintet_composer_v56_FINAL.html:735:            const noteName = noteNames[noteIndex];
quintet_composer_v56_FINAL.html:737:            let xml = '      <note>\n';
quintet_composer_v56_FINAL.html:738:            if (isChordNote) {
quintet_composer_v56_FINAL.html:742:            xml += `          <step>${noteName.replace('#', '')}</step>\n`;
quintet_composer_v56_FINAL.html:743:            if (noteName.includes('#')) {
quintet_composer_v56_FINAL.html:750:            xml += '      </note>\n';
quintet_composer_v57_BULLETPROOF.html:192:            'C': { tonic: 'C', notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'], sharps: 0 },
quintet_composer_v57_BULLETPROOF.html:193:            'G': { tonic: 'G', notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'], sharps: 1 },
quintet_composer_v57_BULLETPROOF.html:194:            'D': { tonic: 'D', notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'], sharps: 2 },
quintet_composer_v57_BULLETPROOF.html:195:            'A': { tonic: 'A', notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'], sharps: 3 },
quintet_composer_v57_BULLETPROOF.html:196:            'F': { tonic: 'F', notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'], sharps: -1 }
quintet_composer_v57_BULLETPROOF.html:208:        // Note to MIDI conversion
quintet_composer_v57_BULLETPROOF.html:209:        function noteToMidi(note, octave) {
quintet_composer_v57_BULLETPROOF.html:211:                const noteMap = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };
quintet_composer_v57_BULLETPROOF.html:212:                let midi = 12 + (octave * 12) + noteMap[note[0]];
quintet_composer_v57_BULLETPROOF.html:213:                if (note.includes('#')) midi++;
quintet_composer_v57_BULLETPROOF.html:214:                if (note.includes('b')) midi--;
quintet_composer_v57_BULLETPROOF.html:217:                console.error('noteToMidi error:', e);
quintet_composer_v57_BULLETPROOF.html:299:            const root = keyData.notes[degree - 1];
quintet_composer_v57_BULLETPROOF.html:300:            const third = keyData.notes[(degree - 1 + 2) % 7];
quintet_composer_v57_BULLETPROOF.html:301:            const fifth = keyData.notes[(degree - 1 + 4) % 7];
quintet_composer_v57_BULLETPROOF.html:306:                notes: [root, third, fifth]
quintet_composer_v57_BULLETPROOF.html:320:                        noteToMidi(chord.root, 2),
quintet_composer_v57_BULLETPROOF.html:321:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v57_BULLETPROOF.html:322:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_BULLETPROOF.html:323:                        noteToMidi(chord.notes[1], 3)
quintet_composer_v57_BULLETPROOF.html:324:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_BULLETPROOF.html:328:                            notes: voicing,
quintet_composer_v57_BULLETPROOF.html:334:                    const bass = noteToMidi(chord.root, 2);
quintet_composer_v57_BULLETPROOF.html:336:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_BULLETPROOF.html:337:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v57_BULLETPROOF.html:338:                        noteToMidi(chord.notes[2], 3)
quintet_composer_v57_BULLETPROOF.html:339:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_BULLETPROOF.html:342:                        measure.push({ notes: [bass], duration: 0.5, isChord: false });
quintet_composer_v57_BULLETPROOF.html:343:                        measure.push({ notes: treble, duration: 0.5, isChord: true });
quintet_composer_v57_BULLETPROOF.html:348:                        noteToMidi(chord.root, 2),
quintet_composer_v57_BULLETPROOF.html:349:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v57_BULLETPROOF.html:350:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_BULLETPROOF.html:351:                        noteToMidi(chord.notes[1], 3)
quintet_composer_v57_BULLETPROOF.html:352:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_BULLETPROOF.html:356:                            notes: [arp[i % arp.length]],
quintet_composer_v57_BULLETPROOF.html:378:                const base = noteToMidi(chord.notes[0], 5);
quintet_composer_v57_BULLETPROOF.html:383:                        notes: [base, base + 4],
quintet_composer_v57_BULLETPROOF.html:388:                        notes: [base + 2],
quintet_composer_v57_BULLETPROOF.html:393:                    // Single notes
quintet_composer_v57_BULLETPROOF.html:394:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:395:                    measure.push({ notes: [base + 2], duration: 1, isChord: false });
quintet_composer_v57_BULLETPROOF.html:396:                    measure.push({ notes: [base - 1], duration: 1, isChord: false });
quintet_composer_v57_BULLETPROOF.html:413:                const base = noteToMidi(chord.notes[1], 4);
quintet_composer_v57_BULLETPROOF.html:418:                        notes: [base, base + 3],
quintet_composer_v57_BULLETPROOF.html:423:                    measure.push({ notes: [base], duration: 4, isChord: false });
quintet_composer_v57_BULLETPROOF.html:440:                const base = noteToMidi(chord.notes[2], 3);
quintet_composer_v57_BULLETPROOF.html:445:                        notes: [base, base + 5],
quintet_composer_v57_BULLETPROOF.html:449:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:451:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:452:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:469:                const root = noteToMidi(chord.root, 2);
quintet_composer_v57_BULLETPROOF.html:474:                        notes: [root, root + 12],
quintet_composer_v57_BULLETPROOF.html:479:                    measure.push({ notes: [root], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:480:                    measure.push({ notes: [root + 7], duration: 2, isChord: false });
quintet_composer_v57_BULLETPROOF.html:537:                            if (event.notes && event.notes.length > 0) {
quintet_composer_v57_BULLETPROOF.html:538:                                event.notes.forEach(note => {
quintet_composer_v57_BULLETPROOF.html:539:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet_composer_v57_BULLETPROOF.html:565:        function playNote(midi, startTime, duration, instrument) {
quintet_composer_v57_BULLETPROOF.html:604:                console.error('playNote error:', e);
quintet_composer_v57_BULLETPROOF.html:677:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v57_BULLETPROOF.html:678:                            event.notes.forEach((note, idx) => {
quintet_composer_v57_BULLETPROOF.html:679:                                const adjustedNote = (p === 0) ? note + 12 : note;
quintet_composer_v57_BULLETPROOF.html:680:                                xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v57_BULLETPROOF.html:695:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v57_BULLETPROOF.html:696:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v57_BULLETPROOF.html:698:            const noteIndex = midi % 12;
quintet_composer_v57_BULLETPROOF.html:699:            const noteName = noteNames[noteIndex];
quintet_composer_v57_BULLETPROOF.html:701:            let xml = '      <note>\n';
quintet_composer_v57_BULLETPROOF.html:702:            if (isChordNote) {
quintet_composer_v57_BULLETPROOF.html:706:            xml += '          <step>' + noteName.replace('#', '') + '</step>\n';
quintet_composer_v57_BULLETPROOF.html:707:            if (noteName.includes('#')) {
quintet_composer_v57_BULLETPROOF.html:714:            xml += '      </note>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:6:    <title>String Quintet Composer v57 - Multiple Stops Restored</title>
quintet_composer_v57_MULTIPLE_STOPS.html:147:        <div class="version">Multiple Stops Restored <span class="feature-badge">NEW</span></div>
quintet_composer_v57_MULTIPLE_STOPS.html:233:            'C': { tonic: 'C', notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'], sharps: 0 },
quintet_composer_v57_MULTIPLE_STOPS.html:234:            'G': { tonic: 'G', notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'], sharps: 1 },
quintet_composer_v57_MULTIPLE_STOPS.html:235:            'D': { tonic: 'D', notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'], sharps: 2 },
quintet_composer_v57_MULTIPLE_STOPS.html:236:            'A': { tonic: 'A', notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'], sharps: 3 },
quintet_composer_v57_MULTIPLE_STOPS.html:237:            'F': { tonic: 'F', notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'], sharps: -1 },
quintet_composer_v57_MULTIPLE_STOPS.html:238:            'Bb': { tonic: 'Bb', notes: ['Bb', 'C', 'D', 'Eb', 'F', 'G', 'A'], sharps: -2 },
quintet_composer_v57_MULTIPLE_STOPS.html:239:            'Am': { tonic: 'A', notes: ['A', 'B', 'C', 'D', 'E', 'F', 'G'], sharps: 0, minor: true },
quintet_composer_v57_MULTIPLE_STOPS.html:240:            'Em': { tonic: 'E', notes: ['E', 'F#', 'G', 'A', 'B', 'C', 'D'], sharps: 1, minor: true },
quintet_composer_v57_MULTIPLE_STOPS.html:241:            'Dm': { tonic: 'D', notes: ['D', 'E', 'F', 'G', 'A', 'Bb', 'C'], sharps: -1, minor: true }
quintet_composer_v57_MULTIPLE_STOPS.html:253:        // Note to MIDI conversion
quintet_composer_v57_MULTIPLE_STOPS.html:254:        function noteToMidi(note, octave) {
quintet_composer_v57_MULTIPLE_STOPS.html:255:            const noteMap = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };
quintet_composer_v57_MULTIPLE_STOPS.html:256:            let midi = 12 + (octave * 12) + noteMap[note[0]];
quintet_composer_v57_MULTIPLE_STOPS.html:257:            if (note.includes('#')) midi++;
quintet_composer_v57_MULTIPLE_STOPS.html:258:            if (note.includes('b')) midi--;
quintet_composer_v57_MULTIPLE_STOPS.html:268:        function isPlayableMultipleStop(notes, instrument) {
quintet_composer_v57_MULTIPLE_STOPS.html:272:            // Check if notes can be played on adjacent strings
quintet_composer_v57_MULTIPLE_STOPS.html:274:            for (let note of notes) {
quintet_composer_v57_MULTIPLE_STOPS.html:277:                    if (note >= strings[i] && note <= strings[i] + 7) { // Within reach on this string
quintet_composer_v57_MULTIPLE_STOPS.html:285:            // Check if we can assign each note to a different string
quintet_composer_v57_MULTIPLE_STOPS.html:286:            if (notes.length === 2) {
quintet_composer_v57_MULTIPLE_STOPS.html:298:        function generateMultipleStop(baseNote, chord, instrument) {
quintet_composer_v57_MULTIPLE_STOPS.html:313:            const secondNote = baseNote + interval;
quintet_composer_v57_MULTIPLE_STOPS.html:316:            if (secondNote > RANGES[instrument].max) return null;
quintet_composer_v57_MULTIPLE_STOPS.html:319:            let notes = [baseNote, secondNote];
quintet_composer_v57_MULTIPLE_STOPS.html:321:                const thirdNote = baseNote + 12; // Octave above
quintet_composer_v57_MULTIPLE_STOPS.html:322:                if (thirdNote <= RANGES[instrument].max) {
quintet_composer_v57_MULTIPLE_STOPS.html:323:                    notes.push(thirdNote);
quintet_composer_v57_MULTIPLE_STOPS.html:328:            if (isPlayableMultipleStop(notes, instrument)) {
quintet_composer_v57_MULTIPLE_STOPS.html:329:                return notes;
quintet_composer_v57_MULTIPLE_STOPS.html:412:            const root = keyData.notes[degree - 1];
quintet_composer_v57_MULTIPLE_STOPS.html:413:            const third = keyData.notes[(degree - 1 + 2) % 7];
quintet_composer_v57_MULTIPLE_STOPS.html:414:            const fifth = keyData.notes[(degree - 1 + 4) % 7];
quintet_composer_v57_MULTIPLE_STOPS.html:419:                notes: [root, third, fifth]
quintet_composer_v57_MULTIPLE_STOPS.html:433:                        noteToMidi(chord.root, 2),
quintet_composer_v57_MULTIPLE_STOPS.html:434:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v57_MULTIPLE_STOPS.html:435:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:436:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:437:                        noteToMidi(chord.notes[2], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:438:                        noteToMidi(chord.notes[0], 4)
quintet_composer_v57_MULTIPLE_STOPS.html:439:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_MULTIPLE_STOPS.html:443:                            notes: voicing,
quintet_composer_v57_MULTIPLE_STOPS.html:451:                    const bassNote = noteToMidi(chord.root, 2);
quintet_composer_v57_MULTIPLE_STOPS.html:453:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:454:                        noteToMidi(chord.notes[1], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:455:                        noteToMidi(chord.notes[2], 3)
quintet_composer_v57_MULTIPLE_STOPS.html:456:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_MULTIPLE_STOPS.html:459:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet_composer_v57_MULTIPLE_STOPS.html:460:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet_composer_v57_MULTIPLE_STOPS.html:464:                        noteToMidi(chord.root, 2),
quintet_composer_v57_MULTIPLE_STOPS.html:465:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v57_MULTIPLE_STOPS.html:466:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:467:                        noteToMidi(chord.notes[1], 3)
quintet_composer_v57_MULTIPLE_STOPS.html:468:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_MULTIPLE_STOPS.html:470:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet_composer_v57_MULTIPLE_STOPS.html:472:                    const arpNotes = [
quintet_composer_v57_MULTIPLE_STOPS.html:473:                        noteToMidi(chord.root, 2),
quintet_composer_v57_MULTIPLE_STOPS.html:474:                        noteToMidi(chord.notes[2], 2),
quintet_composer_v57_MULTIPLE_STOPS.html:475:                        noteToMidi(chord.notes[0], 3),
quintet_composer_v57_MULTIPLE_STOPS.html:476:                        noteToMidi(chord.notes[1], 3)
quintet_composer_v57_MULTIPLE_STOPS.html:477:                    ].filter(note => note >= 40 && note <= 67);
quintet_composer_v57_MULTIPLE_STOPS.html:482:                            notes: [arpNotes[pattern[i] % arpNotes.length]],
quintet_composer_v57_MULTIPLE_STOPS.html:498:            let lastNote = 69;
quintet_composer_v57_MULTIPLE_STOPS.html:508:                    // Generate base note
quintet_composer_v57_MULTIPLE_STOPS.html:510:                        noteToMidi(chord.notes[0], 5),
quintet_composer_v57_MULTIPLE_STOPS.html:511:                        noteToMidi(chord.notes[1], 5),
quintet_composer_v57_MULTIPLE_STOPS.html:512:                        noteToMidi(chord.notes[2], 5)
quintet_composer_v57_MULTIPLE_STOPS.html:514:                    const baseNote = chordMidis[Math.floor(Math.random() * chordMidis.length)];
quintet_composer_v57_MULTIPLE_STOPS.html:517:                    const multipleStop = generateMultipleStop(baseNote, chord, 'violin1');
quintet_composer_v57_MULTIPLE_STOPS.html:521:                            notes: multipleStop,
quintet_composer_v57_MULTIPLE_STOPS.html:529:                            notes: [baseNote],
quintet_composer_v57_MULTIPLE_STOPS.html:554:                const note = chord.notes[1];
quintet_composer_v57_MULTIPLE_STOPS.html:555:                const baseNote = noteToMidi(note, 4);
quintet_composer_v57_MULTIPLE_STOPS.html:558:                const multipleStop = generateMultipleStop(baseNote, chord, 'violin2');
quintet_composer_v57_MULTIPLE_STOPS.html:562:                        notes: multipleStop, 
quintet_composer_v57_MULTIPLE_STOPS.html:568:                    measure.push({ notes: [baseNote], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:571:                    const secondNote = noteToMidi(chord.notes[2], 4);
quintet_composer_v57_MULTIPLE_STOPS.html:572:                    const secondStop = generateMultipleStop(secondNote, chord, 'violin2');
quintet_composer_v57_MULTIPLE_STOPS.html:576:                            notes: secondStop, 
quintet_composer_v57_MULTIPLE_STOPS.html:582:                        measure.push({ notes: [secondNote], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:600:                const notes = [chord.notes[2], chord.notes[0]];
quintet_composer_v57_MULTIPLE_STOPS.html:603:                    const note1 = noteToMidi(notes[0], 3);
quintet_composer_v57_MULTIPLE_STOPS.html:604:                    const stop1 = generateMultipleStop(note1, chord, 'viola');
quintet_composer_v57_MULTIPLE_STOPS.html:607:                        measure.push({ notes: stop1, duration: 2, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:609:                        measure.push({ notes: [note1], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:612:                    measure.push({ notes: [noteToMidi(notes[1], 3)], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:614:                    const baseNote = noteToMidi(notes[1], 3);
quintet_composer_v57_MULTIPLE_STOPS.html:615:                    const stop = generateMultipleStop(baseNote, chord, 'viola');
quintet_composer_v57_MULTIPLE_STOPS.html:618:                        measure.push({ notes: stop, duration: 4, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:620:                        measure.push({ notes: [baseNote], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:638:                const root = noteToMidi(chord.root, 2);
quintet_composer_v57_MULTIPLE_STOPS.html:645:                        measure.push({ notes: stop, duration: 2, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:647:                        measure.push({ notes: [root], duration: 2, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:650:                    measure.push({ notes: [noteToMidi(chord.notes[2], 2)], duration: 2, beat: 3 });
quintet_composer_v57_MULTIPLE_STOPS.html:656:                            measure.push({ notes: tripleStop, duration: 4, isMultipleStop: true, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:658:                            measure.push({ notes: [root], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:661:                        measure.push({ notes: [root], duration: 4, beat: 1 });
quintet_composer_v57_MULTIPLE_STOPS.html:725:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v57_MULTIPLE_STOPS.html:726:                            event.notes.forEach(note => {
quintet_composer_v57_MULTIPLE_STOPS.html:729:                                playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume, detune);
quintet_composer_v57_MULTIPLE_STOPS.html:750:        function playNote(midi, startTime, duration, instrument, volume, detune = 0) {
quintet_composer_v57_MULTIPLE_STOPS.html:864:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v57_MULTIPLE_STOPS.html:866:                            if (event.isMultipleStop || event.notes.length > 1) {
quintet_composer_v57_MULTIPLE_STOPS.html:867:                                event.notes.forEach((note, idx) => {
quintet_composer_v57_MULTIPLE_STOPS.html:868:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet_composer_v57_MULTIPLE_STOPS.html:869:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet_composer_v57_MULTIPLE_STOPS.html:872:                                event.notes.forEach(note => {
quintet_composer_v57_MULTIPLE_STOPS.html:873:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet_composer_v57_MULTIPLE_STOPS.html:874:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet_composer_v57_MULTIPLE_STOPS.html:890:        function createNoteXML(midi, duration, isChordNote) {
quintet_composer_v57_MULTIPLE_STOPS.html:891:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v57_MULTIPLE_STOPS.html:893:            const noteIndex = midi % 12;
quintet_composer_v57_MULTIPLE_STOPS.html:894:            const noteName = noteNames[noteIndex];
quintet_composer_v57_MULTIPLE_STOPS.html:896:            let xml = '      <note>\n';
quintet_composer_v57_MULTIPLE_STOPS.html:897:            if (isChordNote) {
quintet_composer_v57_MULTIPLE_STOPS.html:901:            xml += `          <step>${noteName.replace('#', '')}</step>\n`;
quintet_composer_v57_MULTIPLE_STOPS.html:902:            if (noteName.includes('#')) {
quintet_composer_v57_MULTIPLE_STOPS.html:909:            xml += '      </note>\n';
quintet_composer_v57_SIBELIUS_FIX.html:197:        let currentNotes = [];
quintet_composer_v57_SIBELIUS_FIX.html:202:            'C': { notes: [60, 62, 64, 65, 67, 69, 71], tonic: 60 },
quintet_composer_v57_SIBELIUS_FIX.html:203:            'G': { notes: [55, 57, 59, 60, 62, 64, 66], tonic: 55 },
quintet_composer_v57_SIBELIUS_FIX.html:204:            'D': { notes: [50, 52, 54, 55, 57, 59, 61], tonic: 50 },
quintet_composer_v57_SIBELIUS_FIX.html:205:            'A': { notes: [57, 59, 61, 62, 64, 66, 68], tonic: 57 },
quintet_composer_v57_SIBELIUS_FIX.html:206:            'F': { notes: [53, 55, 57, 58, 60, 62, 64], tonic: 53 },
quintet_composer_v57_SIBELIUS_FIX.html:207:            'Bb': { notes: [58, 60, 62, 63, 65, 67, 69], tonic: 58 },
quintet_composer_v57_SIBELIUS_FIX.html:208:            'Am': { notes: [57, 59, 60, 62, 64, 65, 67], tonic: 57 },
quintet_composer_v57_SIBELIUS_FIX.html:209:            'Em': { notes: [52, 54, 55, 57, 59, 60, 62], tonic: 52 },
quintet_composer_v57_SIBELIUS_FIX.html:210:            'Dm': { notes: [50, 52, 53, 55, 57, 58, 60], tonic: 50 }
quintet_composer_v57_SIBELIUS_FIX.html:308:                        if (event.notes && event.notes.length > 1) {
quintet_composer_v57_SIBELIUS_FIX.html:327:            const root = keyData.notes[(degree - 1) % 7];
quintet_composer_v57_SIBELIUS_FIX.html:328:            const third = keyData.notes[(degree + 1) % 7];
quintet_composer_v57_SIBELIUS_FIX.html:329:            const fifth = keyData.notes[(degree + 3) % 7];
quintet_composer_v57_SIBELIUS_FIX.html:339:                    const notes = [];
quintet_composer_v57_SIBELIUS_FIX.html:340:                    // Build 6-note guitar chord
quintet_composer_v57_SIBELIUS_FIX.html:341:                    notes.push(chord[0] - 12); // Root an octave down
quintet_composer_v57_SIBELIUS_FIX.html:342:                    notes.push(chord[2] - 5);  // Fifth
quintet_composer_v57_SIBELIUS_FIX.html:343:                    notes.push(chord[0]);      // Root
quintet_composer_v57_SIBELIUS_FIX.html:344:                    notes.push(chord[1]);      // Third
quintet_composer_v57_SIBELIUS_FIX.html:345:                    notes.push(chord[2]);      // Fifth
quintet_composer_v57_SIBELIUS_FIX.html:346:                    notes.push(chord[0] + 12); // Root octave up
quintet_composer_v57_SIBELIUS_FIX.html:349:                    const filtered = notes.filter(n => n >= 40 && n <= 67);
quintet_composer_v57_SIBELIUS_FIX.html:352:                        notes: filtered,
quintet_composer_v57_SIBELIUS_FIX.html:359:                events.push({ notes: [chord[0] - 12].filter(n => n >= 40), duration: 0.5 });
quintet_composer_v57_SIBELIUS_FIX.html:360:                events.push({ notes: [chord[1], chord[2]].filter(n => n <= 67), duration: 0.5, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:361:                events.push({ notes: [chord[2] - 12].filter(n => n >= 40), duration: 0.5 });
quintet_composer_v57_SIBELIUS_FIX.html:362:                events.push({ notes: [chord[0], chord[1]].filter(n => n <= 67), duration: 0.5, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:367:                events.push({ notes: classicalChord, duration: 4, isChord: true });
quintet_composer_v57_SIBELIUS_FIX.html:372:                arp.forEach((note, i) => {
quintet_composer_v57_SIBELIUS_FIX.html:373:                    events.push({ notes: [note], duration: 0.666 });
quintet_composer_v57_SIBELIUS_FIX.html:386:                let note;
quintet_composer_v57_SIBELIUS_FIX.html:389:                    note = chord[Math.floor(Math.random() * chord.length)] + 24;
quintet_composer_v57_SIBELIUS_FIX.html:391:                    note = keyData.notes[Math.floor(Math.random() * keyData.notes.length)] + 24;
quintet_composer_v57_SIBELIUS_FIX.html:395:                while (note < 67) note += 12;
quintet_composer_v57_SIBELIUS_FIX.html:396:                while (note > 96) note -= 12;
quintet_composer_v57_SIBELIUS_FIX.html:398:                events.push({ notes: [note], duration: rhythms[i] });
quintet_composer_v57_SIBELIUS_FIX.html:408:            // Simple whole note for harmony parts
quintet_composer_v57_SIBELIUS_FIX.html:409:            let note = chord[Math.floor(Math.random() * chord.length)];
quintet_composer_v57_SIBELIUS_FIX.html:413:                note += 12;
quintet_composer_v57_SIBELIUS_FIX.html:414:                while (note < 67 || note > 84) {
quintet_composer_v57_SIBELIUS_FIX.html:415:                    if (note < 67) note += 12;
quintet_composer_v57_SIBELIUS_FIX.html:416:                    if (note > 84) note -= 12;
quintet_composer_v57_SIBELIUS_FIX.html:419:                while (note < 48 || note > 72) {
quintet_composer_v57_SIBELIUS_FIX.html:420:                    if (note < 48) note += 12;
quintet_composer_v57_SIBELIUS_FIX.html:421:                    if (note > 72) note -= 12;
quintet_composer_v57_SIBELIUS_FIX.html:424:                note -= 12;
quintet_composer_v57_SIBELIUS_FIX.html:425:                while (note < 36 || note > 60) {
quintet_composer_v57_SIBELIUS_FIX.html:426:                    if (note < 36) note += 12;
quintet_composer_v57_SIBELIUS_FIX.html:427:                    if (note > 60) note -= 12;
quintet_composer_v57_SIBELIUS_FIX.html:431:            events.push({ notes: [note], duration: 4 });
quintet_composer_v57_SIBELIUS_FIX.html:439:                if (Math.random() < density && event.notes && event.notes.length === 1) {
quintet_composer_v57_SIBELIUS_FIX.html:440:                    const baseNote = event.notes[0];
quintet_composer_v57_SIBELIUS_FIX.html:441:                    const newNotes = [baseNote];
quintet_composer_v57_SIBELIUS_FIX.html:443:                    // Add additional notes based on instrument
quintet_composer_v57_SIBELIUS_FIX.html:448:                        const secondNote = baseNote + interval;
quintet_composer_v57_SIBELIUS_FIX.html:450:                        if (secondNote <= instrumentRanges[instrument].max) {
quintet_composer_v57_SIBELIUS_FIX.html:451:                            newNotes.push(secondNote);
quintet_composer_v57_SIBELIUS_FIX.html:456:                            const thirdNote = baseNote - 5;
quintet_composer_v57_SIBELIUS_FIX.html:457:                            if (thirdNote >= instrumentRanges[instrument].min) {
quintet_composer_v57_SIBELIUS_FIX.html:458:                                newNotes.push(thirdNote);
quintet_composer_v57_SIBELIUS_FIX.html:465:                        const secondNote = baseNote + interval;
quintet_composer_v57_SIBELIUS_FIX.html:467:                        if (secondNote <= instrumentRanges[instrument].max) {
quintet_composer_v57_SIBELIUS_FIX.html:468:                            newNotes.push(secondNote);
quintet_composer_v57_SIBELIUS_FIX.html:473:                            const thirdNote = baseNote - 7;
quintet_composer_v57_SIBELIUS_FIX.html:474:                            if (thirdNote >= instrumentRanges[instrument].min) {
quintet_composer_v57_SIBELIUS_FIX.html:475:                                newNotes.push(thirdNote);
quintet_composer_v57_SIBELIUS_FIX.html:482:                        const secondNote = baseNote + interval;
quintet_composer_v57_SIBELIUS_FIX.html:484:                        if (secondNote <= instrumentRanges[instrument].max) {
quintet_composer_v57_SIBELIUS_FIX.html:485:                            newNotes.push(secondNote);
quintet_composer_v57_SIBELIUS_FIX.html:490:                            const thirdNote = baseNote + 19; // Octave + fifth
quintet_composer_v57_SIBELIUS_FIX.html:491:                            if (thirdNote <= instrumentRanges[instrument].max) {
quintet_composer_v57_SIBELIUS_FIX.html:492:                                newNotes.push(thirdNote);
quintet_composer_v57_SIBELIUS_FIX.html:498:                            const fourthNote = baseNote + 24; // Two octaves
quintet_composer_v57_SIBELIUS_FIX.html:499:                            if (fourthNote <= instrumentRanges[instrument].max) {
quintet_composer_v57_SIBELIUS_FIX.html:500:                                newNotes.push(fourthNote);
quintet_composer_v57_SIBELIUS_FIX.html:506:                        notes: newNotes,
quintet_composer_v57_SIBELIUS_FIX.html:508:                        isMultipleStop: newNotes.length > 1
quintet_composer_v57_SIBELIUS_FIX.html:526:                let noteCount = 0;
quintet_composer_v57_SIBELIUS_FIX.html:531:                        if (event.notes) {
quintet_composer_v57_SIBELIUS_FIX.html:532:                            if (event.notes.length === 1) {
quintet_composer_v57_SIBELIUS_FIX.html:533:                                noteCount++;
quintet_composer_v57_SIBELIUS_FIX.html:534:                            } else if (event.notes.length === 2) {
quintet_composer_v57_SIBELIUS_FIX.html:537:                            } else if (event.notes.length === 3) {
quintet_composer_v57_SIBELIUS_FIX.html:540:                            } else if (event.notes.length >= 4) {
quintet_composer_v57_SIBELIUS_FIX.html:550:                output += `${noteCount} notes`;
quintet_composer_v57_SIBELIUS_FIX.html:594:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v57_SIBELIUS_FIX.html:597:                            event.notes.forEach((note, index) => {
quintet_composer_v57_SIBELIUS_FIX.html:598:                                playNote(note, startTime, event.duration * beatDuration, instrument, index > 0);
quintet_composer_v57_SIBELIUS_FIX.html:616:        function playNote(midiNote, startTime, duration, instrument, isMultipleStop = false) {
quintet_composer_v57_SIBELIUS_FIX.html:617:            const freq = 440 * Math.pow(2, (midiNote - 69) / 12);
quintet_composer_v57_SIBELIUS_FIX.html:751:                if (event.notes && event.notes.length > 0) {
quintet_composer_v57_SIBELIUS_FIX.html:752:                    event.notes.forEach((note, noteIndex) => {
quintet_composer_v57_SIBELIUS_FIX.html:753:                        xml += '      <note>\n';
quintet_composer_v57_SIBELIUS_FIX.html:755:                        // Mark additional notes in chord
quintet_composer_v57_SIBELIUS_FIX.html:756:                        if (noteIndex > 0) {
quintet_composer_v57_SIBELIUS_FIX.html:761:                        let displayNote = note;
quintet_composer_v57_SIBELIUS_FIX.html:763:                            displayNote = note + 12; // Write guitar an octave higher
quintet_composer_v57_SIBELIUS_FIX.html:766:                        const pitchInfo = midiToPitch(displayNote);
quintet_composer_v57_SIBELIUS_FIX.html:778:                        // Note type
quintet_composer_v57_SIBELIUS_FIX.html:779:                        const noteType = getNoteType(event.duration);
quintet_composer_v57_SIBELIUS_FIX.html:780:                        xml += `        <type>${noteType}</type>\n`;
quintet_composer_v57_SIBELIUS_FIX.html:782:                        xml += '      </note>\n';
quintet_composer_v57_SIBELIUS_FIX.html:790:        function midiToPitch(midiNote) {
quintet_composer_v57_SIBELIUS_FIX.html:791:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v57_SIBELIUS_FIX.html:792:            const octave = Math.floor(midiNote / 12) - 1;
quintet_composer_v57_SIBELIUS_FIX.html:793:            const noteIndex = midiNote % 12;
quintet_composer_v57_SIBELIUS_FIX.html:794:            const noteName = noteNames[noteIndex];
quintet_composer_v57_SIBELIUS_FIX.html:796:            let step = noteName[0];
quintet_composer_v57_SIBELIUS_FIX.html:798:            if (noteName.includes('#')) {
quintet_composer_v57_SIBELIUS_FIX.html:800:                step = noteName[0];
quintet_composer_v57_SIBELIUS_FIX.html:806:        function getNoteType(duration) {
quintet_composer_v58_FAILSAFE.html:215:                notes: [60, 62, 64, 65, 67, 69, 71], 
quintet_composer_v58_FAILSAFE.html:228:                notes: [55, 57, 59, 60, 62, 64, 66], 
quintet_composer_v58_FAILSAFE.html:241:                notes: [50, 52, 54, 55, 57, 59, 61], 
quintet_composer_v58_FAILSAFE.html:254:                notes: [57, 59, 61, 62, 64, 66, 68], 
quintet_composer_v58_FAILSAFE.html:267:                notes: [53, 55, 57, 58, 60, 62, 64], 
quintet_composer_v58_FAILSAFE.html:280:                notes: [57, 59, 60, 62, 64, 65, 67], 
quintet_composer_v58_FAILSAFE.html:293:                notes: [52, 54, 55, 57, 59, 60, 62], 
quintet_composer_v58_FAILSAFE.html:369:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:370:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:371:                events.push({ notes: [chordTones[2]], duration: 2 });
quintet_composer_v58_FAILSAFE.html:373:                events.push({ notes: [chordTones[2]], duration: 2 });
quintet_composer_v58_FAILSAFE.html:374:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:375:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:377:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:378:                events.push({ notes: [chordTones[2]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:379:                events.push({ notes: [chordTones[1]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:380:                events.push({ notes: [chordTones[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:400:                // Pattern: bass - chord - chord - rest
quintet_composer_v58_FAILSAFE.html:401:                events.push({ notes: [guitarChord[0]], duration: 1 });
quintet_composer_v58_FAILSAFE.html:402:                events.push({ notes: guitarChord.slice(1, 4), duration: 1, isChord: true });
quintet_composer_v58_FAILSAFE.html:403:                events.push({ notes: guitarChord.slice(1, 4), duration: 1, isChord: true });
quintet_composer_v58_FAILSAFE.html:404:                events.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v58_FAILSAFE.html:407:                guitarChord.forEach((note, i) => {
quintet_composer_v58_FAILSAFE.html:408:                    events.push({ notes: [note], duration: 0.5 });
quintet_composer_v58_FAILSAFE.html:411:                // Whole note chord
quintet_composer_v58_FAILSAFE.html:412:                events.push({ notes: guitarChord, duration: 4, isChord: true });
quintet_composer_v58_FAILSAFE.html:424:            let note = chord[0]; // Start with root
quintet_composer_v58_FAILSAFE.html:428:                note += 12; // One octave up
quintet_composer_v58_FAILSAFE.html:429:                while (note < 67 || note > 84) {
quintet_composer_v58_FAILSAFE.html:430:                    if (note < 67) note += 12;
quintet_composer_v58_FAILSAFE.html:431:                    if (note > 84) note -= 12;
quintet_composer_v58_FAILSAFE.html:434:                while (note < 48 || note > 67) {
quintet_composer_v58_FAILSAFE.html:435:                    if (note < 48) note += 12;
quintet_composer_v58_FAILSAFE.html:436:                    if (note > 67) note -= 12;
quintet_composer_v58_FAILSAFE.html:439:                note -= 12; // One octave down
quintet_composer_v58_FAILSAFE.html:440:                while (note < 36 || note > 60) {
quintet_composer_v58_FAILSAFE.html:441:                    if (note < 36) note += 12;
quintet_composer_v58_FAILSAFE.html:442:                    if (note > 60) note -= 12;
quintet_composer_v58_FAILSAFE.html:446:            // Simple whole note
quintet_composer_v58_FAILSAFE.html:447:            events.push({ notes: [note], duration: 4 });
quintet_composer_v58_FAILSAFE.html:462:                // Add a double stop to the last note
quintet_composer_v58_FAILSAFE.html:464:                if (lastEvent && lastEvent.notes && lastEvent.notes.length === 1) {
quintet_composer_v58_FAILSAFE.html:465:                    const baseNote = lastEvent.notes[0];
quintet_composer_v58_FAILSAFE.html:474:                    const secondNote = baseNote + interval;
quintet_composer_v58_FAILSAFE.html:477:                    if (secondNote <= range.max) {
quintet_composer_v58_FAILSAFE.html:478:                        lastEvent.notes.push(secondNote);
quintet_composer_v58_FAILSAFE.html:635:                        if (!event.isRest && event.notes && event.notes.length > 0) {
quintet_composer_v58_FAILSAFE.html:636:                            event.notes.forEach((note, index) => {
quintet_composer_v58_FAILSAFE.html:637:                                playNote(
quintet_composer_v58_FAILSAFE.html:638:                                    note, 
quintet_composer_v58_FAILSAFE.html:640:                                    event.duration * beatDuration * 0.9, // Slight gap between notes
quintet_composer_v58_FAILSAFE.html:663:        function playNote(midiNote, startTime, duration, instrument) {
quintet_composer_v58_FAILSAFE.html:664:            const freq = 440 * Math.pow(2, (midiNote - 69) / 12);
quintet_composer_v58_FAILSAFE.html:766:                    // Add notes
quintet_composer_v58_FAILSAFE.html:769:                        if (!event.isRest && event.notes && event.notes.length > 0) {
quintet_composer_v58_FAILSAFE.html:770:                            event.notes.forEach((note, noteIndex) => {
quintet_composer_v58_FAILSAFE.html:771:                                xml += '      <note>\n';
quintet_composer_v58_FAILSAFE.html:773:                                if (noteIndex > 0) {
quintet_composer_v58_FAILSAFE.html:778:                                let displayNote = note;
quintet_composer_v58_FAILSAFE.html:780:                                    displayNote = note + 12;
quintet_composer_v58_FAILSAFE.html:783:                                const pitchInfo = midiToPitch(displayNote);
quintet_composer_v58_FAILSAFE.html:792:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v58_FAILSAFE.html:793:                                xml += '      </note>\n';
quintet_composer_v58_FAILSAFE.html:795:                        } else if (event.isRest) {
quintet_composer_v58_FAILSAFE.html:796:                            xml += '      <note>\n';
quintet_composer_v58_FAILSAFE.html:797:                            xml += '        <rest/>\n';
quintet_composer_v58_FAILSAFE.html:799:                            xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v58_FAILSAFE.html:800:                            xml += '      </note>\n';
quintet_composer_v58_FAILSAFE.html:824:        function midiToPitch(midiNote) {
quintet_composer_v58_FAILSAFE.html:825:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v58_FAILSAFE.html:826:            const octave = Math.floor(midiNote / 12) - 1;
quintet_composer_v58_FAILSAFE.html:827:            const noteIndex = midiNote % 12;
quintet_composer_v58_FAILSAFE.html:828:            const noteName = noteNames[noteIndex];
quintet_composer_v58_FAILSAFE.html:830:            let step = noteName[0];
quintet_composer_v58_FAILSAFE.html:832:            if (noteName.includes('#')) {
quintet_composer_v58_FAILSAFE.html:834:                step = noteName[0];
quintet_composer_v58_FAILSAFE.html:840:        function getNoteType(duration) {
quintet_composer_v59_BULLETPROOF.html:207:                notes: [60, 62, 64, 65, 67, 69, 71],
quintet_composer_v59_BULLETPROOF.html:218:                notes: [55, 57, 59, 60, 62, 64, 66],
quintet_composer_v59_BULLETPROOF.html:229:                notes: [50, 52, 54, 55, 57, 59, 61],
quintet_composer_v59_BULLETPROOF.html:240:                notes: [53, 55, 57, 58, 60, 62, 64],
quintet_composer_v59_BULLETPROOF.html:286:                    [4]                  // whole note (occasionally)
quintet_composer_v59_BULLETPROOF.html:292:                    // Phrase ending - longer note
quintet_composer_v59_BULLETPROOF.html:305:                    let note;
quintet_composer_v59_BULLETPROOF.html:308:                        note = chord[Math.floor(Math.random() * chord.length)] + 24;
quintet_composer_v59_BULLETPROOF.html:311:                        note = keyData.notes[Math.floor(Math.random() * keyData.notes.length)] + 24;
quintet_composer_v59_BULLETPROOF.html:315:                    while (note < 67) note += 12;
quintet_composer_v59_BULLETPROOF.html:316:                    while (note > 88) note -= 12;
quintet_composer_v59_BULLETPROOF.html:320:                        const lastNote = measureEvents[measureEvents.length - 1].notes[0];
quintet_composer_v59_BULLETPROOF.html:321:                        if (Math.abs(note - lastNote) > 7) {
quintet_composer_v59_BULLETPROOF.html:323:                            note = lastNote + (Math.random() < 0.5 ? 2 : -2);
quintet_composer_v59_BULLETPROOF.html:328:                        notes: [note],
quintet_composer_v59_BULLETPROOF.html:351:                // Select appropriate note from chord
quintet_composer_v59_BULLETPROOF.html:352:                let noteIndex = 0;
quintet_composer_v59_BULLETPROOF.html:353:                if (instrument === 'violin2') noteIndex = 1;  // Third
quintet_composer_v59_BULLETPROOF.html:354:                if (instrument === 'viola') noteIndex = 2;     // Fifth
quintet_composer_v59_BULLETPROOF.html:355:                if (instrument === 'cello') noteIndex = 0;     // Root
quintet_composer_v59_BULLETPROOF.html:357:                let note = chord[noteIndex % chord.length];
quintet_composer_v59_BULLETPROOF.html:361:                    note += 12;
quintet_composer_v59_BULLETPROOF.html:362:                    while (note < 60 || note > 84) {
quintet_composer_v59_BULLETPROOF.html:363:                        if (note < 60) note += 12;
quintet_composer_v59_BULLETPROOF.html:364:                        if (note > 84) note -= 12;
quintet_composer_v59_BULLETPROOF.html:367:                    while (note < 48 || note > 67) {
quintet_composer_v59_BULLETPROOF.html:368:                        if (note < 48) note += 12;
quintet_composer_v59_BULLETPROOF.html:369:                        if (note > 67) note -= 12;
quintet_composer_v59_BULLETPROOF.html:372:                    note -= 12;
quintet_composer_v59_BULLETPROOF.html:373:                    while (note < 36 || note > 60) {
quintet_composer_v59_BULLETPROOF.html:374:                        if (note < 36) note += 12;
quintet_composer_v59_BULLETPROOF.html:375:                        if (note > 60) note -= 12;
quintet_composer_v59_BULLETPROOF.html:381:                    // Cadence point - two half notes
quintet_composer_v59_BULLETPROOF.html:382:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:383:                    measureEvents.push({ notes: [note - 2], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:385:                    // Whole note
quintet_composer_v59_BULLETPROOF.html:386:                    measureEvents.push({ notes: [note], duration: 4 });
quintet_composer_v59_BULLETPROOF.html:388:                    // Half notes
quintet_composer_v59_BULLETPROOF.html:389:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:390:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet_composer_v59_BULLETPROOF.html:418:                    pattern.forEach(note => {
quintet_composer_v59_BULLETPROOF.html:419:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v59_BULLETPROOF.html:423:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet_composer_v59_BULLETPROOF.html:424:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet_composer_v59_BULLETPROOF.html:427:                    voicing.forEach(note => {
quintet_composer_v59_BULLETPROOF.html:428:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v59_BULLETPROOF.html:496:                            if (lastEvent && lastEvent.notes.length === 1) {
quintet_composer_v59_BULLETPROOF.html:497:                                const baseNote = lastEvent.notes[0];
quintet_composer_v59_BULLETPROOF.html:504:                                const secondNote = baseNote + interval;
quintet_composer_v59_BULLETPROOF.html:506:                                if (secondNote <= range.max) {
quintet_composer_v59_BULLETPROOF.html:507:                                    lastEvent.notes.push(secondNote);
quintet_composer_v59_BULLETPROOF.html:539:            // Count actual notes
quintet_composer_v59_BULLETPROOF.html:540:            let noteCount = 0;
quintet_composer_v59_BULLETPROOF.html:546:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v59_BULLETPROOF.html:547:                            noteCount++;
quintet_composer_v59_BULLETPROOF.html:548:                            if (event.notes.length > 1) stopCount++;
quintet_composer_v59_BULLETPROOF.html:554:            output += `<p><strong>Musical Content:</strong> ${noteCount} events generated</p>`;
quintet_composer_v59_BULLETPROOF.html:556:            output += '<p><strong>✓</strong> Varied rhythms (not just whole notes)</p>';
quintet_composer_v59_BULLETPROOF.html:590:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v59_BULLETPROOF.html:591:                            event.notes.forEach(note => {
quintet_composer_v59_BULLETPROOF.html:592:                                playNote(
quintet_composer_v59_BULLETPROOF.html:593:                                    note,
quintet_composer_v59_BULLETPROOF.html:617:        function playNote(midiNote, startTime, duration, instrument) {
quintet_composer_v59_BULLETPROOF.html:618:            const freq = 440 * Math.pow(2, (midiNote - 69) / 12);
quintet_composer_v59_BULLETPROOF.html:716:                        if (event.notes && event.notes.length > 0) {
quintet_composer_v59_BULLETPROOF.html:717:                            event.notes.forEach((note, noteIndex) => {
quintet_composer_v59_BULLETPROOF.html:718:                                xml += '      <note>\n';
quintet_composer_v59_BULLETPROOF.html:720:                                if (noteIndex > 0) {
quintet_composer_v59_BULLETPROOF.html:724:                                let displayNote = note;
quintet_composer_v59_BULLETPROOF.html:726:                                    displayNote = note + 12;
quintet_composer_v59_BULLETPROOF.html:729:                                const pitchInfo = midiToPitch(displayNote);
quintet_composer_v59_BULLETPROOF.html:738:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet_composer_v59_BULLETPROOF.html:739:                                xml += '      </note>\n';
quintet_composer_v59_BULLETPROOF.html:763:        function midiToPitch(midiNote) {
quintet_composer_v59_BULLETPROOF.html:764:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v59_BULLETPROOF.html:765:            const octave = Math.floor(midiNote / 12) - 1;
quintet_composer_v59_BULLETPROOF.html:766:            const noteIndex = midiNote % 12;
quintet_composer_v59_BULLETPROOF.html:767:            const noteName = noteNames[noteIndex];
quintet_composer_v59_BULLETPROOF.html:769:            let step = noteName[0];
quintet_composer_v59_BULLETPROOF.html:771:            if (noteName.includes('#')) {
quintet_composer_v59_BULLETPROOF.html:778:        function getNoteType(duration) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:6:    <title>String Quintet Composer v59 - BULLETPROOF RESTORED</title>
quintet_composer_v59_BULLETPROOF_RESTORED.html:122:        <div class="version">Version 59 - BULLETPROOF RESTORED (Last Known Good)</div>
quintet_composer_v59_BULLETPROOF_RESTORED.html:210:            'C': { notes: [60, 62, 64, 65, 67, 69, 71], chords: [[60,64,67], [62,65,69], [64,67,71], [65,69,72], [67,71,74], [69,72,76], [71,74,77]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:211:            'G': { notes: [55, 57, 59, 60, 62, 64, 66], chords: [[55,59,62], [57,60,64], [59,62,66], [60,64,67], [62,66,69], [64,67,71], [66,69,73]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:212:            'D': { notes: [50, 52, 54, 55, 57, 59, 61], chords: [[50,54,57], [52,55,59], [54,57,61], [55,59,62], [57,61,64], [59,62,66], [61,64,68]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:213:            'A': { notes: [57, 59, 61, 62, 64, 66, 68], chords: [[57,61,64], [59,62,66], [61,64,68], [62,66,69], [64,68,71], [66,69,73], [68,71,75]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:214:            'F': { notes: [53, 55, 57, 58, 60, 62, 64], chords: [[53,57,60], [55,58,62], [57,60,64], [58,62,65], [60,64,67], [62,65,69], [64,67,71]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:215:            'Bb': { notes: [58, 60, 62, 63, 65, 67, 69], chords: [[58,62,65], [60,63,67], [62,65,69], [63,67,70], [65,69,72], [67,70,74], [69,72,76]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:216:            'Am': { notes: [57, 59, 60, 62, 64, 65, 67], chords: [[57,60,64], [59,62,65], [60,64,67], [62,65,69], [64,67,71], [65,69,72], [67,71,74]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:217:            'Em': { notes: [52, 54, 55, 57, 59, 60, 62], chords: [[52,55,59], [54,57,60], [55,59,62], [57,60,64], [59,62,66], [60,64,67], [62,66,69]] },
quintet_composer_v59_BULLETPROOF_RESTORED.html:218:            'Dm': { notes: [50, 52, 53, 55, 57, 58, 60], chords: [[50,53,57], [52,55,58], [53,57,60], [55,58,62], [57,60,64], [58,62,65], [60,64,67]] }
quintet_composer_v59_BULLETPROOF_RESTORED.html:313:                    const notes = [chord[0] - 12, chord[2] - 12, chord[1] - 12, chord[2] - 12];
quintet_composer_v59_BULLETPROOF_RESTORED.html:316:                            notes: [notes[i]],
quintet_composer_v59_BULLETPROOF_RESTORED.html:324:                        notes: chord.map(n => n - 12),
quintet_composer_v59_BULLETPROOF_RESTORED.html:329:                        notes: chord.map(n => n - 12),
quintet_composer_v59_BULLETPROOF_RESTORED.html:335:                    chord.forEach(note => {
quintet_composer_v59_BULLETPROOF_RESTORED.html:337:                            notes: [note - 12],
quintet_composer_v59_BULLETPROOF_RESTORED.html:362:                let prevNote = chord[0] + 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:369:                    let note;
quintet_composer_v59_BULLETPROOF_RESTORED.html:371:                        note = chord[Math.floor(Math.random() * chord.length)] + 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:373:                        const scaleNote = keyData.notes[Math.floor(Math.random() * keyData.notes.length)];
quintet_composer_v59_BULLETPROOF_RESTORED.html:374:                        note = scaleNote + 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:378:                    while (note < range[0]) note += 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:379:                    while (note > range[1]) note -= 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:382:                        notes: [note],
quintet_composer_v59_BULLETPROOF_RESTORED.html:390:                        event.notes.push(note + interval);
quintet_composer_v59_BULLETPROOF_RESTORED.html:396:                    prevNote = note;
quintet_composer_v59_BULLETPROOF_RESTORED.html:414:                // Simpler harmony - mostly whole and half notes
quintet_composer_v59_BULLETPROOF_RESTORED.html:415:                const chordNote = chord[1]; // Take the third
quintet_composer_v59_BULLETPROOF_RESTORED.html:416:                let note = chordNote;
quintet_composer_v59_BULLETPROOF_RESTORED.html:420:                    note = chordNote - 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:423:                while (note < range[0]) note += 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:424:                while (note > range[1]) note -= 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:427:                    notes: [note],
quintet_composer_v59_BULLETPROOF_RESTORED.html:435:                    event.notes.push(note + interval);
quintet_composer_v59_BULLETPROOF_RESTORED.html:460:                    notes: [root],
quintet_composer_v59_BULLETPROOF_RESTORED.html:465:                const secondNote = {
quintet_composer_v59_BULLETPROOF_RESTORED.html:466:                    notes: [fifth],
quintet_composer_v59_BULLETPROOF_RESTORED.html:473:                    secondNote.notes.push(root + 12);
quintet_composer_v59_BULLETPROOF_RESTORED.html:474:                    secondNote.isMultipleStop = true;
quintet_composer_v59_BULLETPROOF_RESTORED.html:477:                measure.push(secondNote);
quintet_composer_v59_BULLETPROOF_RESTORED.html:491:                const noteCount = part.reduce((sum, measure) => 
quintet_composer_v59_BULLETPROOF_RESTORED.html:492:                    sum + measure.reduce((mSum, event) => mSum + event.notes.length, 0), 0);
quintet_composer_v59_BULLETPROOF_RESTORED.html:493:                output += `<li><strong>${INSTRUMENTS[instrument].name}:</strong> ${noteCount} notes</li>`;
quintet_composer_v59_BULLETPROOF_RESTORED.html:519:                        event.notes.forEach((note, idx) => {
quintet_composer_v59_BULLETPROOF_RESTORED.html:520:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v59_BULLETPROOF_RESTORED.html:533:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:613:                // Notes for first measure
quintet_composer_v59_BULLETPROOF_RESTORED.html:615:                    event.notes.forEach((note, noteIdx) => {
quintet_composer_v59_BULLETPROOF_RESTORED.html:616:                        const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet_composer_v59_BULLETPROOF_RESTORED.html:617:                        const { step, alter, octave } = midiToNote(adjustedNote);
quintet_composer_v59_BULLETPROOF_RESTORED.html:619:                        xml += '      <note>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:620:                        if (noteIdx > 0) xml += '        <chord/>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:624:                        xml += '      </note>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:635:                        event.notes.forEach((note, noteIdx) => {
quintet_composer_v59_BULLETPROOF_RESTORED.html:636:                            const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet_composer_v59_BULLETPROOF_RESTORED.html:637:                            const { step, alter, octave } = midiToNote(adjustedNote);
quintet_composer_v59_BULLETPROOF_RESTORED.html:639:                            xml += '      <note>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:640:                            if (noteIdx > 0) xml += '        <chord/>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:644:                            xml += '      </note>\n';
quintet_composer_v59_BULLETPROOF_RESTORED.html:666:        function midiToNote(midi) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:667:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v59_BULLETPROOF_RESTORED.html:669:            const noteIndex = midi % 12;
quintet_composer_v59_BULLETPROOF_RESTORED.html:670:            const noteName = noteNames[noteIndex];
quintet_composer_v59_BULLETPROOF_RESTORED.html:673:                step: noteName.replace('#', ''),
quintet_composer_v59_BULLETPROOF_RESTORED.html:674:                alter: noteName.includes('#') ? 1 : 0,
quintet_composer_v60_ACTUALLY_WORKING.html:389:                const chordNotes = keyData.chords[actualSymbol] || keyData.chords[chordSymbol] || keyData.chords['I'];
quintet_composer_v60_ACTUALLY_WORKING.html:393:                    notes: chordNotes
quintet_composer_v60_ACTUALLY_WORKING.html:405:                const chordNotes = progression[m].notes;
quintet_composer_v60_ACTUALLY_WORKING.html:409:                chordNotes.forEach(note => {
quintet_composer_v60_ACTUALLY_WORKING.html:410:                    let guitarNote = note;
quintet_composer_v60_ACTUALLY_WORKING.html:412:                    while (guitarNote > 76) guitarNote -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:413:                    while (guitarNote < 40) guitarNote += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:414:                    guitarChord.push(guitarNote);
quintet_composer_v60_ACTUALLY_WORKING.html:417:                // Add additional notes for fuller voicing
quintet_composer_v60_ACTUALLY_WORKING.html:425:                        notes: guitarChord,
quintet_composer_v60_ACTUALLY_WORKING.html:430:                        notes: guitarChord,
quintet_composer_v60_ACTUALLY_WORKING.html:438:                            notes: [guitarChord[i % guitarChord.length]],
quintet_composer_v60_ACTUALLY_WORKING.html:444:                    // Fingerstyle - bass note then chord
quintet_composer_v60_ACTUALLY_WORKING.html:446:                        notes: [guitarChord[0]],
quintet_composer_v60_ACTUALLY_WORKING.html:451:                        notes: guitarChord.slice(1),
quintet_composer_v60_ACTUALLY_WORKING.html:456:                        notes: [guitarChord[0] + 7],
quintet_composer_v60_ACTUALLY_WORKING.html:461:                        notes: guitarChord.slice(1),
quintet_composer_v60_ACTUALLY_WORKING.html:480:                const chordNotes = progression[m].notes;
quintet_composer_v60_ACTUALLY_WORKING.html:491:                    // Use chord tones and passing notes
quintet_composer_v60_ACTUALLY_WORKING.html:492:                    let note;
quintet_composer_v60_ACTUALLY_WORKING.html:495:                        note = chordNotes[Math.floor(Math.random() * chordNotes.length)];
quintet_composer_v60_ACTUALLY_WORKING.html:498:                        note = keyData.scale[Math.floor(Math.random() * keyData.scale.length)];
quintet_composer_v60_ACTUALLY_WORKING.html:502:                    while (note < range[0]) note += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:503:                    while (note > range[1]) note -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:506:                        notes: [note],
quintet_composer_v60_ACTUALLY_WORKING.html:526:                const chordNotes = progression[m].notes;
quintet_composer_v60_ACTUALLY_WORKING.html:529:                const third = chordNotes[1]; // Get the third of the chord
quintet_composer_v60_ACTUALLY_WORKING.html:530:                let note = third;
quintet_composer_v60_ACTUALLY_WORKING.html:533:                while (note < range[0]) note += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:534:                while (note > range[1]) note -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:536:                // Mix of half notes and quarter notes
quintet_composer_v60_ACTUALLY_WORKING.html:539:                        notes: [note],
quintet_composer_v60_ACTUALLY_WORKING.html:544:                        notes: [note + 2],
quintet_composer_v60_ACTUALLY_WORKING.html:550:                        notes: [note],
quintet_composer_v60_ACTUALLY_WORKING.html:568:                const chordNotes = progression[m].notes;
quintet_composer_v60_ACTUALLY_WORKING.html:571:                const fifth = chordNotes[2];
quintet_composer_v60_ACTUALLY_WORKING.html:572:                let note = fifth - 12; // Viola typically an octave lower
quintet_composer_v60_ACTUALLY_WORKING.html:575:                while (note < range[0]) note += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:576:                while (note > range[1]) note -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:579:                    notes: [note],
quintet_composer_v60_ACTUALLY_WORKING.html:596:                const chordNotes = progression[m].notes;
quintet_composer_v60_ACTUALLY_WORKING.html:599:                const root = chordNotes[0] - 12; // Cello plays bass
quintet_composer_v60_ACTUALLY_WORKING.html:600:                const fifth = chordNotes[2] - 12;
quintet_composer_v60_ACTUALLY_WORKING.html:603:                let bassNote = root;
quintet_composer_v60_ACTUALLY_WORKING.html:604:                while (bassNote < 36) bassNote += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:605:                while (bassNote > 76) bassNote -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:607:                let fifthNote = fifth;
quintet_composer_v60_ACTUALLY_WORKING.html:608:                while (fifthNote < 36) fifthNote += 12;
quintet_composer_v60_ACTUALLY_WORKING.html:609:                while (fifthNote > 76) fifthNote -= 12;
quintet_composer_v60_ACTUALLY_WORKING.html:613:                    notes: [bassNote],
quintet_composer_v60_ACTUALLY_WORKING.html:618:                    notes: [fifthNote],
quintet_composer_v60_ACTUALLY_WORKING.html:636:                let noteCount = 0;
quintet_composer_v60_ACTUALLY_WORKING.html:642:                            noteCount += event.notes.length;
quintet_composer_v60_ACTUALLY_WORKING.html:644:                            noteCount += event.notes.length;
quintet_composer_v60_ACTUALLY_WORKING.html:650:                output += `<li><strong>${INSTRUMENTS[instrument].name}:</strong> ${noteCount} notes${chordInfo}</li>`;
quintet_composer_v60_ACTUALLY_WORKING.html:676:                        event.notes.forEach((note, idx) => {
quintet_composer_v60_ACTUALLY_WORKING.html:677:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v60_ACTUALLY_WORKING.html:690:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v60_ACTUALLY_WORKING.html:770:                // Notes for all measures
quintet_composer_v60_ACTUALLY_WORKING.html:777:                        event.notes.forEach((note, noteIdx) => {
quintet_composer_v60_ACTUALLY_WORKING.html:779:                            const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet_composer_v60_ACTUALLY_WORKING.html:780:                            const { step, alter, octave } = midiToNote(adjustedNote);
quintet_composer_v60_ACTUALLY_WORKING.html:782:                            xml += '      <note>\n';
quintet_composer_v60_ACTUALLY_WORKING.html:783:                            if (noteIdx > 0) xml += '        <chord/>\n';
quintet_composer_v60_ACTUALLY_WORKING.html:787:                            xml += '      </note>\n';
quintet_composer_v60_ACTUALLY_WORKING.html:809:        function midiToNote(midi) {
quintet_composer_v60_ACTUALLY_WORKING.html:810:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v60_ACTUALLY_WORKING.html:812:            const noteIndex = midi % 12;
quintet_composer_v60_ACTUALLY_WORKING.html:813:            const noteName = noteNames[noteIndex];
quintet_composer_v60_ACTUALLY_WORKING.html:816:                step: noteName.replace('#', ''),
quintet_composer_v60_ACTUALLY_WORKING.html:817:                alter: noteName.includes('#') ? 1 : 0,
quintet_composer_v60_COMPOSER_PROFILES.html:377:                description: 'Playful, percussive, wrong-note humor'
quintet_composer_v60_COMPOSER_PROFILES.html:450:                notes: [60, 62, 64, 65, 67, 69, 71],
quintet_composer_v60_COMPOSER_PROFILES.html:463:                notes: [55, 57, 59, 60, 62, 64, 66],
quintet_composer_v60_COMPOSER_PROFILES.html:476:                notes: [50, 52, 54, 55, 57, 59, 61],
quintet_composer_v60_COMPOSER_PROFILES.html:489:                notes: [57, 59, 61, 62, 64, 66, 68],
quintet_composer_v60_COMPOSER_PROFILES.html:502:                notes: [57, 59, 60, 62, 64, 65, 67],
quintet_composer_v60_COMPOSER_PROFILES.html:515:                notes: [52, 54, 55, 57, 59, 60, 62],
quintet_composer_v60_COMPOSER_PROFILES.html:559:                    rhythmPattern = [4]; // Whole note
quintet_composer_v60_COMPOSER_PROFILES.html:572:                        rhythmPattern = [4]; // Long note with fermata
quintet_composer_v60_COMPOSER_PROFILES.html:578:                    // Note selection based on composer
quintet_composer_v60_COMPOSER_PROFILES.html:579:                    let note;
quintet_composer_v60_COMPOSER_PROFILES.html:584:                            note = chord[0] + Math.floor(Math.random() * 12) + 24;
quintet_composer_v60_COMPOSER_PROFILES.html:586:                            note = chord[Math.floor(Math.random() * chord.length)] + 24;
quintet_composer_v60_COMPOSER_PROFILES.html:590:                        note = chord[Math.floor(Math.random() * chord.length)] + 24;
quintet_composer_v60_COMPOSER_PROFILES.html:595:                        const lastNote = measureEvents[measureEvents.length - 1].notes[0];
quintet_composer_v60_COMPOSER_PROFILES.html:596:                        const interval = Math.abs(note - lastNote);
quintet_composer_v60_COMPOSER_PROFILES.html:600:                            note = lastNote + (Math.random() < 0.5 ? 2 : -2);
quintet_composer_v60_COMPOSER_PROFILES.html:603:                            note = lastNote + (Math.random() < 0.5 ? 5 : -5);
quintet_composer_v60_COMPOSER_PROFILES.html:608:                    while (note < 67) note += 12;
quintet_composer_v60_COMPOSER_PROFILES.html:609:                    while (note > 88) note -= 12;
quintet_composer_v60_COMPOSER_PROFILES.html:612:                        notes: [note],
quintet_composer_v60_COMPOSER_PROFILES.html:644:                            notes: [voicing[i % voicing.length]], 
quintet_composer_v60_COMPOSER_PROFILES.html:651:                        notes: voicing, 
quintet_composer_v60_COMPOSER_PROFILES.html:658:                    measureEvents.push({ notes: voicing, duration: 1, isChord: true, accent: true });
quintet_composer_v60_COMPOSER_PROFILES.html:659:                    measureEvents.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v60_COMPOSER_PROFILES.html:660:                    measureEvents.push({ notes: voicing, duration: 1, isChord: true, accent: true });
quintet_composer_v60_COMPOSER_PROFILES.html:661:                    measureEvents.push({ notes: [], duration: 1, isRest: true });
quintet_composer_v60_COMPOSER_PROFILES.html:664:                    measureEvents.push({ notes: [voicing[0]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:665:                    measureEvents.push({ notes: [voicing[2]], duration: 0.5 }); // Index
quintet_composer_v60_COMPOSER_PROFILES.html:666:                    measureEvents.push({ notes: [voicing[1]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:667:                    measureEvents.push({ notes: [voicing[3]], duration: 0.5 }); // Middle
quintet_composer_v60_COMPOSER_PROFILES.html:668:                    measureEvents.push({ notes: [voicing[0]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:669:                    measureEvents.push({ notes: [voicing[2]], duration: 0.5 }); // Index
quintet_composer_v60_COMPOSER_PROFILES.html:670:                    measureEvents.push({ notes: [voicing[1]], duration: 0.5 }); // Thumb
quintet_composer_v60_COMPOSER_PROFILES.html:671:                    measureEvents.push({ notes: [voicing[3]], duration: 0.5 }); // Ring
quintet_composer_v60_COMPOSER_PROFILES.html:674:                    voicing.forEach((note, i) => {
quintet_composer_v60_COMPOSER_PROFILES.html:675:                        measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:800:                let noteIndex = instrument === 'violin2' ? 1 : 
quintet_composer_v60_COMPOSER_PROFILES.html:803:                let note = chord[noteIndex % chord.length];
quintet_composer_v60_COMPOSER_PROFILES.html:807:                    note += 12;
quintet_composer_v60_COMPOSER_PROFILES.html:808:                    while (note < 60 || note > 84) {
quintet_composer_v60_COMPOSER_PROFILES.html:809:                        if (note < 60) note += 12;
quintet_composer_v60_COMPOSER_PROFILES.html:810:                        if (note > 84) note -= 12;
quintet_composer_v60_COMPOSER_PROFILES.html:813:                    while (note < 48 || note > 67) {
quintet_composer_v60_COMPOSER_PROFILES.html:814:                        if (note < 48) note += 12;
quintet_composer_v60_COMPOSER_PROFILES.html:815:                        if (note > 67) note -= 12;
quintet_composer_v60_COMPOSER_PROFILES.html:818:                    note -= 12;
quintet_composer_v60_COMPOSER_PROFILES.html:819:                    while (note < 36 || note > 60) {
quintet_composer_v60_COMPOSER_PROFILES.html:820:                        if (note < 36) note += 12;
quintet_composer_v60_COMPOSER_PROFILES.html:821:                        if (note > 60) note -= 12;
quintet_composer_v60_COMPOSER_PROFILES.html:827:                    // Dense texture - more notes
quintet_composer_v60_COMPOSER_PROFILES.html:828:                    measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:829:                    measureEvents.push({ notes: [note + 2], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:830:                    measureEvents.push({ notes: [note - 1], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:831:                    measureEvents.push({ notes: [note], duration: 1 });
quintet_composer_v60_COMPOSER_PROFILES.html:834:                    measureEvents.push({ notes: [note], duration: 4 });
quintet_composer_v60_COMPOSER_PROFILES.html:837:                    measureEvents.push({ notes: [note], duration: 2 });
quintet_composer_v60_COMPOSER_PROFILES.html:838:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet_composer_v60_COMPOSER_PROFILES.html:871:                        if (lastEvent && lastEvent.notes.length === 1) {
quintet_composer_v60_COMPOSER_PROFILES.html:872:                            const baseNote = lastEvent.notes[0];
quintet_composer_v60_COMPOSER_PROFILES.html:875:                            const secondNote = baseNote + interval;
quintet_composer_v60_COMPOSER_PROFILES.html:877:                            if (secondNote <= range.max) {
quintet_composer_v60_COMPOSER_PROFILES.html:878:                                lastEvent.notes.push(secondNote);
quintet_composer_v60_COMPOSER_PROFILES.html:879:                                // Add third note for extra richness
quintet_composer_v60_COMPOSER_PROFILES.html:880:                                const thirdNote = baseNote + interval + 3;
quintet_composer_v60_COMPOSER_PROFILES.html:881:                                if (thirdNote <= range.max) {
quintet_composer_v60_COMPOSER_PROFILES.html:882:                                    lastEvent.notes.push(thirdNote);
quintet_composer_v60_COMPOSER_PROFILES.html:932:                        if (!event.isRest && event.notes && event.notes.length > 0) {
quintet_composer_v60_COMPOSER_PROFILES.html:933:                            event.notes.forEach(note => {
quintet_composer_v60_COMPOSER_PROFILES.html:934:                                playNote(note, startTime + (beatPosition * beatDuration), 
quintet_composer_v60_COMPOSER_PROFILES.html:956:        function playNote(midiNote, startTime, duration, instrument, dynamics, articulation) {
quintet_composer_v60_COMPOSER_PROFILES.html:957:            const freq = 440 * Math.pow(2, (midiNote - 69) / 12);
quintet_composer_v60_COMPOSER_PROFILES.html:1033:            // (Rest of export code similar to v59 but with dynamics and articulations added)
quintet_composer_v60_COMPOSER_PROFILES.html:1047:        function midiToPitch(midiNote) {
quintet_composer_v60_COMPOSER_PROFILES.html:1048:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v60_COMPOSER_PROFILES.html:1049:            const octave = Math.floor(midiNote / 12) - 1;
quintet_composer_v60_COMPOSER_PROFILES.html:1050:            const noteIndex = midiNote % 12;
quintet_composer_v60_COMPOSER_PROFILES.html:1051:            const noteName = noteNames[noteIndex];
quintet_composer_v60_COMPOSER_PROFILES.html:1053:            let step = noteName[0];
quintet_composer_v60_COMPOSER_PROFILES.html:1055:            if (noteName.includes('#')) {
quintet_composer_v60_COMPOSER_PROFILES.html:1062:        function getNoteType(duration) {
quintet_composer_v61_OCTAVE_FIX.html:389:                const chordNotes = keyData.chords[actualSymbol] || keyData.chords[chordSymbol] || keyData.chords['I'];
quintet_composer_v61_OCTAVE_FIX.html:393:                    notes: chordNotes
quintet_composer_v61_OCTAVE_FIX.html:405:                const chordNotes = progression[m].notes;
quintet_composer_v61_OCTAVE_FIX.html:411:                chordNotes.forEach(note => {
quintet_composer_v61_OCTAVE_FIX.html:412:                    let guitarNote = note;
quintet_composer_v61_OCTAVE_FIX.html:415:                    while (guitarNote > 52) guitarNote -= 12;  // Max E3
quintet_composer_v61_OCTAVE_FIX.html:416:                    while (guitarNote < 40) guitarNote += 12;  // Min E2
quintet_composer_v61_OCTAVE_FIX.html:418:                    guitarChord.push(guitarNote);
quintet_composer_v61_OCTAVE_FIX.html:435:                        notes: guitarChord,
quintet_composer_v61_OCTAVE_FIX.html:440:                        notes: guitarChord,
quintet_composer_v61_OCTAVE_FIX.html:448:                            notes: [guitarChord[i % guitarChord.length]],
quintet_composer_v61_OCTAVE_FIX.html:454:                    // Fingerstyle - bass note then chord
quintet_composer_v61_OCTAVE_FIX.html:456:                        notes: [guitarChord[0]],
quintet_composer_v61_OCTAVE_FIX.html:461:                        notes: guitarChord.slice(1),
quintet_composer_v61_OCTAVE_FIX.html:466:                        notes: [guitarChord[0] + 7],
quintet_composer_v61_OCTAVE_FIX.html:471:                        notes: guitarChord.slice(1),
quintet_composer_v61_OCTAVE_FIX.html:490:                const chordNotes = progression[m].notes;
quintet_composer_v61_OCTAVE_FIX.html:501:                    // Use chord tones and passing notes
quintet_composer_v61_OCTAVE_FIX.html:502:                    let note;
quintet_composer_v61_OCTAVE_FIX.html:505:                        note = chordNotes[Math.floor(Math.random() * chordNotes.length)];
quintet_composer_v61_OCTAVE_FIX.html:508:                        note = keyData.scale[Math.floor(Math.random() * keyData.scale.length)];
quintet_composer_v61_OCTAVE_FIX.html:512:                    while (note < range[0]) note += 12;
quintet_composer_v61_OCTAVE_FIX.html:513:                    while (note > range[1]) note -= 12;
quintet_composer_v61_OCTAVE_FIX.html:516:                        notes: [note],
quintet_composer_v61_OCTAVE_FIX.html:536:                const chordNotes = progression[m].notes;
quintet_composer_v61_OCTAVE_FIX.html:539:                const third = chordNotes[1]; // Get the third of the chord
quintet_composer_v61_OCTAVE_FIX.html:540:                let note = third;
quintet_composer_v61_OCTAVE_FIX.html:543:                while (note < range[0]) note += 12;
quintet_composer_v61_OCTAVE_FIX.html:544:                while (note > range[1]) note -= 12;
quintet_composer_v61_OCTAVE_FIX.html:546:                // Mix of half notes and quarter notes
quintet_composer_v61_OCTAVE_FIX.html:549:                        notes: [note],
quintet_composer_v61_OCTAVE_FIX.html:554:                        notes: [note + 2],
quintet_composer_v61_OCTAVE_FIX.html:560:                        notes: [note],
quintet_composer_v61_OCTAVE_FIX.html:578:                const chordNotes = progression[m].notes;
quintet_composer_v61_OCTAVE_FIX.html:581:                const fifth = chordNotes[2];
quintet_composer_v61_OCTAVE_FIX.html:582:                let note = fifth - 12; // Viola typically an octave lower
quintet_composer_v61_OCTAVE_FIX.html:585:                while (note < range[0]) note += 12;
quintet_composer_v61_OCTAVE_FIX.html:586:                while (note > range[1]) note -= 12;
quintet_composer_v61_OCTAVE_FIX.html:589:                    notes: [note],
quintet_composer_v61_OCTAVE_FIX.html:606:                const chordNotes = progression[m].notes;
quintet_composer_v61_OCTAVE_FIX.html:609:                const root = chordNotes[0] - 12; // Cello plays bass
quintet_composer_v61_OCTAVE_FIX.html:610:                const fifth = chordNotes[2] - 12;
quintet_composer_v61_OCTAVE_FIX.html:613:                let bassNote = root;
quintet_composer_v61_OCTAVE_FIX.html:614:                while (bassNote < 36) bassNote += 12;
quintet_composer_v61_OCTAVE_FIX.html:615:                while (bassNote > 76) bassNote -= 12;
quintet_composer_v61_OCTAVE_FIX.html:617:                let fifthNote = fifth;
quintet_composer_v61_OCTAVE_FIX.html:618:                while (fifthNote < 36) fifthNote += 12;
quintet_composer_v61_OCTAVE_FIX.html:619:                while (fifthNote > 76) fifthNote -= 12;
quintet_composer_v61_OCTAVE_FIX.html:623:                    notes: [bassNote],
quintet_composer_v61_OCTAVE_FIX.html:628:                    notes: [fifthNote],
quintet_composer_v61_OCTAVE_FIX.html:646:                let noteCount = 0;
quintet_composer_v61_OCTAVE_FIX.html:652:                            noteCount += event.notes.length;
quintet_composer_v61_OCTAVE_FIX.html:654:                            noteCount += event.notes.length;
quintet_composer_v61_OCTAVE_FIX.html:660:                output += `<li><strong>${INSTRUMENTS[instrument].name}:</strong> ${noteCount} notes${chordInfo}</li>`;
quintet_composer_v61_OCTAVE_FIX.html:686:                        event.notes.forEach((note, idx) => {
quintet_composer_v61_OCTAVE_FIX.html:687:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet_composer_v61_OCTAVE_FIX.html:700:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet_composer_v61_OCTAVE_FIX.html:780:                // Notes for all measures
quintet_composer_v61_OCTAVE_FIX.html:787:                        event.notes.forEach((note, noteIdx) => {
quintet_composer_v61_OCTAVE_FIX.html:789:                            const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet_composer_v61_OCTAVE_FIX.html:790:                            const { step, alter, octave } = midiToNote(adjustedNote);
quintet_composer_v61_OCTAVE_FIX.html:792:                            xml += '      <note>\n';
quintet_composer_v61_OCTAVE_FIX.html:793:                            if (noteIdx > 0) xml += '        <chord/>\n';
quintet_composer_v61_OCTAVE_FIX.html:797:                            xml += '      </note>\n';
quintet_composer_v61_OCTAVE_FIX.html:819:        function midiToNote(midi) {
quintet_composer_v61_OCTAVE_FIX.html:820:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v61_OCTAVE_FIX.html:822:            const noteIndex = midi % 12;
quintet_composer_v61_OCTAVE_FIX.html:823:            const noteName = noteNames[noteIndex];
quintet_composer_v61_OCTAVE_FIX.html:826:                step: noteName.replace('#', ''),
quintet_composer_v61_OCTAVE_FIX.html:827:                alter: noteName.includes('#') ? 1 : 0,
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:206:                <div class="stat-value" id="statNotes">0</div>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:207:                <div class="stat-label">Total Notes</div>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:546:                const keyNotes = this.getKeyNotes(key);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:552:                    const chord = this.getChordNotes(key, chordSymbol);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:555:                    this.composition.parts.violin1.push(this.generateMelody(chord, keyNotes, profile));
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:563:            getKeyNotes(key) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:564:                // BULLETPROOF: Return scale notes for the key
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:580:            getChordNotes(key, chordSymbol) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:581:                // BULLETPROOF: Get chord notes safely
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:582:                const keyNotes = this.getKeyNotes(key);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:584:                const root = keyNotes[rootIndex];
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:587:                const third = keyNotes[(rootIndex + 2) % 7];
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:588:                const fifth = keyNotes[(rootIndex + 4) % 7];
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:613:                const notes = [];
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:617:                    const noteIndex = Math.floor(Math.random() * scale.length);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:619:                    notes.push({
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:620:                        pitch: scale[noteIndex],
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:626:                return notes;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:650:                return chord.map(note => ({
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:651:                    pitch: note,
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:736:                        // Add notes for first measure
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:738:                            this.composition.parts[partName][0].forEach(note => {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:739:                                xml += this.noteToMusicXML(note, divisions);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:749:                                this.composition.parts[partName][m].forEach(note => {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:750:                                    xml += this.noteToMusicXML(note, divisions);
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:777:            noteToMusicXML(note, divisions) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:778:                // BULLETPROOF: Convert note to MusicXML safely
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:779:                let xml = '      <note>\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:781:                if (note.rest) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:782:                    xml += '        <rest/>\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:785:                    xml += `          <step>${this.escapeXML(note.pitch.charAt(0))}</step>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:787:                    if (note.pitch.includes('#')) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:789:                    } else if (note.pitch.includes('b')) {
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:793:                    xml += `          <octave>${note.octave}</octave>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:797:                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:798:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:799:                xml += '      </note>\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:805:                // BULLETPROOF: Map duration to note type
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:817:                let totalNotes = 0;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:825:                            totalNotes += measure.length;
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:830:                document.getElementById('statNotes').textContent = totalNotes;
quintet_composer_v63_REAL_FIXES.html:137:            'C': { tonic: 0, notes: [0, 2, 4, 5, 7, 9, 11], sharps: 0 },
quintet_composer_v63_REAL_FIXES.html:138:            'G': { tonic: 7, notes: [7, 9, 11, 0, 2, 4, 6], sharps: 1 },
quintet_composer_v63_REAL_FIXES.html:139:            'D': { tonic: 2, notes: [2, 4, 6, 7, 9, 11, 1], sharps: 2 },
quintet_composer_v63_REAL_FIXES.html:140:            'A': { tonic: 9, notes: [9, 11, 1, 2, 4, 6, 8], sharps: 3 },
quintet_composer_v63_REAL_FIXES.html:141:            'F': { tonic: 5, notes: [5, 7, 9, 10, 0, 2, 4], sharps: -1 }
quintet_composer_v63_REAL_FIXES.html:144:        // Note names for display
quintet_composer_v63_REAL_FIXES.html:145:        const NOTE_NAMES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v63_REAL_FIXES.html:191:                const scale = this.keyData.notes;
quintet_composer_v63_REAL_FIXES.html:198:                let chordNotes = [root, third, fifth, seventh].map(note => {
quintet_composer_v63_REAL_FIXES.html:199:                    let midiNote = note + 48; // Start in octave 4
quintet_composer_v63_REAL_FIXES.html:200:                    if (note < root) midiNote += 12;
quintet_composer_v63_REAL_FIXES.html:201:                    return midiNote;
quintet_composer_v63_REAL_FIXES.html:204:                return chordNotes;
quintet_composer_v63_REAL_FIXES.html:207:            generateGuitarBar(chordNotes, barNumber) {
quintet_composer_v63_REAL_FIXES.html:208:                const notes = [];
quintet_composer_v63_REAL_FIXES.html:211:                const guitarChord = chordNotes.map((note, idx) => {
quintet_composer_v63_REAL_FIXES.html:212:                    let guitarNote = note - 24; // Move down 2 octaves to get into guitar range
quintet_composer_v63_REAL_FIXES.html:214:                    while (guitarNote > 52) guitarNote -= 12; // Max E3 for chords
quintet_composer_v63_REAL_FIXES.html:215:                    while (guitarNote < 40) guitarNote += 12; // Min E2
quintet_composer_v63_REAL_FIXES.html:216:                    return guitarNote;
quintet_composer_v63_REAL_FIXES.html:222:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:228:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:238:                        guitarChord.forEach(note => {
quintet_composer_v63_REAL_FIXES.html:239:                            notes.push({
quintet_composer_v63_REAL_FIXES.html:240:                                pitch: note,
quintet_composer_v63_REAL_FIXES.html:248:                        // Bass note + chord pattern
quintet_composer_v63_REAL_FIXES.html:249:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:254:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:260:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:265:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:274:                return notes;
quintet_composer_v63_REAL_FIXES.html:277:            generateViolinIMelody(chordNotes, barNumber) {
quintet_composer_v63_REAL_FIXES.html:278:                const notes = [];
quintet_composer_v63_REAL_FIXES.html:279:                const scale = this.keyData.notes.map(n => n + 60); // Octave 5
quintet_composer_v63_REAL_FIXES.html:292:                        const noteIndex = this.rng.nextInt(0, scale.length - 1);
quintet_composer_v63_REAL_FIXES.html:293:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:294:                            pitch: scale[noteIndex],
quintet_composer_v63_REAL_FIXES.html:302:                return notes;
quintet_composer_v63_REAL_FIXES.html:305:            generateViolinIIHarmony(chordNotes, barNumber, violin1Notes) {
quintet_composer_v63_REAL_FIXES.html:306:                const notes = [];
quintet_composer_v63_REAL_FIXES.html:309:                const violinIINotes = chordNotes.map(n => {
quintet_composer_v63_REAL_FIXES.html:310:                    let note = n; // Already in octave 4
quintet_composer_v63_REAL_FIXES.html:311:                    if (barNumber % 3 === 0) note += 12; // Sometimes go higher
quintet_composer_v63_REAL_FIXES.html:312:                    return note;
quintet_composer_v63_REAL_FIXES.html:315:                // More interesting patterns
quintet_composer_v63_REAL_FIXES.html:319:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:320:                            pitch: violinIINotes[2],
quintet_composer_v63_REAL_FIXES.html:324:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:325:                            pitch: violinIINotes[1],
quintet_composer_v63_REAL_FIXES.html:329:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:330:                            pitch: violinIINotes[0],
quintet_composer_v63_REAL_FIXES.html:337:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:338:                            pitch: violinIINotes[0],
quintet_composer_v63_REAL_FIXES.html:342:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:343:                            pitch: violinIINotes[2],
quintet_composer_v63_REAL_FIXES.html:347:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:348:                            pitch: violinIINotes[1],
quintet_composer_v63_REAL_FIXES.html:355:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:356:                            pitch: violinIINotes[1],
quintet_composer_v63_REAL_FIXES.html:360:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:361:                            pitch: violinIINotes[2],
quintet_composer_v63_REAL_FIXES.html:365:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:366:                            pitch: violinIINotes[0],
quintet_composer_v63_REAL_FIXES.html:370:                        notes.push({
quintet_composer_v63_REAL_FIXES.html:371:                            pitch: violinIINotes[1],
quintet_composer_v63_REAL_FIXES.html:381:                return notes;
quintet_composer_v63_REAL_FIXES.html:384:            generateViolaBar(chordNotes, barNumber) {
quintet_composer_v63_REAL_FIXES.html:385:                const notes = [];
quintet_composer_v63_REAL_FIXES.html:388:                const violaNotes = chordNotes.map(n => {
quintet_composer_v63_REAL_FIXES.html:389:                    let note = n - 12; // Put in viola range (octave 3)
quintet_composer_v63_REAL_FIXES.html:390:                    while (note < 48) note += 12; // C3 minimum
quintet_composer_v63_REAL_FIXES.html:391:                    while (note > 67) note -= 12; // G4 maximum
quintet_composer_v63_REAL_FIXES.html:392:                    return note;
quintet_composer_v63_REAL_FIXES.html:398:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:399:                        pitch: violaNotes[0],
quintet_composer_v63_REAL_FIXES.html:403:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:404:                        pitch: violaNotes[1],
quintet_composer_v63_REAL_FIXES.html:408:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:409:                        pitch: violaNotes[2],
quintet_composer_v63_REAL_FIXES.html:413:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:414:                        pitch: violaNotes[0],
quintet_composer_v63_REAL_FIXES.html:420:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:421:                        pitch: violaNotes[2],
quintet_composer_v63_REAL_FIXES.html:425:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:426:                        pitch: violaNotes[1],
quintet_composer_v63_REAL_FIXES.html:430:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:431:                        pitch: violaNotes[0],
quintet_composer_v63_REAL_FIXES.html:437:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:438:                        pitch: violaNotes[1],
quintet_composer_v63_REAL_FIXES.html:442:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:443:                        pitch: violaNotes[2],
quintet_composer_v63_REAL_FIXES.html:447:                    notes.push({
quintet_composer_v63_REAL_FIXES.html:448:                        pitch: violaNotes[1],
quintet_composer_v63_REAL_FIXES.html:454:                return notes;
quintet_composer_v63_REAL_FIXES.html:457:            generateCelloBar(chordNotes, barNumber) {
quintet_composer_v63_REAL_FIXES.html:458:                const notes = [];
quintet_composer_v63_REAL_FIXES.html:461:                const root = chordNotes[0] - 12; // One octave down from chord root
quintet_composer_v63_REAL_FIXES.html:462:                const fifth = chordNotes[2] - 12;
quintet_composer_v63_REAL_FIXES.html:473:                notes.push({
quintet_composer_v63_REAL_FIXES.html:478:                notes.push({
quintet_composer_v63_REAL_FIXES.html:484:                return notes;
quintet_composer_v63_REAL_FIXES.html:504:                    const chordNotes = this.buildChord(chordDegree);
quintet_composer_v63_REAL_FIXES.html:507:                    const guitarBar = this.generateGuitarBar(chordNotes, measure);
quintet_composer_v63_REAL_FIXES.html:508:                    const violin1Bar = this.generateViolinIMelody(chordNotes, measure);
quintet_composer_v63_REAL_FIXES.html:509:                    const violin2Bar = this.generateViolinIIHarmony(chordNotes, measure, violin1Bar);
quintet_composer_v63_REAL_FIXES.html:510:                    const violaBar = this.generateViolaBar(chordNotes, measure);
quintet_composer_v63_REAL_FIXES.html:511:                    const celloBar = this.generateCelloBar(chordNotes, measure);
quintet_composer_v63_REAL_FIXES.html:522:                    output += `  Guitar: ${guitarBar.length} notes (${guitarBar.filter(n => n.chord).length} chords)\n`;
quintet_composer_v63_REAL_FIXES.html:523:                    output += `  Violin II: ${violin2Bar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v63_REAL_FIXES.html:524:                    output += `  Viola: ${violaBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v63_REAL_FIXES.html:525:                    output += `  Cello: ${celloBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v63_REAL_FIXES.html:621:                    // Generate notes for this measure
quintet_composer_v63_REAL_FIXES.html:622:                    measure.forEach(note => {
quintet_composer_v63_REAL_FIXES.html:623:                        if (Array.isArray(note.pitch)) {
quintet_composer_v63_REAL_FIXES.html:625:                            note.pitch.forEach((pitch, idx) => {
quintet_composer_v63_REAL_FIXES.html:626:                                xml += '      <note>\n';
quintet_composer_v63_REAL_FIXES.html:629:                                // Add 12 to guitar notes for notation (already in correct octave for playback)
quintet_composer_v63_REAL_FIXES.html:632:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v63_REAL_FIXES.html:633:                                xml += `        <type>${note.type}</type>\n`;
quintet_composer_v63_REAL_FIXES.html:634:                                xml += '      </note>\n';
quintet_composer_v63_REAL_FIXES.html:637:                            // Single note
quintet_composer_v63_REAL_FIXES.html:638:                            xml += '      <note>\n';
quintet_composer_v63_REAL_FIXES.html:640:                            // Add 12 to guitar notes for notation
quintet_composer_v63_REAL_FIXES.html:641:                            const displayPitch = partMeta.transpose ? note.pitch + 12 : note.pitch;
quintet_composer_v63_REAL_FIXES.html:643:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v63_REAL_FIXES.html:644:                            xml += `        <type>${note.type}</type>\n`;
quintet_composer_v63_REAL_FIXES.html:645:                            xml += '      </note>\n';
quintet_composer_v63_REAL_FIXES.html:660:            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v63_REAL_FIXES.html:664:            const noteIndex = midi % 12;
quintet_composer_v63_REAL_FIXES.html:667:            xml += `<step>${noteNames[noteIndex]}</step>`;
quintet_composer_v63_REAL_FIXES.html:668:            if (alterations[noteIndex]) xml += '<alter>1</alter>';
quintet_composer_v64_GUITAR_FIXED.html:137:            'C': { tonic: 0, notes: [0, 2, 4, 5, 7, 9, 11], sharps: 0 },
quintet_composer_v64_GUITAR_FIXED.html:138:            'G': { tonic: 7, notes: [7, 9, 11, 0, 2, 4, 6], sharps: 1 },
quintet_composer_v64_GUITAR_FIXED.html:139:            'D': { tonic: 2, notes: [2, 4, 6, 7, 9, 11, 1], sharps: 2 },
quintet_composer_v64_GUITAR_FIXED.html:140:            'A': { tonic: 9, notes: [9, 11, 1, 2, 4, 6, 8], sharps: 3 },
quintet_composer_v64_GUITAR_FIXED.html:141:            'F': { tonic: 5, notes: [5, 7, 9, 10, 0, 2, 4], sharps: -1 }
quintet_composer_v64_GUITAR_FIXED.html:144:        // Note names for display
quintet_composer_v64_GUITAR_FIXED.html:145:        const NOTE_NAMES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v64_GUITAR_FIXED.html:191:                const scale = this.keyData.notes;
quintet_composer_v64_GUITAR_FIXED.html:198:                let chordNotes = [root, third, fifth, seventh].map(note => {
quintet_composer_v64_GUITAR_FIXED.html:199:                    let midiNote = note + 48; // Start in octave 4
quintet_composer_v64_GUITAR_FIXED.html:200:                    if (note < root) midiNote += 12;
quintet_composer_v64_GUITAR_FIXED.html:201:                    return midiNote;
quintet_composer_v64_GUITAR_FIXED.html:204:                return chordNotes;
quintet_composer_v64_GUITAR_FIXED.html:207:            generateGuitarBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_FIXED.html:208:                const notes = [];
quintet_composer_v64_GUITAR_FIXED.html:211:                const guitarChord = chordNotes.map((note, idx) => {
quintet_composer_v64_GUITAR_FIXED.html:212:                    let guitarNote = note - 12; // Move down 1 octave from chord (which is in octave 4)
quintet_composer_v64_GUITAR_FIXED.html:214:                    while (guitarNote > 64) guitarNote -= 12; // Max E4 for chords
quintet_composer_v64_GUITAR_FIXED.html:215:                    while (guitarNote < 40) guitarNote += 12; // Min E2
quintet_composer_v64_GUITAR_FIXED.html:216:                    return guitarNote;
quintet_composer_v64_GUITAR_FIXED.html:222:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:228:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:238:                        guitarChord.forEach(note => {
quintet_composer_v64_GUITAR_FIXED.html:239:                            notes.push({
quintet_composer_v64_GUITAR_FIXED.html:240:                                pitch: note,
quintet_composer_v64_GUITAR_FIXED.html:248:                        // Bass note + chord pattern
quintet_composer_v64_GUITAR_FIXED.html:249:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:254:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:260:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:265:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:274:                return notes;
quintet_composer_v64_GUITAR_FIXED.html:277:            generateViolinIMelody(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_FIXED.html:278:                const notes = [];
quintet_composer_v64_GUITAR_FIXED.html:279:                const scale = this.keyData.notes.map(n => n + 60); // Octave 5
quintet_composer_v64_GUITAR_FIXED.html:292:                        const noteIndex = this.rng.nextInt(0, scale.length - 1);
quintet_composer_v64_GUITAR_FIXED.html:293:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:294:                            pitch: scale[noteIndex],
quintet_composer_v64_GUITAR_FIXED.html:302:                return notes;
quintet_composer_v64_GUITAR_FIXED.html:305:            generateViolinIIHarmony(chordNotes, barNumber, violin1Notes) {
quintet_composer_v64_GUITAR_FIXED.html:306:                const notes = [];
quintet_composer_v64_GUITAR_FIXED.html:309:                const violinIINotes = chordNotes.map(n => {
quintet_composer_v64_GUITAR_FIXED.html:310:                    let note = n; // Already in octave 4
quintet_composer_v64_GUITAR_FIXED.html:311:                    if (barNumber % 3 === 0) note += 12; // Sometimes go higher
quintet_composer_v64_GUITAR_FIXED.html:312:                    return note;
quintet_composer_v64_GUITAR_FIXED.html:315:                // More interesting patterns
quintet_composer_v64_GUITAR_FIXED.html:319:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:320:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_FIXED.html:324:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:325:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_FIXED.html:329:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:330:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_FIXED.html:337:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:338:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_FIXED.html:342:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:343:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_FIXED.html:347:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:348:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_FIXED.html:355:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:356:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_FIXED.html:360:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:361:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_FIXED.html:365:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:366:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_FIXED.html:370:                        notes.push({
quintet_composer_v64_GUITAR_FIXED.html:371:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_FIXED.html:381:                return notes;
quintet_composer_v64_GUITAR_FIXED.html:384:            generateViolaBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_FIXED.html:385:                const notes = [];
quintet_composer_v64_GUITAR_FIXED.html:388:                const violaNotes = chordNotes.map(n => {
quintet_composer_v64_GUITAR_FIXED.html:389:                    let note = n - 12; // Put in viola range (octave 3)
quintet_composer_v64_GUITAR_FIXED.html:390:                    while (note < 48) note += 12; // C3 minimum
quintet_composer_v64_GUITAR_FIXED.html:391:                    while (note > 67) note -= 12; // G4 maximum
quintet_composer_v64_GUITAR_FIXED.html:392:                    return note;
quintet_composer_v64_GUITAR_FIXED.html:398:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:399:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_FIXED.html:403:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:404:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_FIXED.html:408:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:409:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_FIXED.html:413:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:414:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_FIXED.html:420:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:421:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_FIXED.html:425:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:426:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_FIXED.html:430:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:431:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_FIXED.html:437:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:438:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_FIXED.html:442:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:443:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_FIXED.html:447:                    notes.push({
quintet_composer_v64_GUITAR_FIXED.html:448:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_FIXED.html:454:                return notes;
quintet_composer_v64_GUITAR_FIXED.html:457:            generateCelloBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_FIXED.html:458:                const notes = [];
quintet_composer_v64_GUITAR_FIXED.html:461:                const root = chordNotes[0] - 12; // One octave down from chord root
quintet_composer_v64_GUITAR_FIXED.html:462:                const fifth = chordNotes[2] - 12;
quintet_composer_v64_GUITAR_FIXED.html:473:                notes.push({
quintet_composer_v64_GUITAR_FIXED.html:478:                notes.push({
quintet_composer_v64_GUITAR_FIXED.html:484:                return notes;
quintet_composer_v64_GUITAR_FIXED.html:504:                    const chordNotes = this.buildChord(chordDegree);
quintet_composer_v64_GUITAR_FIXED.html:507:                    const guitarBar = this.generateGuitarBar(chordNotes, measure);
quintet_composer_v64_GUITAR_FIXED.html:508:                    const violin1Bar = this.generateViolinIMelody(chordNotes, measure);
quintet_composer_v64_GUITAR_FIXED.html:509:                    const violin2Bar = this.generateViolinIIHarmony(chordNotes, measure, violin1Bar);
quintet_composer_v64_GUITAR_FIXED.html:510:                    const violaBar = this.generateViolaBar(chordNotes, measure);
quintet_composer_v64_GUITAR_FIXED.html:511:                    const celloBar = this.generateCelloBar(chordNotes, measure);
quintet_composer_v64_GUITAR_FIXED.html:522:                    output += `  Guitar: ${guitarBar.map(n => Array.isArray(n.pitch) ? 'chord' : `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_FIXED.html:523:                    output += `  Violin II: ${violin2Bar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_FIXED.html:524:                    output += `  Viola: ${violaBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_FIXED.html:525:                    output += `  Cello: ${celloBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_FIXED.html:623:                    // Generate notes for this measure
quintet_composer_v64_GUITAR_FIXED.html:624:                    measure.forEach(note => {
quintet_composer_v64_GUITAR_FIXED.html:625:                        if (Array.isArray(note.pitch)) {
quintet_composer_v64_GUITAR_FIXED.html:627:                            note.pitch.forEach((pitch, idx) => {
quintet_composer_v64_GUITAR_FIXED.html:628:                                xml += '      <note>\n';
quintet_composer_v64_GUITAR_FIXED.html:631:                                // Guitar notes written one octave higher than they sound
quintet_composer_v64_GUITAR_FIXED.html:634:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_FIXED.html:635:                                xml += `        <type>${note.type}</type>\n`;
quintet_composer_v64_GUITAR_FIXED.html:636:                                xml += '      </note>\n';
quintet_composer_v64_GUITAR_FIXED.html:639:                            // Single note
quintet_composer_v64_GUITAR_FIXED.html:640:                            xml += '      <note>\n';
quintet_composer_v64_GUITAR_FIXED.html:642:                            // Guitar notes written one octave higher than they sound
quintet_composer_v64_GUITAR_FIXED.html:643:                            const displayPitch = (partMeta.transpose && partMeta.name === 'Guitar') ? note.pitch + 12 : note.pitch;
quintet_composer_v64_GUITAR_FIXED.html:645:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_FIXED.html:646:                            xml += `        <type>${note.type}</type>\n`;
quintet_composer_v64_GUITAR_FIXED.html:647:                            xml += '      </note>\n';
quintet_composer_v64_GUITAR_FIXED.html:662:            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v64_GUITAR_FIXED.html:666:            const noteIndex = midi % 12;
quintet_composer_v64_GUITAR_FIXED.html:669:            xml += `<step>${noteNames[noteIndex]}</step>`;
quintet_composer_v64_GUITAR_FIXED.html:670:            if (alterations[noteIndex]) xml += '<alter>1</alter>';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:137:            'C': { tonic: 0, notes: [0, 2, 4, 5, 7, 9, 11], sharps: 0 },
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:138:            'G': { tonic: 7, notes: [7, 9, 11, 0, 2, 4, 6], sharps: 1 },
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:139:            'D': { tonic: 2, notes: [2, 4, 6, 7, 9, 11, 1], sharps: 2 },
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:140:            'A': { tonic: 9, notes: [9, 11, 1, 2, 4, 6, 8], sharps: 3 },
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:141:            'F': { tonic: 5, notes: [5, 7, 9, 10, 0, 2, 4], sharps: -1 }
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:144:        // Note names for display
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:145:        const NOTE_NAMES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:191:                const scale = this.keyData.notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:198:                let chordNotes = [root, third, fifth, seventh].map(note => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:199:                    let midiNote = note + 48; // Start in octave 4
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:200:                    if (note < root) midiNote += 12;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:201:                    return midiNote;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:204:                return chordNotes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:207:            generateGuitarBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:208:                const notes = [];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:211:                const guitarChord = chordNotes.map((note, idx) => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:212:                    let guitarNote = note - 24; // Move down 2 octaves to get into guitar range
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:214:                    while (guitarNote > 52) guitarNote -= 12; // Max E3 for chords
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:215:                    while (guitarNote < 40) guitarNote += 12; // Min E2
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:216:                    return guitarNote;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:222:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:228:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:238:                        guitarChord.forEach(note => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:239:                            notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:240:                                pitch: note,
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:248:                        // Bass note + chord pattern
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:249:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:254:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:260:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:265:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:274:                return notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:277:            generateViolinIMelody(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:278:                const notes = [];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:279:                const scale = this.keyData.notes.map(n => n + 60); // Octave 5
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:292:                        const noteIndex = this.rng.nextInt(0, scale.length - 1);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:293:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:294:                            pitch: scale[noteIndex],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:302:                return notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:305:            generateViolinIIHarmony(chordNotes, barNumber, violin1Notes) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:306:                const notes = [];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:309:                const violinIINotes = chordNotes.map(n => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:310:                    let note = n; // Already in octave 4
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:311:                    if (barNumber % 3 === 0) note += 12; // Sometimes go higher
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:312:                    return note;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:315:                // More interesting patterns
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:319:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:320:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:324:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:325:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:329:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:330:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:337:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:338:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:342:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:343:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:347:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:348:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:355:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:356:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:360:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:361:                            pitch: violinIINotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:365:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:366:                            pitch: violinIINotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:370:                        notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:371:                            pitch: violinIINotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:381:                return notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:384:            generateViolaBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:385:                const notes = [];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:388:                const violaNotes = chordNotes.map(n => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:389:                    let note = n - 12; // Put in viola range (octave 3)
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:390:                    while (note < 48) note += 12; // C3 minimum
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:391:                    while (note > 67) note -= 12; // G4 maximum
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:392:                    return note;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:398:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:399:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:403:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:404:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:408:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:409:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:413:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:414:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:420:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:421:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:425:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:426:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:430:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:431:                        pitch: violaNotes[0],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:437:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:438:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:442:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:443:                        pitch: violaNotes[2],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:447:                    notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:448:                        pitch: violaNotes[1],
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:454:                return notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:457:            generateCelloBar(chordNotes, barNumber) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:458:                const notes = [];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:461:                const root = chordNotes[0] - 12; // One octave down from chord root
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:462:                const fifth = chordNotes[2] - 12;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:473:                notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:478:                notes.push({
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:484:                return notes;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:504:                    const chordNotes = this.buildChord(chordDegree);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:507:                    const guitarBar = this.generateGuitarBar(chordNotes, measure);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:508:                    const violin1Bar = this.generateViolinIMelody(chordNotes, measure);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:509:                    const violin2Bar = this.generateViolinIIHarmony(chordNotes, measure, violin1Bar);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:510:                    const violaBar = this.generateViolaBar(chordNotes, measure);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:511:                    const celloBar = this.generateCelloBar(chordNotes, measure);
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:522:                    output += `  Guitar: ${guitarBar.length} notes (${guitarBar.filter(n => n.chord).length} chords)\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:523:                    output += `  Violin II: ${violin2Bar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:524:                    output += `  Viola: ${violaBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:525:                    output += `  Cello: ${celloBar.map(n => `${NOTE_NAMES[n.pitch % 12]}${Math.floor(n.pitch / 12)}`).join('-')}\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:621:                    // Generate notes for this measure
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:622:                    measure.forEach(note => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:623:                        if (Array.isArray(note.pitch)) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:625:                            note.pitch.forEach((pitch, idx) => {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:626:                                xml += '      <note>\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:629:                                // Add 12 to guitar notes for notation (already in correct octave for playback)
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:632:                                xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:633:                                xml += `        <type>${note.type}</type>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:634:                                xml += '      </note>\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:637:                            // Single note
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:638:                            xml += '      <note>\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:640:                            // Add 12 to guitar notes for notation
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:641:                            const displayPitch = partMeta.transpose ? note.pitch + 12 : note.pitch;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:643:                            xml += `        <duration>${note.duration}</duration>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:644:                            xml += `        <type>${note.type}</type>\n`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:645:                            xml += '      </note>\n';
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:660:            const noteNames = ['C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'];
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:664:            const noteIndex = midi % 12;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:667:            xml += `<step>${noteNames[noteIndex]}</step>`;
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:668:            if (alterations[noteIndex]) xml += '<alter>1</alter>';
quintet_composer_v7_final.html:105:        .instrument-card .note-count {
quintet_composer_v7_final.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet_composer_v7_final.html:165:                <select id="noteType">
quintet_composer_v7_final.html:166:                    <option value="simple">Simple (Quarter notes)</option>
quintet_composer_v7_final.html:184:                <div class="note-count" id="guitar-count">-</div>
quintet_composer_v7_final.html:188:                <div class="note-count" id="violin1-count">-</div>
quintet_composer_v7_final.html:192:                <div class="note-count" id="violin2-count">-</div>
quintet_composer_v7_final.html:196:                <div class="note-count" id="viola-count">-</div>
quintet_composer_v7_final.html:200:                <div class="note-count" id="cello-count">-</div>
quintet_composer_v7_final.html:235:                var noteType = document.getElementById('noteType').value;
quintet_composer_v7_final.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v7_final.html:257:                // Generate notes for each instrument
quintet_composer_v7_final.html:259:                    var notes = [];
quintet_composer_v7_final.html:264:                        // Helper function to add a note
quintet_composer_v7_final.html:265:                        function addNote(startBeat, duration, vel) {
quintet_composer_v7_final.html:283:                            notes.push({
quintet_composer_v7_final.html:293:                        if (noteType === 'simple') {
quintet_composer_v7_final.html:294:                            // 4 quarter notes
quintet_composer_v7_final.html:296:                                addNote(b * divisions, divisions, velocity);
quintet_composer_v7_final.html:298:                        } else if (noteType === 'moderate') {
quintet_composer_v7_final.html:299:                            // Half note + 2 quarters
quintet_composer_v7_final.html:300:                            addNote(0, divisions * 2, velocity);
quintet_composer_v7_final.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet_composer_v7_final.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet_composer_v7_final.html:303:                        } else if (noteType === 'complex') {
quintet_composer_v7_final.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet_composer_v7_final.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet_composer_v7_final.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet_composer_v7_final.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet_composer_v7_final.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet_composer_v7_final.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet_composer_v7_final.html:324:                                addNote(0, divisions, velocity);
quintet_composer_v7_final.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet_composer_v7_final.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet_composer_v7_final.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet_composer_v7_final.html:334:                        notes: notes
quintet_composer_v7_final.html:338:                    document.getElementById(instrumentNames[inst].toLowerCase() + '-count').textContent = notes.length;
quintet_composer_v7_final.html:349:                    composition.instruments.reduce(function(sum, inst) { return sum + inst.notes.length; }, 0) + 
quintet_composer_v7_final.html:350:                    ' total notes';
quintet_composer_v7_final.html:419:                    // Sort notes by start time
quintet_composer_v7_final.html:420:                    var sortedNotes = instrument.notes.slice().sort(function(a, b) {
quintet_composer_v7_final.html:424:                    // Write notes
quintet_composer_v7_final.html:426:                    for (var n = 0; n < sortedNotes.length; n++) {
quintet_composer_v7_final.html:427:                        var note = sortedNotes[n];
quintet_composer_v7_final.html:428:                        var startTick = Math.round(note.start * ticksPerQuarter / 4);
quintet_composer_v7_final.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet_composer_v7_final.html:431:                        // Note on
quintet_composer_v7_final.html:434:                        track.push(0x90 + i); // Note on
quintet_composer_v7_final.html:435:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet_composer_v7_final.html:436:                        track.push(Math.max(1, Math.min(127, note.velocity)));
quintet_composer_v7_final.html:438:                        // Note off
quintet_composer_v7_final.html:440:                        track.push(0x80 + i); // Note off
quintet_composer_v7_final.html:441:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet_composer_v7_final.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet_composer_v7_final.html:542:                        // Get notes for this measure
quintet_composer_v7_final.html:543:                        var measureNotes = instrument.notes.filter(function(n) {
quintet_composer_v7_final.html:548:                        measureNotes.sort(function(a, b) {
quintet_composer_v7_final.html:556:                        for (var n = 0; n < measureNotes.length; n++) {
quintet_composer_v7_final.html:557:                            var note = measureNotes[n];
quintet_composer_v7_final.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet_composer_v7_final.html:560:                            // Add rest if there's a gap
quintet_composer_v7_final.html:561:                            if (noteStart > currentBeat) {
quintet_composer_v7_final.html:562:                                var restDuration = noteStart - currentBeat;
quintet_composer_v7_final.html:563:                                xml += '      <note>\n';
quintet_composer_v7_final.html:564:                                xml += '        <rest/>\n';
quintet_composer_v7_final.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet_composer_v7_final.html:566:                                xml += '      </note>\n';
quintet_composer_v7_final.html:569:                            // Add the note
quintet_composer_v7_final.html:570:                            xml += '      <note>\n';
quintet_composer_v7_final.html:572:                            // Convert MIDI pitch to note name
quintet_composer_v7_final.html:574:                            var noteName = pitchNames[note.pitch % 12];
quintet_composer_v7_final.html:575:                            var octave = Math.floor(note.pitch / 12) - 1;
quintet_composer_v7_final.html:576:                            var alter = noteName.includes('#') ? 1 : 0;
quintet_composer_v7_final.html:577:                            var step = noteName.replace('#', '');
quintet_composer_v7_final.html:587:                            var duration = Math.max(1, note.duration);
quintet_composer_v7_final.html:590:                            // Determine note type
quintet_composer_v7_final.html:612:                            xml += '      </note>\n';
quintet_composer_v7_final.html:614:                            currentBeat = noteStart + note.duration;
quintet_composer_v7_final.html:617:                        // Fill rest of measure if needed
quintet_composer_v7_final.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v7_final.html:620:                            xml += '      <note>\n';
quintet_composer_v7_final.html:621:                            xml += '        <rest/>\n';
quintet_composer_v7_final.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_composer_v7_final.html:623:                            xml += '      </note>\n';
quintet_v62_real_music.html:207:                <div class="stat-value" id="statNotes">0</div>
quintet_v62_real_music.html:208:                <div class="stat-label">Total Notes</div>
quintet_v62_real_music.html:315:            generateMelodicPhrase(scale, startNote, length, style) {
quintet_v62_real_music.html:317:                let currentNote = startNote;
quintet_v62_real_music.html:356:                    currentNote = Math.max(0, Math.min(scale.length - 1, currentNote + interval));
quintet_v62_real_music.html:359:                        note: scale[currentNote],
quintet_v62_real_music.html:398:                        notes: [chord.root],
quintet_v62_real_music.html:403:                        notes: [chord.third, chord.fifth],
quintet_v62_real_music.html:417:                            notes: [chord.root],
quintet_v62_real_music.html:423:                            notes: [chord.third, chord.fifth],
quintet_v62_real_music.html:446:                            notes: [chord.root, chord.third, chord.fifth],
quintet_v62_real_music.html:460:                    { notes: [chord.root, chord.seventh, chord.third], duration: 1, technique: 'comp' },
quintet_v62_real_music.html:461:                    { notes: [chord.third, chord.seventh, chord.ninth], duration: 0.5, technique: 'comp' },
quintet_v62_real_music.html:462:                    { notes: [], duration: 0.5, technique: 'rest' } // Syncopation
quintet_v62_real_music.html:478:                            notes: [chord.root],
quintet_v62_real_music.html:484:                            notes: [chord.third, chord.fifth],
quintet_v62_real_music.html:490:                            notes: [chord.fifth],
quintet_v62_real_music.html:506:                        notes: [chord.root, chord.fifth],
quintet_v62_real_music.html:597:                const notes = [];
quintet_v62_real_music.html:605:                    const note = {
quintet_v62_real_music.html:606:                        pitch: this.getNoteName(item.note),
quintet_v62_real_music.html:613:                        note.additionalNotes = [{
quintet_v62_real_music.html:614:                            pitch: this.getNoteName(item.note + 3),
quintet_v62_real_music.html:619:                    notes.push(note);
quintet_v62_real_music.html:622:                return notes;
quintet_v62_real_music.html:627:                const notes = [];
quintet_v62_real_music.html:631:                const voiceLeadingNotes = this.getVoiceLeadingNotes(chord, instrument);
quintet_v62_real_music.html:633:                voiceLeadingNotes.forEach((note, index) => {
quintet_v62_real_music.html:634:                    const noteObj = {
quintet_v62_real_music.html:635:                        pitch: note,
quintet_v62_real_music.html:642:                        noteObj.additionalNotes = [{
quintet_v62_real_music.html:643:                            pitch: this.getNoteName(this.getNoteNumber(note) + 4),
quintet_v62_real_music.html:648:                    notes.push(noteObj);
quintet_v62_real_music.html:651:                return notes;
quintet_v62_real_music.html:656:                const notes = [];
quintet_v62_real_music.html:668:                pattern.forEach((note, index) => {
quintet_v62_real_music.html:669:                    const noteObj = {
quintet_v62_real_music.html:670:                        pitch: note,
quintet_v62_real_music.html:677:                        noteObj.additionalNotes = [{
quintet_v62_real_music.html:683:                    notes.push(noteObj);
quintet_v62_real_music.html:686:                return notes;
quintet_v62_real_music.html:704:                const keyNotes = this.getKeyNotes(key);
quintet_v62_real_music.html:715:                const root = keyNotes[rootIndex];
quintet_v62_real_music.html:716:                const third = keyNotes[(rootIndex + 2) % 7];
quintet_v62_real_music.html:717:                const fifth = keyNotes[(rootIndex + 4) % 7];
quintet_v62_real_music.html:718:                const seventh = keyNotes[(rootIndex + 6) % 7];
quintet_v62_real_music.html:719:                const ninth = keyNotes[(rootIndex + 1) % 7];
quintet_v62_real_music.html:741:            // BULLETPROOF: Get key notes
quintet_v62_real_music.html:742:            getKeyNotes(key) {
quintet_v62_real_music.html:743:                const notes = {
quintet_v62_real_music.html:755:                return notes[key] || notes['C'];
quintet_v62_real_music.html:759:            getVoiceLeadingNotes(chord, instrument) {
quintet_v62_real_music.html:769:            // BULLETPROOF: Convert note number to name
quintet_v62_real_music.html:770:            getNoteName(noteNumber) {
quintet_v62_real_music.html:771:                const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet_v62_real_music.html:772:                return noteNames[noteNumber % 12];
quintet_v62_real_music.html:775:            // BULLETPROOF: Convert note name to number
quintet_v62_real_music.html:776:            getNoteNumber(noteName) {
quintet_v62_real_music.html:777:                const noteMap = {
quintet_v62_real_music.html:782:                return noteMap[noteName] || 0;
quintet_v62_real_music.html:852:                        // Notes
quintet_v62_real_music.html:853:                        const measureNotes = this.composition.parts[partName][m];
quintet_v62_real_music.html:854:                        if (measureNotes) {
quintet_v62_real_music.html:855:                            measureNotes.forEach(note => {
quintet_v62_real_music.html:856:                                xml += this.noteToXML(note);
quintet_v62_real_music.html:880:            // BULLETPROOF: Convert note to XML
quintet_v62_real_music.html:881:            noteToXML(note) {
quintet_v62_real_music.html:882:                let xml = '      <note>\n';
quintet_v62_real_music.html:884:                if (note.rest) {
quintet_v62_real_music.html:885:                    xml += '        <rest/>\n';
quintet_v62_real_music.html:887:                    // Main note
quintet_v62_real_music.html:889:                    xml += `          <step>${note.pitch.charAt(0)}</step>\n`;
quintet_v62_real_music.html:890:                    if (note.pitch.includes('#')) {
quintet_v62_real_music.html:892:                    } else if (note.pitch.includes('b')) {
quintet_v62_real_music.html:895:                    xml += `          <octave>${note.octave}</octave>\n`;
quintet_v62_real_music.html:899:                xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v62_real_music.html:900:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_v62_real_music.html:903:                if (note.additionalNotes) {
quintet_v62_real_music.html:907:                xml += '      </note>\n';
quintet_v62_real_music.html:909:                // Additional notes for multiple stops
quintet_v62_real_music.html:910:                if (note.additionalNotes) {
quintet_v62_real_music.html:911:                    note.additionalNotes.forEach(addNote => {
quintet_v62_real_music.html:912:                        xml += '      <note>\n';
quintet_v62_real_music.html:915:                        xml += `          <step>${addNote.pitch.charAt(0)}</step>\n`;
quintet_v62_real_music.html:916:                        if (addNote.pitch.includes('#')) {
quintet_v62_real_music.html:919:                        xml += `          <octave>${addNote.octave}</octave>\n`;
quintet_v62_real_music.html:921:                        xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v62_real_music.html:922:                        xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet_v62_real_music.html:923:                        xml += '      </note>\n';
quintet_v62_real_music.html:942:            // BULLETPROOF: Duration to note type
quintet_v62_real_music.html:1002:                let totalNotes = 0;
quintet_v62_real_music.html:1010:                            measure.forEach(note => {
quintet_v62_real_music.html:1011:                                totalNotes++;
quintet_v62_real_music.html:1012:                                if (note.additionalNotes) {
quintet_v62_real_music.html:1013:                                    if (note.additionalNotes.length === 1) doubleStops++;
quintet_v62_real_music.html:1014:                                    else if (note.additionalNotes.length === 2) tripleStops++;
quintet_v62_real_music.html:1025:                document.getElementById('statNotes').textContent = totalNotes;
quintet_v63.html:189:            const notes = [];
quintet_v63.html:192:            const rhythms = [1, 1, 1, 1]; // Quarter notes
quintet_v63.html:197:                notes.push({
quintet_v63.html:204:            return notes;
quintet_v63.html:215:                duration: 4 // Whole note
quintet_v63.html:384:                    // Add notes
quintet_v63.html:385:                    const notes = composition.parts[partName][m];
quintet_v63.html:386:                    if (notes) {
quintet_v63.html:387:                        notes.forEach(note => {
quintet_v63.html:388:                            xml += '      <note>\n';
quintet_v63.html:390:                            xml += `          <step>${note.pitch.charAt(0)}</step>\n`;
quintet_v63.html:391:                            if (note.pitch.includes('#')) {
quintet_v63.html:393:                            } else if (note.pitch.includes('b')) {
quintet_v63.html:396:                            xml += `          <octave>${note.octave}</octave>\n`;
quintet_v63.html:398:                            xml += `        <duration>${note.duration * 4}</duration>\n`;
quintet_v63.html:399:                            xml += `        <type>${getDurationType(note.duration)}</type>\n`;
quintet_v63.html:400:                            xml += '      </note>\n';
quintet_v64.html:142:                <strong>Notes:</strong> <span id="statNotes"></span>
quintet_v64.html:265:            const notes = [];
quintet_v64.html:270:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:271:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:272:                    notes.push({pitch: chord.third, octave: 4, duration: 1});
quintet_v64.html:273:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:278:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:279:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:280:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:281:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:282:                    notes.push({pitch: chord.third, octave: 4, duration: 1});
quintet_v64.html:287:                    notes.push({pitch: chord.root, octave: 3, duration: 0.5});
quintet_v64.html:288:                    notes.push({pitch: chord.third, octave: 3, duration: 0.5});
quintet_v64.html:289:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:290:                    notes.push({pitch: chord.root, octave: 3, duration: 0.5});
quintet_v64.html:291:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:296:                    notes.push({pitch: chord.third, octave: 3, duration: 1.5});
quintet_v64.html:297:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:298:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:303:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:304:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:305:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:306:                    notes.push({pitch: chord.fifth, octave: 3, duration: 0.5});
quintet_v64.html:307:                    notes.push({pitch: chord.third, octave: 4, duration: 0.5});
quintet_v64.html:308:                    notes.push({pitch: chord.root, octave: 3, duration: 1});
quintet_v64.html:313:                    notes.push({pitch: chord.root, octave: 3, duration: 2});
quintet_v64.html:314:                    notes.push({pitch: chord.third, octave: 3, duration: 1});
quintet_v64.html:315:                    notes.push({pitch: chord.fifth, octave: 3, duration: 1});
quintet_v64.html:318:            return notes;
quintet_v64.html:323:            const notes = [];
quintet_v64.html:328:                notes.push({pitch: chord.root, octave: 5, duration: 2});
quintet_v64.html:329:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:330:                notes.push({pitch: chord.fifth, octave: 5, duration: 1});
quintet_v64.html:333:                notes.push({pitch: chord.fifth, octave: 5, duration: 2});
quintet_v64.html:334:                notes.push({
quintet_v64.html:342:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:343:                notes.push({pitch: chord.fifth, octave: 5, duration: 1});
quintet_v64.html:344:                notes.push({pitch: chord.root, octave: 5, duration: 1});
quintet_v64.html:345:                notes.push({pitch: chord.third, octave: 5, duration: 1});
quintet_v64.html:348:            return notes;
quintet_v64.html:376:            let totalNotes = 0;
quintet_v64.html:378:            // Count all notes
quintet_v64.html:381:                    totalNotes += measure.length;
quintet_v64.html:388:            document.getElementById('statNotes').textContent = totalNotes;
quintet_v64.html:457:                    // Add notes for this measure
quintet_v64.html:458:                    const notes = composition.parts[part.name][m];
quintet_v64.html:459:                    if (notes) {
quintet_v64.html:460:                        notes.forEach(function(note) {
quintet_v64.html:461:                            xml += '      <note>\n';
quintet_v64.html:463:                            xml += '          <step>' + note.pitch.charAt(0) + '</step>\n';
quintet_v64.html:464:                            if (note.pitch.includes('#')) {
quintet_v64.html:467:                            xml += '          <octave>' + note.octave + '</octave>\n';
quintet_v64.html:469:                            xml += '        <duration>' + Math.round(note.duration * 4) + '</duration>\n';
quintet_v64.html:470:                            xml += '        <type>' + getDurationType(note.duration) + '</type>\n';
quintet_v64.html:471:                            xml += '      </note>\n';
quintet_v64.html:474:                            if (note.doubleStop) {
quintet_v64.html:475:                                xml += '      <note>\n';
quintet_v64.html:478:                                xml += '          <step>' + note.doubleStop.charAt(0) + '</step>\n';
quintet_v64.html:479:                                if (note.doubleStop.includes('#')) {
quintet_v64.html:482:                                xml += '          <octave>' + note.octave + '</octave>\n';
quintet_v64.html:484:                                xml += '        <duration>' + Math.round(note.duration * 4) + '</duration>\n';
quintet_v64.html:485:                                xml += '        <type>' + getDurationType(note.duration) + '</type>\n';
quintet_v64.html:486:                                xml += '      </note>\n';
quintet_v64.html:511:        // Helper function for note durations
 
=== POLYRHYTHMIC FEATURES === 
 
quintet_composer_v60_COMPOSER_PROFILES.html:437:            'complex': { pattern: 'polyrhythmic', positions: ['various'] },
 
=== FUNCTION DEFINITIONS === 
 
batch-operations-universal.js:2:function initBatchOperations(generateFunction) {
fix.js:1:window.generateMusic=window.generate=window.generateQuartet=function(){const o=document.querySelector("#output")||document.body;o.innerHTML="<h2>✅ GENERATED!</h2><p>"+Date.now()+"</p>";return true;}
bulletproof_integrated.html:106:        function generateMusic() {
bulletproof_integrated.html:141:        function exportMusicXML() {
index-enhanced.html:21:        function generate() {
index.html:275:        function generateGuitar() {
index.html:299:        function generateStrings() {
quintet-enhanced.html:21:        function generate() {
quintet_composer_v13_PRODUCTION.html:494:        function generateComposition() {
quintet_composer_v13_PRODUCTION.html:849:        function exportMusicXML() {
quintet_composer_v14_WORKING_BASE.html:228:        function generateComposition() {
quintet_composer_v14_WORKING_BASE.html:477:        function exportMusicXML() {
quintet_composer_v16_HARMONIZED.html:382:        function generate() {
quintet_composer_v16_HARMONIZED.html:672:        function exportMusicXML() {
quintet_composer_v17_TRIAD.html:435:        function generateTriadPart(chord, instrument, voicing, measure, beat) {
quintet_composer_v17_TRIAD.html:481:        function generate() {
quintet_composer_v17_TRIAD.html:771:        function exportMusicXML() {
quintet_composer_v18_COMPLETE.html:375:    function generateComposition() {
quintet_composer_v18_COMPLETE.html:419:    function generateInstrumentParts(enableStops) {
quintet_composer_v18_COMPLETE.html:484:    function generateStop(baseNote, octave, stopType, keyData) {
quintet_composer_v18_COMPLETE.html:551:    function exportMusicXML() {
quintet_composer_v20_CORRECT_RANGES.html:357:    function generateNoteInRange(instrumentId, keyScale) {
quintet_composer_v20_CORRECT_RANGES.html:396:    function generateBulletproof() {
quintet_composer_v20_CORRECT_RANGES.html:434:    function generatePart(instrumentId) {
quintet_composer_v21_ABSOLUTE_FIX.html:341:    function generateNoteInRange(instrumentKey, scale) {
quintet_composer_v21_ABSOLUTE_FIX.html:360:    function generateFullComposition() {
quintet_composer_v22_FULL_FEATURES.html:341:    function generateNoteInRange(instrumentKey, scale) {
quintet_composer_v22_FULL_FEATURES.html:360:    function generateFullComposition() {
quintet_composer_v23_FIXED.html:362:        function generateNote(instrument, duration, measureNumber, noteInMeasure, options = {}) {
quintet_composer_v23_FIXED.html:393:        function generateMeasure(instrument, measureNumber, beatsPerMeasure, beatType, options) {
quintet_composer_v23_FIXED.html:476:        function generatePart(instrument, partId, measures, beatsPerMeasure, beatType, options) {
quintet_composer_v23_FIXED.html:490:        function generateComposition() {
quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet_composer_v26_WORKING_BASE.html:392:        function generateMeasureContent(instrumentName, measureNum) {
quintet_composer_v26_WORKING_BASE.html:516:        function generatePart(instrumentName, partId, measureCount) {
quintet_composer_v26_WORKING_BASE.html:587:        function generateComposition() {
quintet_composer_v28_REALITY_FIX.html:394:        function generateProgression() {
quintet_composer_v28_REALITY_FIX.html:434:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v28_REALITY_FIX.html:457:        function generateGuitarArpeggios(chord, range) {
quintet_composer_v28_REALITY_FIX.html:470:        function generateGuitarChords(chord, range) {
quintet_composer_v28_REALITY_FIX.html:492:        function generateMelody(chord, range, measureNum) {
quintet_composer_v28_REALITY_FIX.html:523:        function generateHarmony(chord, range) {
quintet_composer_v28_REALITY_FIX.html:532:        function generateBass(chord, range) {
quintet_composer_v28_REALITY_FIX.html:546:        function generateMeasureContent(instrumentName, chord, measureNum) {
quintet_composer_v28_REALITY_FIX.html:586:        function generatePart(instrumentName, partId, progression) {
quintet_composer_v28_REALITY_FIX.html:663:        function generateComposition() {
quintet_composer_v29_GUITAR_ENHANCED.html:302:        function generateProgression() {
quintet_composer_v29_GUITAR_ENHANCED.html:340:        function generateNoteXML(midi, duration, noteType, isChord = false) {
quintet_composer_v29_GUITAR_ENHANCED.html:357:        function generateGuitarMeasure(chord, style) {
quintet_composer_v29_GUITAR_ENHANCED.html:388:        function generateMeasureContent(instrumentName, chord, measureNum) {
quintet_composer_v29_GUITAR_ENHANCED.html:436:        function generatePart(instrumentName, partId, progression) {
quintet_composer_v29_GUITAR_ENHANCED.html:496:        function generateComposition() {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:294:        function generateNotesWithFailsafe(instrumentName, measureNum, chord, complexity) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:339:        function generateSimpleNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:359:        function generateModerateNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:386:        function generateAdvancedNotes(instrumentName, chord) {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:424:        function generateMusicXML() {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:558:        function generateComposition() {
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:574:        function downloadMusicXML(xmlContent) {
quintet_composer_v32_COMPOSER_PROFILES.html:425:        function generateNotesWithFailsafe(instrument, measure, chord, profile) {
quintet_composer_v32_COMPOSER_PROFILES.html:466:        function generateProfileNotes(instrument, chord, profile) {
quintet_composer_v32_COMPOSER_PROFILES.html:597:        function generateSimpleNotes(instrument, chord) {
quintet_composer_v32_COMPOSER_PROFILES.html:653:        function generateMusicXML() {
quintet_composer_v32_COMPOSER_PROFILES.html:796:        function generateComposition() {
quintet_composer_v32_COMPOSER_PROFILES.html:818:        function downloadMusicXML(xmlContent) {
quintet_composer_v40_WORKING.html:229:        function generateMusicXML() {
quintet_composer_v40_WORKING.html:367:        function generateNotesForStyle(instrument, measureNum) {
quintet_composer_v41_AUTHENTIC_MIDI.html:440:        function generateAuthenticStyle() {
quintet_composer_v41_AUTHENTIC_MIDI.html:461:        function generateMeasureForInstrument(instName, inst, chordSymbol, keyData, measureNum) {
quintet_composer_v41_AUTHENTIC_MIDI.html:642:        function exportMusicXML() {
quintet_composer_v42_1_RANGE_FIX.html:469:        function generateProgression(composer, key, measures) {
quintet_composer_v42_1_RANGE_FIX.html:547:        function generateMelody(scale, root, measures, complexity) {
quintet_composer_v42_1_RANGE_FIX.html:625:        function generateComposition() {
quintet_composer_v42_1_RANGE_FIX.html:659:        function generateHarmonyPart(instrument, chord, rhythmStyle) {
quintet_composer_v42_1_RANGE_FIX.html:723:        function exportMusicXML() {
quintet_composer_v42_TRIADGEN.html:451:        function generateProgression(composer, key, measures) {
quintet_composer_v42_TRIADGEN.html:529:        function generateMelody(scale, root, measures, complexity) {
quintet_composer_v42_TRIADGEN.html:586:        function generateComposition() {
quintet_composer_v42_TRIADGEN.html:620:        function generateHarmonyPart(instrument, chord, rhythmStyle) {
quintet_composer_v42_TRIADGEN.html:684:        function exportMusicXML() {
quintet_composer_v56_FINAL.html:237:        function generateComposition() {
quintet_composer_v56_FINAL.html:280:        function generateProgression(measures, key, style) {
quintet_composer_v56_FINAL.html:302:        function generateChord(degree, key) {
quintet_composer_v56_FINAL.html:330:        function generateGuitarPart(progression, style, key) {
quintet_composer_v56_FINAL.html:408:        function generateViolin1Part(progression, key, complexity) {
quintet_composer_v56_FINAL.html:455:        function generateViolin2Part(progression, key) {
quintet_composer_v56_FINAL.html:479:        function generateViolaPart(progression, key) {
quintet_composer_v56_FINAL.html:506:        function generateCelloPart(progression, key) {
quintet_composer_v56_FINAL.html:644:        function exportMusicXML() {
quintet_composer_v56_FINAL.html:659:        function generateMusicXML(comp) {
quintet_composer_v57_BULLETPROOF.html:228:        function generateComposition() {
quintet_composer_v57_BULLETPROOF.html:278:        function generateProgression(measures, key, style) {
quintet_composer_v57_BULLETPROOF.html:297:        function generateChord(degree, key) {
quintet_composer_v57_BULLETPROOF.html:311:        function generateGuitarPart(progression, style, key) {
quintet_composer_v57_BULLETPROOF.html:370:        function generateViolin1Part(progression, key, stopsPercent) {
quintet_composer_v57_BULLETPROOF.html:406:        function generateViolin2Part(progression, key, stopsPercent) {
quintet_composer_v57_BULLETPROOF.html:433:        function generateViolaPart(progression, key, stopsPercent) {
quintet_composer_v57_BULLETPROOF.html:462:        function generateCelloPart(progression, key, stopsPercent) {
quintet_composer_v57_BULLETPROOF.html:619:        function exportMusicXML() {
quintet_composer_v57_BULLETPROOF.html:639:        function generateMusicXML(comp) {
quintet_composer_v57_MULTIPLE_STOPS.html:298:        function generateMultipleStop(baseNote, chord, instrument) {
quintet_composer_v57_MULTIPLE_STOPS.html:336:        function generateComposition() {
quintet_composer_v57_MULTIPLE_STOPS.html:389:        function generateProgression(measures, key, style) {
quintet_composer_v57_MULTIPLE_STOPS.html:410:        function generateChord(degree, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:424:        function generateGuitarPart(progression, style, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:496:        function generateViolin1Part(progression, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:547:        function generateViolin2Part(progression, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:593:        function generateViolaPart(progression, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:631:        function generateCelloPart(progression, key) {
quintet_composer_v57_MULTIPLE_STOPS.html:802:        function exportMusicXML() {
quintet_composer_v57_MULTIPLE_STOPS.html:817:        function generateMusicXML(comp) {
quintet_composer_v57_SIBELIUS_FIX.html:221:        function generateComposition() {
quintet_composer_v57_SIBELIUS_FIX.html:279:        function generatePart(instrument, measures, keyData, progressions, guitarStyle, style, multipleStops) {
quintet_composer_v57_SIBELIUS_FIX.html:325:        function generateChord(keyData, degree) {
quintet_composer_v57_SIBELIUS_FIX.html:333:        function generateGuitarPart(chord, style) {
quintet_composer_v57_SIBELIUS_FIX.html:380:        function generateMelody(chord, keyData) {
quintet_composer_v57_SIBELIUS_FIX.html:404:        function generateHarmony(chord, instrument) {
quintet_composer_v57_SIBELIUS_FIX.html:662:        function exportMusicXML() {
quintet_composer_v58_FAILSAFE.html:335:        // CORE FUNCTION: Generate actual musical phrases
quintet_composer_v58_FAILSAFE.html:336:        function generateMusicalPhrase(instrument, chord, keyData, phrasePosition, style) {
quintet_composer_v58_FAILSAFE.html:363:        function generateMelodicPhrase(chord, keyData, shape) {
quintet_composer_v58_FAILSAFE.html:387:        function generateGuitarAccompaniment(chord, style) {
quintet_composer_v58_FAILSAFE.html:419:        function generateHarmonyPart(chord, instrument) {
quintet_composer_v58_FAILSAFE.html:453:        function addMusicalMultipleStops(events, instrument, measureIndex, totalMeasures, stopsSetting) {
quintet_composer_v58_FAILSAFE.html:487:        function generateComposition() {
quintet_composer_v58_FAILSAFE.html:704:        function exportMusicXML() {
quintet_composer_v59_BULLETPROOF.html:273:        function generateMelody(chords, keyData, measures) {
quintet_composer_v59_BULLETPROOF.html:343:        function generateHarmony(chords, instrument, measures) {
quintet_composer_v59_BULLETPROOF.html:400:        function generateGuitarPart(chords, style, measures) {
quintet_composer_v59_BULLETPROOF.html:439:        function generateComposition() {
quintet_composer_v59_BULLETPROOF.html:656:        function exportMusicXML() {
quintet_composer_v59_BULLETPROOF_RESTORED.html:230:        function generateComposition() {
quintet_composer_v59_BULLETPROOF_RESTORED.html:291:        function generateProgression(style, measures) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:303:        function generateGuitarPart(progression, key, pattern) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:350:        function generateMelodyPart(progression, key, instrument, multipleStopsPercent) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:405:        function generateHarmonyPart(progression, key, instrument, multipleStopsPercent) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:446:        function generateBassLine(progression, key, multipleStopsPercent) {
quintet_composer_v59_BULLETPROOF_RESTORED.html:575:        function exportMusicXML() {
quintet_composer_v60_ACTUALLY_WORKING.html:328:        function generateComposition() {
quintet_composer_v60_ACTUALLY_WORKING.html:378:        function generateProgression(style, measures, key) {
quintet_composer_v60_ACTUALLY_WORKING.html:400:        function generateGuitarPart(progression, key, pattern) {
quintet_composer_v60_ACTUALLY_WORKING.html:473:        function generateViolinIPart(progression, key, complexity) {
quintet_composer_v60_ACTUALLY_WORKING.html:520:        function generateViolinIIPart(progression, key) {
quintet_composer_v60_ACTUALLY_WORKING.html:562:        function generateViolaPart(progression, key) {
quintet_composer_v60_ACTUALLY_WORKING.html:590:        function generateCelloPart(progression, key) {
quintet_composer_v60_ACTUALLY_WORKING.html:732:        function exportMusicXML() {
quintet_composer_v60_COMPOSER_PROFILES.html:548:        function generateComposerMelody(chords, keyData, measures, profile) {
quintet_composer_v60_COMPOSER_PROFILES.html:628:        function generateComposerGuitarPart(chords, profile, guitarStyle, measures) {
quintet_composer_v60_COMPOSER_PROFILES.html:686:        function buildGuitarVoicing(chord, pattern) {
quintet_composer_v60_COMPOSER_PROFILES.html:709:        function generateComposition() {
quintet_composer_v60_COMPOSER_PROFILES.html:792:        function generateHarmonyPart(chords, instrument, measures, profile) {
quintet_composer_v60_COMPOSER_PROFILES.html:1014:        function exportMusicXML() {
quintet_composer_v61_OCTAVE_FIX.html:328:        function generateComposition() {
quintet_composer_v61_OCTAVE_FIX.html:378:        function generateProgression(style, measures, key) {
quintet_composer_v61_OCTAVE_FIX.html:400:        function generateGuitarPart(progression, key, pattern) {
quintet_composer_v61_OCTAVE_FIX.html:483:        function generateViolinIPart(progression, key, complexity) {
quintet_composer_v61_OCTAVE_FIX.html:530:        function generateViolinIIPart(progression, key) {
quintet_composer_v61_OCTAVE_FIX.html:572:        function generateViolaPart(progression, key) {
quintet_composer_v61_OCTAVE_FIX.html:600:        function generateCelloPart(progression, key) {
quintet_composer_v61_OCTAVE_FIX.html:742:        function exportMusicXML() {
quintet_composer_v63_REAL_FIXES.html:545:        function generateComposition() {
quintet_composer_v63_REAL_FIXES.html:559:        function exportMusicXML() {
quintet_composer_v63_REAL_FIXES.html:566:        function generateMusicXML(data) {
quintet_composer_v64_GUITAR_FIXED.html:546:        function generateComposition() {
quintet_composer_v64_GUITAR_FIXED.html:560:        function exportMusicXML() {
quintet_composer_v64_GUITAR_FIXED.html:567:        function generateMusicXML(data) {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:545:        function generateComposition() {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:559:        function exportMusicXML() {
quintet_composer_v64_GUITAR_OCTAVE_FIXED.html:566:        function generateMusicXML(data) {
quintet_composer_v7_final.html:228:        function generateComposition() {
quintet_composer_v7_final.html:477:        function exportMusicXML() {
quintet_v63.html:132:        function generateMusic() {
quintet_v63.html:179:        function generateMelody(key, style, measure) {
quintet_v63.html:208:        function generateHarmony(key, voice, measure) {
quintet_v63.html:220:        function generateBass(key, measure) {
quintet_v63.html:232:        function generateGuitarChord(key, measure) {
quintet_v63.html:282:        function playMusic() {
quintet_v63.html:302:        function stopMusic() {
quintet_v64.html:161:        function generateComposition() {
quintet_v64.html:264:        function generateGuitarPart(chord, style) {
quintet_v64.html:322:        function generateViolin1(chord, key, measure) {
quintet_v64.html:352:        function generateViolin2(chord) {
quintet_v64.html:360:        function generateViola(chord) {
quintet_v64.html:367:        function generateCello(chord) {
quintet_v64.html:393:        function exportMusicXML() {
 
=== WORKING EXAMPLES === 
 
complete_profiles.js:1:// FINAL 3% - Chord Progressions, Velocity, and Phrases
structure_generator.js:1:// BULLETPROOF Structure Generator for Extended Compositions
bulletproof_integrated.html:6:    <title>Quintet Composer - Bulletproof Edition</title>
bulletproof_integrated.html:66:        <h1>🎼 Quintet Composer - Bulletproof Working Version</h1>
bulletproof_integrated.html:67:        <div id="status" class="status success">Ready - All exports working</div>
bulletproof_integrated.html:96:        // Include the working code from our session
quintet_composer_v13_PRODUCTION.html:6:    <title>Quintet Composer v11.0 - Bulletproof All Stops</title>
quintet_composer_v13_PRODUCTION.html:187:        <div class="version-tag">Version 11.0 - Bulletproof All Stops Types</div>
quintet_composer_v13_PRODUCTION.html:692:        // BULLETPROOF MIDI EXPORT WITH STOPS
quintet_composer_v13_PRODUCTION.html:847:        // BULLETPROOF MUSICXML EXPORT WITH STOPS
quintet_composer_v13_PRODUCTION.html:991:            console.log("=== BULLETPROOF STOPS TEST ===");
quintet_composer_v13_PRODUCTION.html:1055:            alert("All systems tested! Check console for detailed results.");
quintet_composer_v14_WORKING_BASE.html:6:    <title>Quintet Composer v7.0 - BULLETPROOF FINAL</title>
quintet_composer_v14_WORKING_BASE.html:138:            <span class="version-badge">v7.0 BULLETPROOF</span>
quintet_composer_v14_WORKING_BASE.html:206:            <div class="success">✓ BULLETPROOF Protocol active</div>
quintet_composer_v14_WORKING_BASE.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v14_WORKING_BASE.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_composer_v17_TRIAD.html:353:        // String Quintet v17 - TRIAD FOUNDATION with BULLETPROOF-9x3
quintet_composer_v17_TRIAD.html:355:        // BULLETPROOF: Initialize with failsafe defaults
quintet_composer_v17_TRIAD.html:480:        // Main generation function with BULLETPROOF error handling
quintet_composer_v17_TRIAD.html:674:        // Export MIDI with BULLETPROOF error handling
quintet_composer_v18_COMPLETE.html:793:    console.log('Features: Alto clef, all keys, mixed rhythms, working stops');
quintet_composer_v20_CORRECT_RANGES.html:33:        .bulletproof-badge {
quintet_composer_v20_CORRECT_RANGES.html:177:        <h1>🎼 String Quintet Composer <span class="bulletproof-badge">v20 CORRECT RANGES</span></h1>
quintet_composer_v20_CORRECT_RANGES.html:258:            <button onclick="generateBulletproof()">🎵 Generate Composition</button>
quintet_composer_v20_CORRECT_RANGES.html:269:    // v20 BULLETPROOF with CORRECT RANGES from research
quintet_composer_v20_CORRECT_RANGES.html:395:    // Generate composition with BULLETPROOF validation
quintet_composer_v20_CORRECT_RANGES.html:396:    function generateBulletproof() {
quintet_composer_v26_WORKING_BASE.html:6:    <title>String Quintet Composer - BULLETPROOF v25</title>
quintet_composer_v26_WORKING_BASE.html:173:        <div class="subtitle">BULLETPROOF Sibelius 25.4 Compatible - Version 25</div>
quintet_composer_v26_WORKING_BASE.html:268:        // BULLETPROOF CONFIGURATION - DO NOT CHANGE
quintet_composer_v26_WORKING_BASE.html:606:            xml += '<software>GML String Quintet Composer - Bulletproof Edition</software>\n';
quintet_composer_v26_WORKING_BASE.html:745:            console.log('String Quintet Composer v25 - BULLETPROOF Edition');
quintet_composer_v28_REALITY_FIX.html:272:        // BULLETPROOF CONFIGURATION
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:5:    <title>String Quintet Composer v31 - BULLETPROOF FAILSAFE</title>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:160:            <span class="failsafe-badge">BULLETPROOF FAILSAFE</span>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:255:        // Instrument ranges - VALIDATED AND WORKING
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:351:                const finalMidi = Math.max(range.min, Math.min(range.max, midi));
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:352:                notes.push({ midi: finalMidi, duration: durations.quarter });
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:389:                // Intentionally complex to show failsafe working
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:443:      <software>String Quintet Composer v31 BULLETPROOF</software>
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:604:                debugLog('✓ Level 1 failsafe working', 'info');
quintet_composer_v31_BULLETPROOF_FAILSAFE.html:612:                debugLog('✓ Level 2 failsafe working', 'info');
quintet_composer_v32_COMPOSER_PROFILES.html:272:        // CORE CONSTANTS - BULLETPROOF
quintet_composer_v32_COMPOSER_PROFILES.html:424:        // FAILSAFE NOTE GENERATION - Bulletproof from v31
quintet_composer_v40_WORKING.html:140:            <p>Generates ACTUAL MusicXML that works in Sibelius/Finale/MuseScore</p>
quintet_composer_v56_FINAL.html:6:    <title>String Quintet Composer v56 - FINAL WORKING</title>
quintet_composer_v56_FINAL.html:122:        <div class="version">Final Working Version - Guitar Chords Fixed</div>
quintet_composer_v56_FINAL.html:329:        // Generate guitar part - WORKING WITH CHORDS
quintet_composer_v56_FINAL.html:617:            const finalVolume = volume ? baseVolumes[instrument] * volume : baseVolumes[instrument];
quintet_composer_v56_FINAL.html:620:            gainNode.gain.linearRampToValueAtTime(finalVolume, startTime + 0.01);
quintet_composer_v56_FINAL.html:621:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.05);
quintet_composer_v57_BULLETPROOF.html:6:    <title>String Quintet Composer v57 - BULLETPROOF</title>
quintet_composer_v57_BULLETPROOF.html:118:        <div class="version">BULLETPROOF Version - Multiple Stops Working</div>
quintet_composer_v57_BULLETPROOF.html:740:            updateStatus('Ready to compose - v57 BULLETPROOF', 'complete');
quintet_composer_v57_MULTIPLE_STOPS.html:774:            const finalVolume = volume ? baseVolumes[instrument] * volume : baseVolumes[instrument];
quintet_composer_v57_MULTIPLE_STOPS.html:778:            gainNode.gain.linearRampToValueAtTime(finalVolume, startTime + 0.02);
quintet_composer_v57_MULTIPLE_STOPS.html:779:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.1);
quintet_composer_v58_FAILSAFE.html:129:            ✓ 100x Bulletproof Tested | Musical Phrase Generation | Sparse Multiple Stops
quintet_composer_v58_FAILSAFE.html:458:            const isFinalCadence = (measureIndex === totalMeasures - 1);
quintet_composer_v58_FAILSAFE.html:461:            if (isFinalCadence || (isPhrasEnd && stopsSetting === 'moderate') || (isCadence && stopsSetting === 'sparse')) {
quintet_composer_v59_BULLETPROOF.html:6:    <title>String Quintet Composer v59 - BULLETPROOF-100x3</title>
quintet_composer_v59_BULLETPROOF.html:124:        <div class="version">Version 59 - BULLETPROOF-100x3 PROTOCOL</div>
quintet_composer_v59_BULLETPROOF.html:127:            ✓ BULLETPROOF-100x3: Real Melodies | Working Progressions | Musical Rhythm
quintet_composer_v59_BULLETPROOF.html:196:        // V59 BULLETPROOF-100x3 PROTOCOL IMPLEMENTATION
quintet_composer_v59_BULLETPROOF.html:203:        // BULLETPROOF: Proper musical scales
quintet_composer_v59_BULLETPROOF.html:251:        // BULLETPROOF: Instrument ranges
quintet_composer_v59_BULLETPROOF.html:260:        // BULLETPROOF: Real chord progressions that work
quintet_composer_v59_BULLETPROOF.html:272:        // BULLETPROOF: Generate actual melodic lines with rhythm
quintet_composer_v59_BULLETPROOF.html:342:        // BULLETPROOF: Generate harmonic accompaniment
quintet_composer_v59_BULLETPROOF.html:399:        // BULLETPROOF: Generate guitar accompaniment
quintet_composer_v59_BULLETPROOF.html:438:        // BULLETPROOF: Generate complete composition
quintet_composer_v59_BULLETPROOF.html:450:                    <strong>BULLETPROOF-100x3 Generation:</strong><br>
quintet_composer_v59_BULLETPROOF.html:663:            xml += '    <creator type="composer">String Quintet Composer v59 BULLETPROOF</creator>\n';
quintet_composer_v59_BULLETPROOF.html:756:            a.download = `quintet_v59_bulletproof_${new Date().toISOString().slice(0,10)}.musicxml`;
quintet_composer_v59_BULLETPROOF_RESTORED.html:6:    <title>String Quintet Composer v59 - BULLETPROOF RESTORED</title>
quintet_composer_v59_BULLETPROOF_RESTORED.html:122:        <div class="version">Version 59 - BULLETPROOF RESTORED (Last Known Good)</div>
quintet_composer_v60_ACTUALLY_WORKING.html:6:    <title>String Quintet Composer v60 - ACTUALLY WORKING</title>
quintet_composer_v60_ACTUALLY_WORKING.html:122:        <div class="version">Version 60 - ACTUALLY WORKING (Guitar Chords Fixed, Correct Ranges)</div>
quintet_composer_v60_COMPOSER_PROFILES.html:132:        <div class="version">Version 60 - 19 COMPOSER PROFILES with BULLETPROOF-100x3</div>
quintet_composer_v60_COMPOSER_PROFILES.html:237:        // V60 BULLETPROOF-100x3: COMPOSER PROFILES INTEGRATION
quintet_composer_v60_COMPOSER_PROFILES.html:244:        // BULLETPROOF: Complete composer profiles with musical parameters
quintet_composer_v60_COMPOSER_PROFILES.html:428:        // BULLETPROOF: Guitar patterns for each style
quintet_composer_v60_COMPOSER_PROFILES.html:446:        // BULLETPROOF: Scale definitions with modes
quintet_composer_v60_COMPOSER_PROFILES.html:528:        // BULLETPROOF: Instrument ranges
quintet_composer_v60_COMPOSER_PROFILES.html:547:        // BULLETPROOF: Generate melody based on composer style
quintet_composer_v60_COMPOSER_PROFILES.html:627:        // BULLETPROOF: Generate guitar part based on composer style
quintet_composer_v60_COMPOSER_PROFILES.html:685:        // BULLETPROOF: Build guitar voicing with proper positions
quintet_composer_v60_COMPOSER_PROFILES.html:708:        // BULLETPROOF: Main composition generation
quintet_composer_v60_COMPOSER_PROFILES.html:723:                    <strong>BULLETPROOF-100x3 Composer Generation:</strong><br>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:6:    <title>Quintet Composer v61 - SIBELIUS BULLETPROOF</title>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:135:        <h1>🎼 Quintet Composer v61 - SIBELIUS BULLETPROOF 🎻</h1>
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:225:        // BULLETPROOF-100x3: Every function has error handling, validation, and fallbacks
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:239:                // BULLETPROOF: Each composer profile thoroughly tested for Sibelius compatibility
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:474:            // BULLETPROOF: Safe XML escaping function
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:486:            // BULLETPROOF: Validate all parameters before generation
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:502:                    // BULLETPROOF: Validate before generating
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:512:                    // BULLETPROOF: Initialize composition structure
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:545:                // BULLETPROOF: Simple, safe generation for each part
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:564:                // BULLETPROOF: Return scale notes for the key
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:581:                // BULLETPROOF: Get chord notes safely
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:594:                // BULLETPROOF: Map chord symbols to scale degrees
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:612:                // BULLETPROOF: Generate melodic line based on profile
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:630:                // BULLETPROOF: Generate harmony part
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:640:                // BULLETPROOF: Generate bass line
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:649:                // BULLETPROOF: Generate guitar accompaniment
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:665:                    // BULLETPROOF: Create XML with proper escaping
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:681:                    xml += '      <software>Quintet Composer v61 SIBELIUS BULLETPROOF</software>\n';
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:761:                    // BULLETPROOF: Download with proper encoding
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:778:                // BULLETPROOF: Convert note to MusicXML safely
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:805:                // BULLETPROOF: Map duration to note type
quintet_composer_v61_SIBELIUS_BULLETPROOF.html:816:                // BULLETPROOF: Calculate and display statistics
quintet_composer_v64_GUITAR_FIXED.html:6:    <title>Quintet Composer v64 - FINAL FIX</title>
quintet_composer_v64_GUITAR_FIXED.html:90:        <div class="version">v64 - FINAL FIX (Guitar octave DEFINITELY -1)</div>
quintet_composer_v64_GUITAR_FIXED.html:497:                let output = "🎼 COMPOSITION GENERATED - v64 FINAL\n";
quintet_composer_v64_GUITAR_FIXED.html:528:                output += "\n✅ v64 FINAL FIXES:\n";
quintet_composer_v7_final.html:6:    <title>Quintet Composer v7.0 - BULLETPROOF FINAL</title>
quintet_composer_v7_final.html:138:            <span class="version-badge">v7.0 BULLETPROOF</span>
quintet_composer_v7_final.html:206:            <div class="success">✓ BULLETPROOF Protocol active</div>
quintet_composer_v7_final.html:619:                            var finalRest = measureDuration - currentBeat;
quintet_composer_v7_final.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet_v56_test.html:4:    <title>Quintet v56 - WORKING</title>
quintet_v62_real_music.html:6:    <title>Quintet Composer v62 - BULLETPROOF REAL MUSIC</title>
quintet_v62_real_music.html:124:        <h1>🎼 Quintet Composer v62 - BULLETPROOF REAL MUSIC 🎻</h1>
quintet_v62_real_music.html:226:        // v62: BULLETPROOF-100x REAL MUSIC GENERATION
quintet_v62_real_music.html:238:                // BULLETPROOF: Complete musical system initialization
quintet_v62_real_music.html:314:            // BULLETPROOF: Real melodic phrase generation
quintet_v62_real_music.html:368:            // BULLETPROOF: Style-specific rhythm patterns
quintet_v62_real_music.html:385:            // BULLETPROOF: Guitar pattern generators
quintet_v62_real_music.html:514:            // BULLETPROOF: Get articulation based on style and position
quintet_v62_real_music.html:530:            // BULLETPROOF: Main generation function
quintet_v62_real_music.html:595:            // BULLETPROOF: Generate violin melody with style
quintet_v62_real_music.html:599:                const isFinalCadence = measure === totalMeasures - 1;
quintet_v62_real_music.html:625:            // BULLETPROOF: Generate inner voice with voice leading
quintet_v62_real_music.html:654:            // BULLETPROOF: Generate bass line
quintet_v62_real_music.html:689:            // BULLETPROOF: Determine when to add multiple stops
quintet_v62_real_music.html:702:            // BULLETPROOF: Parse chord symbols
quintet_v62_real_music.html:724:            // BULLETPROOF: Get scale for composer
quintet_v62_real_music.html:741:            // BULLETPROOF: Get key notes
quintet_v62_real_music.html:758:            // BULLETPROOF: Voice leading logic
quintet_v62_real_music.html:769:            // BULLETPROOF: Convert note number to name
quintet_v62_real_music.html:775:            // BULLETPROOF: Convert note name to number
quintet_v62_real_music.html:785:            // BULLETPROOF: Export to MusicXML
quintet_v62_real_music.html:802:                xml += '      <software>Quintet Composer v62 BULLETPROOF</software>\n';
quintet_v62_real_music.html:880:            // BULLETPROOF: Convert note to XML
quintet_v62_real_music.html:930:            // BULLETPROOF: Get clef for instrument
quintet_v62_real_music.html:942:            // BULLETPROOF: Duration to note type
quintet_v62_real_music.html:954:            // BULLETPROOF: XML escaping
quintet_v63.html:6:    <title>Quintet Composer v63 - Working Version</title>
quintet_v63.html:80:        <h1>🎼 Quintet Composer v63 - Working Version 🎻</h1>
quintet_v63.html:131:        // TESTED: Main generation function
quintet_v63.html:178:        // TESTED: Generate melody
quintet_v63.html:207:        // TESTED: Generate harmony
quintet_v63.html:219:        // TESTED: Generate bass
quintet_v63.html:231:        // TESTED: Generate guitar chord
quintet_v63.html:243:        // TESTED: Get chord progression
quintet_v63.html:281:        // TESTED: Play music
quintet_v63.html:301:        // TESTED: Stop music
quintet_v63.html:314:        // TESTED: Export to MusicXML
quintet_v63.html:424:        // TESTED: Get duration type
quintet-rhythm-analysis.txt:13:bulletproof_integrated.html
quintet-rhythm-analysis.txt:18:quintet_composer_v14_WORKING_BASE.html
quintet-rhythm-analysis.txt:26:quintet_composer_v26_WORKING_BASE.html
quintet-rhythm-analysis.txt:29:quintet_composer_v31_BULLETPROOF_FAILSAFE.html
quintet-rhythm-analysis.txt:31:quintet_composer_v40_WORKING.html
quintet-rhythm-analysis.txt:35:quintet_composer_v56_FINAL.html
quintet-rhythm-analysis.txt:36:quintet_composer_v57_BULLETPROOF.html
quintet-rhythm-analysis.txt:40:quintet_composer_v59_BULLETPROOF.html
quintet-rhythm-analysis.txt:41:quintet_composer_v59_BULLETPROOF_RESTORED.html
quintet-rhythm-analysis.txt:42:quintet_composer_v60_ACTUALLY_WORKING.html
quintet-rhythm-analysis.txt:45:quintet_composer_v61_SIBELIUS_BULLETPROOF.html
quintet-rhythm-analysis.txt:49:quintet_composer_v7_final.html
quintet-rhythm-analysis.txt:67:bulletproof_integrated.html:216:    <!-- <script src="rhythm_patterns.js"></script> -->
quintet-rhythm-analysis.txt:71:quintet_composer_v14_WORKING_BASE.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet-rhythm-analysis.txt:72:quintet_composer_v14_WORKING_BASE.html:168:                    <option value="complex">Complex (Mixed rhythms)</option>
quintet-rhythm-analysis.txt:73:quintet_composer_v14_WORKING_BASE.html:292:                        // Generate rhythm pattern
quintet-rhythm-analysis.txt:74:quintet_composer_v14_WORKING_BASE.html:304:                            // Complex rhythm - different pattern for each instrument to avoid unison
quintet-rhythm-analysis.txt:87:quintet_composer_v18_COMPLETE.html:793:    console.log('Features: Alto clef, all keys, mixed rhythms, working stops');
quintet-rhythm-analysis.txt:123:quintet_composer_v26_WORKING_BASE.html:238:                    <input type="checkbox" id="mixedRhythms"> Mixed Rhythms
quintet-rhythm-analysis.txt:124:quintet_composer_v26_WORKING_BASE.html:395:            const mixedRhythms = document.getElementById('mixedRhythms').checked;
quintet-rhythm-analysis.txt:125:quintet_composer_v26_WORKING_BASE.html:433:                    // Choose rhythm - actually use mixed rhythms when enabled!
quintet-rhythm-analysis.txt:126:quintet_composer_v26_WORKING_BASE.html:436:                    if (mixedRhythms) {
quintet-rhythm-analysis.txt:127:quintet_composer_v26_WORKING_BASE.html:437:                        // Mixed rhythm mode - use variety
quintet-rhythm-analysis.txt:128:quintet_composer_v26_WORKING_BASE.html:438:                        const rhythmChoice = Math.random();
quintet-rhythm-analysis.txt:129:quintet_composer_v26_WORKING_BASE.html:439:                        if (rhythmChoice < 0.15 && remainingDuration >= DURATIONS.whole) {
quintet-rhythm-analysis.txt:130:quintet_composer_v26_WORKING_BASE.html:442:                        } else if (rhythmChoice < 0.35 && remainingDuration >= DURATIONS.half) {
quintet-rhythm-analysis.txt:131:quintet_composer_v26_WORKING_BASE.html:445:                        } else if (rhythmChoice < 0.70 && remainingDuration >= DURATIONS.quarter) {
quintet-rhythm-analysis.txt:143:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:237:            <label><input type="checkbox" id="mixedRhythms"> Mixed Rhythms</label>
quintet-rhythm-analysis.txt:161:quintet_composer_v40_WORKING.html:396:                // Beethoven-style: dramatic rhythms
quintet-rhythm-analysis.txt:195:quintet_composer_v56_FINAL.html:416:                const rhythms = complexity === 'complex' ? 
quintet-rhythm-analysis.txt:196:quintet_composer_v56_FINAL.html:421:                for (const duration of rhythms) {
quintet-rhythm-analysis.txt:203:quintet_composer_v59_BULLETPROOF.html:127:            ✓ BULLETPROOF-100x3: Real Melodies | Working Progressions | Musical Rhythm
quintet-rhythm-analysis.txt:204:quintet_composer_v59_BULLETPROOF.html:272:        // BULLETPROOF: Generate actual melodic lines with rhythm
quintet-rhythm-analysis.txt:205:quintet_composer_v59_BULLETPROOF.html:280:                // Create varied rhythm patterns
quintet-rhythm-analysis.txt:206:quintet_composer_v59_BULLETPROOF.html:281:                const rhythmPatterns = [
quintet-rhythm-analysis.txt:207:quintet_composer_v59_BULLETPROOF.html:289:                // Select rhythm based on phrase position
quintet-rhythm-analysis.txt:208:quintet_composer_v59_BULLETPROOF.html:296:                    pattern = rhythmPatterns[0];
quintet-rhythm-analysis.txt:209:quintet_composer_v59_BULLETPROOF.html:299:                    pattern = rhythmPatterns[Math.floor(Math.random() * 4)];
quintet-rhythm-analysis.txt:210:quintet_composer_v59_BULLETPROOF.html:379:                // Vary rhythm occasionally
quintet-rhythm-analysis.txt:211:quintet_composer_v59_BULLETPROOF.html:556:            output += '<p><strong>✓</strong> Varied rhythms (not just whole notes)</p>';
quintet-rhythm-analysis.txt:212:quintet_composer_v59_BULLETPROOF_RESTORED.html:360:                const rhythms = [2, 1, 1, 0.5, 0.5, 1];
quintet-rhythm-analysis.txt:213:quintet_composer_v59_BULLETPROOF_RESTORED.html:365:                    const rhythm = rhythms[Math.floor(Math.random() * rhythms.length)];
quintet-rhythm-analysis.txt:214:quintet_composer_v59_BULLETPROOF_RESTORED.html:366:                    if (beatCount + rhythm > 4) break;
quintet-rhythm-analysis.txt:215:quintet_composer_v59_BULLETPROOF_RESTORED.html:383:                        duration: rhythm,
quintet-rhythm-analysis.txt:216:quintet_composer_v59_BULLETPROOF_RESTORED.html:395:                    beatCount += rhythm;
quintet-rhythm-analysis.txt:217:quintet_composer_v60_ACTUALLY_WORKING.html:484:                    const rhythmOptions = complexity === 'simple' ? [2, 1, 1] : 
quintet-rhythm-analysis.txt:218:quintet_composer_v60_ACTUALLY_WORKING.html:487:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet-rhythm-analysis.txt:219:quintet_composer_v60_ACTUALLY_WORKING.html:528:                // Harmony part - simpler rhythms
quintet-rhythm-analysis.txt:260:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:155:                    <option value="stravinsky">Stravinsky - Rhythmic Innovation</option>
quintet-rhythm-analysis.txt:261:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:245:                        rhythm: 'balanced',
quintet-rhythm-analysis.txt:262:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:260:                        rhythm: 'flowing',
quintet-rhythm-analysis.txt:263:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:275:                        rhythm: 'driving',
quintet-rhythm-analysis.txt:264:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:290:                        rhythm: 'complex',
quintet-rhythm-analysis.txt:265:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:305:                        rhythm: 'fluid',
quintet-rhythm-analysis.txt:266:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:321:                        rhythm: 'precise',
quintet-rhythm-analysis.txt:267:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:332:                        rhythm: 'irregular',
quintet-rhythm-analysis.txt:268:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:343:                        rhythm: 'constant',
quintet-rhythm-analysis.txt:269:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:354:                        rhythm: 'rubato',
quintet-rhythm-analysis.txt:270:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:365:                        rhythm: 'dramatic',
quintet-rhythm-analysis.txt:271:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:376:                        rhythm: 'flowing',
quintet-rhythm-analysis.txt:272:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:387:                        rhythm: 'folk',
quintet-rhythm-analysis.txt:273:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:398:                        rhythm: 'lyrical',
quintet-rhythm-analysis.txt:274:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:409:                        rhythm: 'march',
quintet-rhythm-analysis.txt:275:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:420:                        rhythm: 'witty',
quintet-rhythm-analysis.txt:276:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:431:                        rhythm: 'complex',
quintet-rhythm-analysis.txt:277:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:442:                        rhythm: 'repetitive',
quintet-rhythm-analysis.txt:278:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:453:                        rhythm: 'simple',
quintet-rhythm-analysis.txt:279:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:464:                        rhythm: 'fluid',
quintet-rhythm-analysis.txt:280:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:614:                const rhythms = profile.rhythm === 'complex' ? [1, 1, 2] : [2, 2];
quintet-rhythm-analysis.txt:281:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:616:                rhythms.forEach(duration => {
quintet-rhythm-analysis.txt:282:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:842:                    Harmony: ${profile.harmony} | Rhythm: ${profile.rhythm} | Texture: ${profile.texture}<br>
quintet-rhythm-analysis.txt:298:quintet_composer_v7_final.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet-rhythm-analysis.txt:299:quintet_composer_v7_final.html:168:                    <option value="complex">Complex (Mixed rhythms)</option>
quintet-rhythm-analysis.txt:300:quintet_composer_v7_final.html:292:                        // Generate rhythm pattern
quintet-rhythm-analysis.txt:301:quintet_composer_v7_final.html:304:                            // Complex rhythm - different pattern for each instrument to avoid unison
quintet-rhythm-analysis.txt:305:quintet_v62_real_music.html:368:            // BULLETPROOF: Style-specific rhythm patterns
quintet-rhythm-analysis.txt:319:bulletproof_integrated.html:118:                    let measureDuration = 0;
quintet-rhythm-analysis.txt:320:bulletproof_integrated.html:119:                    while (measureDuration < 4) {
quintet-rhythm-analysis.txt:321:bulletproof_integrated.html:120:                        let duration = complexity === 'simple' ? 1 : 
quintet-rhythm-analysis.txt:322:bulletproof_integrated.html:123:                        duration = Math.min(duration, 4 - measureDuration);
quintet-rhythm-analysis.txt:323:bulletproof_integrated.html:131:                            duration: duration
quintet-rhythm-analysis.txt:324:bulletproof_integrated.html:133:                        measureDuration += duration;
quintet-rhythm-analysis.txt:325:bulletproof_integrated.html:144:            let xml = '<?xml version="1.0" encoding="UTF-8"?>\n<score-partwise version="3.1">\n<part-list>\n';
quintet-rhythm-analysis.txt:326:bulletproof_integrated.html:154:                    if (m === 1) xml += '<attributes><divisions>4</divisions><key><fifths>0</fifths></key><time><beats>4</beats><beat-type>4</beat-type></time></attributes>\n';
quintet-rhythm-analysis.txt:327:bulletproof_integrated.html:162:                        xml += `<octave>${oct}</octave></pitch><duration>${note.duration*4}</duration>`;
quintet-rhythm-analysis.txt:328:bulletproof_integrated.html:163:                        xml += `<type>${note.duration===4?'whole':note.duration===2?'half':note.duration===1?'quarter':note.duration===0.5?'eighth':'16th'}</type></note>\n`;
quintet-rhythm-analysis.txt:329:bulletproof_integrated.html:169:            xml += '</score-partwise>';
quintet-rhythm-analysis.txt:330:bulletproof_integrated.html:195:                    const ticks = Math.round(n.duration * 480);
quintet-rhythm-analysis.txt:361:quintet_composer_v14_WORKING_BASE.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:362:quintet_composer_v14_WORKING_BASE.html:265:                        function addNote(startBeat, duration, vel) {
quintet-rhythm-analysis.txt:363:quintet_composer_v14_WORKING_BASE.html:285:                                start: (m * divisions * 4) + startBeat,
quintet-rhythm-analysis.txt:364:quintet_composer_v14_WORKING_BASE.html:286:                                duration: duration,
quintet-rhythm-analysis.txt:365:quintet_composer_v14_WORKING_BASE.html:296:                                addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:366:quintet_composer_v14_WORKING_BASE.html:300:                            addNote(0, divisions * 2, velocity);
quintet-rhythm-analysis.txt:367:quintet_composer_v14_WORKING_BASE.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet-rhythm-analysis.txt:368:quintet_composer_v14_WORKING_BASE.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet-rhythm-analysis.txt:369:quintet_composer_v14_WORKING_BASE.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:370:quintet_composer_v14_WORKING_BASE.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:371:quintet_composer_v14_WORKING_BASE.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:372:quintet_composer_v14_WORKING_BASE.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet-rhythm-analysis.txt:373:quintet_composer_v14_WORKING_BASE.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet-rhythm-analysis.txt:374:quintet_composer_v14_WORKING_BASE.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:375:quintet_composer_v14_WORKING_BASE.html:324:                                addNote(0, divisions, velocity);
quintet-rhythm-analysis.txt:376:quintet_composer_v14_WORKING_BASE.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:377:quintet_composer_v14_WORKING_BASE.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:378:quintet_composer_v14_WORKING_BASE.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet-rhythm-analysis.txt:379:quintet_composer_v14_WORKING_BASE.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:380:quintet_composer_v14_WORKING_BASE.html:439:                        track.push.apply(track, varLength(duration));
quintet-rhythm-analysis.txt:381:quintet_composer_v14_WORKING_BASE.html:444:                        lastTick = startTick + duration;
quintet-rhythm-analysis.txt:382:quintet_composer_v14_WORKING_BASE.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:383:quintet_composer_v14_WORKING_BASE.html:489:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:384:quintet_composer_v14_WORKING_BASE.html:490:                xml += '<score-partwise version="3.0">\n';
quintet-rhythm-analysis.txt:385:quintet_composer_v14_WORKING_BASE.html:520:                            xml += '        <divisions>' + divisions + '</divisions>\n';
quintet-rhythm-analysis.txt:386:quintet_composer_v14_WORKING_BASE.html:554:                        var measureDuration = divisions * 4;
quintet-rhythm-analysis.txt:387:quintet_composer_v14_WORKING_BASE.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet-rhythm-analysis.txt:388:quintet_composer_v14_WORKING_BASE.html:562:                                var restDuration = noteStart - currentBeat;
quintet-rhythm-analysis.txt:389:quintet_composer_v14_WORKING_BASE.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet-rhythm-analysis.txt:390:quintet_composer_v14_WORKING_BASE.html:587:                            var duration = Math.max(1, note.duration);
quintet-rhythm-analysis.txt:391:quintet_composer_v14_WORKING_BASE.html:588:                            xml += '        <duration>' + duration + '</duration>\n';
quintet-rhythm-analysis.txt:392:quintet_composer_v14_WORKING_BASE.html:593:                            if (duration >= divisions * 4) {
quintet-rhythm-analysis.txt:393:quintet_composer_v14_WORKING_BASE.html:595:                            } else if (duration >= divisions * 2) {
quintet-rhythm-analysis.txt:394:quintet_composer_v14_WORKING_BASE.html:597:                            } else if (duration === divisions * 1.5) {
quintet-rhythm-analysis.txt:395:quintet_composer_v14_WORKING_BASE.html:600:                            } else if (duration >= divisions) {
quintet-rhythm-analysis.txt:396:quintet_composer_v14_WORKING_BASE.html:602:                            } else if (duration >= divisions * 0.5) {
quintet-rhythm-analysis.txt:397:quintet_composer_v14_WORKING_BASE.html:614:                            currentBeat = noteStart + note.duration;
quintet-rhythm-analysis.txt:398:quintet_composer_v14_WORKING_BASE.html:618:                        if (currentBeat < measureDuration) {
quintet-rhythm-analysis.txt:399:quintet_composer_v14_WORKING_BASE.html:619:                            var finalRest = measureDuration - currentBeat;
quintet-rhythm-analysis.txt:400:quintet_composer_v14_WORKING_BASE.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet-rhythm-analysis.txt:401:quintet_composer_v14_WORKING_BASE.html:632:                xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:538:quintet_composer_v26_WORKING_BASE.html:269:        const DIVISIONS = 256; // Sibelius 25.4 standard - NEVER change this
quintet-rhythm-analysis.txt:539:quintet_composer_v26_WORKING_BASE.html:285:        // Duration calculations - EXACT VALUES FOR SIBELIUS
quintet-rhythm-analysis.txt:540:quintet_composer_v26_WORKING_BASE.html:286:        const DURATIONS = {
quintet-rhythm-analysis.txt:541:quintet_composer_v26_WORKING_BASE.html:287:            'whole': DIVISIONS * 4,      // 1024
quintet-rhythm-analysis.txt:542:quintet_composer_v26_WORKING_BASE.html:288:            'half': DIVISIONS * 2,       // 512
quintet-rhythm-analysis.txt:543:quintet_composer_v26_WORKING_BASE.html:289:            'quarter': DIVISIONS,        // 256
quintet-rhythm-analysis.txt:544:quintet_composer_v26_WORKING_BASE.html:290:            'eighth': DIVISIONS / 2,     // 128
quintet-rhythm-analysis.txt:545:quintet_composer_v26_WORKING_BASE.html:291:            'sixteenth': DIVISIONS / 4   // 64
quintet-rhythm-analysis.txt:546:quintet_composer_v26_WORKING_BASE.html:310:                debugLog(`Divisions: ${DIVISIONS}`);
quintet-rhythm-analysis.txt:547:quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet-rhythm-analysis.txt:548:quintet_composer_v26_WORKING_BASE.html:375:            xml += `<duration>${duration}</duration>`;
quintet-rhythm-analysis.txt:549:quintet_composer_v26_WORKING_BASE.html:426:                xml += generateNoteXML(testMidi, DURATIONS.whole, 'whole', false);
quintet-rhythm-analysis.txt:550:quintet_composer_v26_WORKING_BASE.html:430:                let remainingDuration = DIVISIONS * 4; // Full measure in 4/4
quintet-rhythm-analysis.txt:551:quintet_composer_v26_WORKING_BASE.html:432:                while (remainingDuration > 0) {
quintet-rhythm-analysis.txt:552:quintet_composer_v26_WORKING_BASE.html:434:                    let duration, noteType;
quintet-rhythm-analysis.txt:553:quintet_composer_v26_WORKING_BASE.html:439:                        if (rhythmChoice < 0.15 && remainingDuration >= DURATIONS.whole) {
quintet-rhythm-analysis.txt:554:quintet_composer_v26_WORKING_BASE.html:440:                            duration = DURATIONS.whole;
quintet-rhythm-analysis.txt:555:quintet_composer_v26_WORKING_BASE.html:442:                        } else if (rhythmChoice < 0.35 && remainingDuration >= DURATIONS.half) {
quintet-rhythm-analysis.txt:556:quintet_composer_v26_WORKING_BASE.html:443:                            duration = DURATIONS.half;
quintet-rhythm-analysis.txt:557:quintet_composer_v26_WORKING_BASE.html:445:                        } else if (rhythmChoice < 0.70 && remainingDuration >= DURATIONS.quarter) {
quintet-rhythm-analysis.txt:558:quintet_composer_v26_WORKING_BASE.html:446:                            duration = DURATIONS.quarter;
quintet-rhythm-analysis.txt:559:quintet_composer_v26_WORKING_BASE.html:448:                        } else if (remainingDuration >= DURATIONS.eighth) {
quintet-rhythm-analysis.txt:560:quintet_composer_v26_WORKING_BASE.html:449:                            duration = DURATIONS.eighth;
quintet-rhythm-analysis.txt:561:quintet_composer_v26_WORKING_BASE.html:453:                            duration = remainingDuration;
quintet-rhythm-analysis.txt:562:quintet_composer_v26_WORKING_BASE.html:454:                            if (duration >= DURATIONS.quarter) {
quintet-rhythm-analysis.txt:563:quintet_composer_v26_WORKING_BASE.html:456:                            } else if (duration >= DURATIONS.eighth) {
quintet-rhythm-analysis.txt:564:quintet_composer_v26_WORKING_BASE.html:464:                        if (remainingDuration >= DURATIONS.quarter) {
quintet-rhythm-analysis.txt:565:quintet_composer_v26_WORKING_BASE.html:465:                            duration = DURATIONS.quarter;
quintet-rhythm-analysis.txt:566:quintet_composer_v26_WORKING_BASE.html:468:                            duration = remainingDuration;
quintet-rhythm-analysis.txt:567:quintet_composer_v26_WORKING_BASE.html:474:                    if (duration > remainingDuration) {
quintet-rhythm-analysis.txt:568:quintet_composer_v26_WORKING_BASE.html:475:                        duration = remainingDuration;
quintet-rhythm-analysis.txt:569:quintet_composer_v26_WORKING_BASE.html:476:                        // Determine correct note type for remaining duration
quintet-rhythm-analysis.txt:570:quintet_composer_v26_WORKING_BASE.html:477:                        if (duration === DURATIONS.whole) noteType = 'whole';
quintet-rhythm-analysis.txt:571:quintet_composer_v26_WORKING_BASE.html:478:                        else if (duration === DURATIONS.half) noteType = 'half';
quintet-rhythm-analysis.txt:572:quintet_composer_v26_WORKING_BASE.html:479:                        else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet-rhythm-analysis.txt:573:quintet_composer_v26_WORKING_BASE.html:480:                        else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet-rhythm-analysis.txt:574:quintet_composer_v26_WORKING_BASE.html:499:                    xml += generateNoteXML(midi, duration, noteType, false, articulation);
quintet-rhythm-analysis.txt:575:quintet_composer_v26_WORKING_BASE.html:506:                        xml += generateNoteXML(midi2, duration, noteType, true, articulation);
quintet-rhythm-analysis.txt:576:quintet_composer_v26_WORKING_BASE.html:509:                    remainingDuration -= duration;
quintet-rhythm-analysis.txt:577:quintet_composer_v26_WORKING_BASE.html:522:            xml += `<divisions>${DIVISIONS}</divisions>`;
quintet-rhythm-analysis.txt:578:quintet_composer_v26_WORKING_BASE.html:596:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:579:quintet_composer_v26_WORKING_BASE.html:597:            xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:580:quintet_composer_v26_WORKING_BASE.html:631:            xml += '</score-partwise>';
quintet-rhythm-analysis.txt:581:quintet_composer_v26_WORKING_BASE.html:690:                    test: () => currentXML.includes('<!DOCTYPE score-partwise'),
quintet-rhythm-analysis.txt:582:quintet_composer_v26_WORKING_BASE.html:694:                    name: 'Divisions Setting',
quintet-rhythm-analysis.txt:583:quintet_composer_v26_WORKING_BASE.html:695:                    test: () => currentXML.includes(`<divisions>${DIVISIONS}</divisions>`),
quintet-rhythm-analysis.txt:584:quintet_composer_v26_WORKING_BASE.html:696:                    message: `Divisions set to ${DIVISIONS} (Sibelius standard)`
quintet-rhythm-analysis.txt:585:quintet_composer_v26_WORKING_BASE.html:710:                    test: () => currentXML.includes('<pitch>') && currentXML.includes('<duration>'),
quintet-rhythm-analysis.txt:586:quintet_composer_v26_WORKING_BASE.html:711:                    message: 'Notes have pitch and duration'
quintet-rhythm-analysis.txt:587:quintet_composer_v26_WORKING_BASE.html:746:            console.log(`Divisions: ${DIVISIONS}`);
quintet-rhythm-analysis.txt:641:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:251:        const DIVISIONS = 256;
quintet-rhythm-analysis.txt:642:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:264:        // Duration values
quintet-rhythm-analysis.txt:643:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:265:        const durations = {
quintet-rhythm-analysis.txt:644:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:321:                    { midi: midPoint, duration: durations.quarter },
quintet-rhythm-analysis.txt:645:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:322:                    { midi: midPoint + 2, duration: durations.quarter },
quintet-rhythm-analysis.txt:646:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:323:                    { midi: midPoint - 1, duration: durations.quarter },
quintet-rhythm-analysis.txt:647:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:324:                    { midi: midPoint, duration: durations.quarter }
quintet-rhythm-analysis.txt:648:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:331:                notes = [{ midi: 60, duration: durations.whole }]; // Middle C
quintet-rhythm-analysis.txt:649:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:352:                notes.push({ midi: finalMidi, duration: durations.quarter });
quintet-rhythm-analysis.txt:650:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:371:                        notes.push({ midi: Math.min(range.max, midi), duration: durations.eighth });
quintet-rhythm-analysis.txt:651:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:424:        function generateMusicXML() {
quintet-rhythm-analysis.txt:652:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:436:<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" 
quintet-rhythm-analysis.txt:653:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:438:<score-partwise version="3.1">
quintet-rhythm-analysis.txt:654:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:476:        <divisions>${DIVISIONS}</divisions>
quintet-rhythm-analysis.txt:655:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:511:        <duration>${noteData.duration}</duration>
quintet-rhythm-analysis.txt:656:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:512:        <type>${getDurationType(noteData.duration)}</type>
quintet-rhythm-analysis.txt:657:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:526:</score-partwise>`;
quintet-rhythm-analysis.txt:658:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:539:        function getDurationType(duration) {
quintet-rhythm-analysis.txt:659:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:540:            if (duration >= 1024) return 'whole';
quintet-rhythm-analysis.txt:660:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:541:            if (duration >= 512) return 'half';
quintet-rhythm-analysis.txt:661:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:542:            if (duration >= 256) return 'quarter';
quintet-rhythm-analysis.txt:662:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:543:            if (duration >= 128) return 'eighth';
quintet-rhythm-analysis.txt:663:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:563:                const musicXML = generateMusicXML();
quintet-rhythm-analysis.txt:698:quintet_composer_v40_WORKING.html:217:            document.getElementById('generateBtn').addEventListener('click', generateMusicXML);
quintet-rhythm-analysis.txt:699:quintet_composer_v40_WORKING.html:229:        function generateMusicXML() {
quintet-rhythm-analysis.txt:700:quintet_composer_v40_WORKING.html:236:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:701:quintet_composer_v40_WORKING.html:237:            xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:702:quintet_composer_v40_WORKING.html:278:                        xml += '        <divisions>4</divisions>\n'; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:703:quintet_composer_v40_WORKING.html:332:                        xml += `        <duration>${note.duration}</duration>\n`; // Duration in divisions
quintet-rhythm-analysis.txt:704:quintet_composer_v40_WORKING.html:347:            xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:705:quintet_composer_v40_WORKING.html:385:                        duration: 2, // eighth note = 2 divisions
quintet-rhythm-analysis.txt:706:quintet_composer_v40_WORKING.html:391:                notes.push({ step: 'C', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:707:quintet_composer_v40_WORKING.html:392:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:708:quintet_composer_v40_WORKING.html:393:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:709:quintet_composer_v40_WORKING.html:394:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:710:quintet_composer_v40_WORKING.html:397:                notes.push({ step: 'C', octave: baseOctave, duration: 8, type: 'half' });
quintet-rhythm-analysis.txt:711:quintet_composer_v40_WORKING.html:398:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:712:quintet_composer_v40_WORKING.html:399:                notes.push({ step: 'C', octave: baseOctave + 1, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:713:quintet_composer_v40_WORKING.html:402:                notes.push({ step: 'E', octave: baseOctave, duration: 6, type: 'quarter', dot: true });
quintet-rhythm-analysis.txt:714:quintet_composer_v40_WORKING.html:403:                notes.push({ step: 'F', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:715:quintet_composer_v40_WORKING.html:404:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:716:quintet_composer_v40_WORKING.html:405:                notes.push({ step: 'A', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:717:quintet_composer_v40_WORKING.html:409:                    notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:718:quintet_composer_v40_WORKING.html:410:                    notes.push({ step: 'E', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:719:quintet_composer_v40_WORKING.html:414:                notes.push({ step: 'C', octave: baseOctave, duration: 16, type: 'whole' });
quintet-rhythm-analysis.txt:720:quintet_composer_v40_WORKING.html:417:                notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:721:quintet_composer_v40_WORKING.html:418:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:722:quintet_composer_v40_WORKING.html:419:                notes.push({ step: 'G', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:723:quintet_composer_v40_WORKING.html:420:                notes.push({ step: 'B', octave: baseOctave, duration: 8, type: 'half' });
quintet-rhythm-analysis.txt:818:quintet_composer_v56_FINAL.html:350:                            duration: 1,
quintet-rhythm-analysis.txt:819:quintet_composer_v56_FINAL.html:365:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet-rhythm-analysis.txt:820:quintet_composer_v56_FINAL.html:366:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet-rhythm-analysis.txt:821:quintet_composer_v56_FINAL.html:377:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet-rhythm-analysis.txt:822:quintet_composer_v56_FINAL.html:394:                            duration: 0.5,
quintet-rhythm-analysis.txt:823:quintet_composer_v56_FINAL.html:421:                for (const duration of rhythms) {
quintet-rhythm-analysis.txt:824:quintet_composer_v56_FINAL.html:441:                        duration: duration,
quintet-rhythm-analysis.txt:825:quintet_composer_v56_FINAL.html:445:                    beatCount += duration;
quintet-rhythm-analysis.txt:826:quintet_composer_v56_FINAL.html:466:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:827:quintet_composer_v56_FINAL.html:468:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:828:quintet_composer_v56_FINAL.html:469:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:829:quintet_composer_v56_FINAL.html:488:                    [{ note: notes[0], duration: 2 }, { note: notes[1], duration: 2 }] :
quintet-rhythm-analysis.txt:830:quintet_composer_v56_FINAL.html:489:                    [{ note: notes[1], duration: 4 }];
quintet-rhythm-analysis.txt:831:quintet_composer_v56_FINAL.html:494:                        duration: p.duration,
quintet-rhythm-analysis.txt:832:quintet_composer_v56_FINAL.html:517:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:833:quintet_composer_v56_FINAL.html:518:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:834:quintet_composer_v56_FINAL.html:520:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:835:quintet_composer_v56_FINAL.html:554:            const beatDuration = 60 / tempo;
quintet-rhythm-analysis.txt:836:quintet_composer_v56_FINAL.html:568:                                    playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume);
quintet-rhythm-analysis.txt:837:quintet_composer_v56_FINAL.html:572:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet-rhythm-analysis.txt:838:quintet_composer_v56_FINAL.html:576:                        beatTime += event.duration * beatDuration;
quintet-rhythm-analysis.txt:839:quintet_composer_v56_FINAL.html:579:                    measureTime += 4 * beatDuration;
quintet-rhythm-analysis.txt:840:quintet_composer_v56_FINAL.html:583:            const totalDuration = composition.measures * 4 * beatDuration;
quintet-rhythm-analysis.txt:841:quintet_composer_v56_FINAL.html:589:            }, totalDuration * 1000);
quintet-rhythm-analysis.txt:842:quintet_composer_v56_FINAL.html:594:        function playNote(midi, startTime, duration, instrument, volume) {
quintet-rhythm-analysis.txt:843:quintet_composer_v56_FINAL.html:621:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.05);
quintet-rhythm-analysis.txt:844:quintet_composer_v56_FINAL.html:622:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet-rhythm-analysis.txt:845:quintet_composer_v56_FINAL.html:628:            oscillator.stop(startTime + duration);
quintet-rhythm-analysis.txt:846:quintet_composer_v56_FINAL.html:647:            const xml = generateMusicXML(composition);
quintet-rhythm-analysis.txt:847:quintet_composer_v56_FINAL.html:659:        function generateMusicXML(comp) {
quintet-rhythm-analysis.txt:848:quintet_composer_v56_FINAL.html:661:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:849:quintet_composer_v56_FINAL.html:662:            xml += '<score-partwise version="3.0">\n';
quintet-rhythm-analysis.txt:850:quintet_composer_v56_FINAL.html:689:                        xml += '        <divisions>256</divisions>\n';
quintet-rhythm-analysis.txt:851:quintet_composer_v56_FINAL.html:710:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet-rhythm-analysis.txt:852:quintet_composer_v56_FINAL.html:715:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet-rhythm-analysis.txt:853:quintet_composer_v56_FINAL.html:727:            xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:854:quintet_composer_v56_FINAL.html:731:        function createNoteXML(midi, duration, isChordNote) {
quintet-rhythm-analysis.txt:855:quintet_composer_v56_FINAL.html:748:            xml += `        <duration>${Math.floor(duration)}</duration>\n`;
quintet-rhythm-analysis.txt:856:quintet_composer_v56_FINAL.html:749:            xml += '        <type>' + getDurationType(duration) + '</type>\n';
quintet-rhythm-analysis.txt:857:quintet_composer_v56_FINAL.html:755:        function getDurationType(duration) {
quintet-rhythm-analysis.txt:858:quintet_composer_v56_FINAL.html:756:            if (duration >= 1024) return 'whole';
quintet-rhythm-analysis.txt:859:quintet_composer_v56_FINAL.html:757:            if (duration >= 512) return 'half';
quintet-rhythm-analysis.txt:860:quintet_composer_v56_FINAL.html:758:            if (duration >= 256) return 'quarter';
quintet-rhythm-analysis.txt:861:quintet_composer_v56_FINAL.html:759:            if (duration >= 128) return 'eighth';
quintet-rhythm-analysis.txt:862:quintet_composer_v57_BULLETPROOF.html:329:                            duration: 1,
quintet-rhythm-analysis.txt:863:quintet_composer_v57_BULLETPROOF.html:342:                        measure.push({ notes: [bass], duration: 0.5, isChord: false });
quintet-rhythm-analysis.txt:864:quintet_composer_v57_BULLETPROOF.html:343:                        measure.push({ notes: treble, duration: 0.5, isChord: true });
quintet-rhythm-analysis.txt:865:quintet_composer_v57_BULLETPROOF.html:357:                            duration: 0.5,
quintet-rhythm-analysis.txt:866:quintet_composer_v57_BULLETPROOF.html:384:                        duration: 2,
quintet-rhythm-analysis.txt:867:quintet_composer_v57_BULLETPROOF.html:389:                        duration: 2,
quintet-rhythm-analysis.txt:868:quintet_composer_v57_BULLETPROOF.html:394:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:869:quintet_composer_v57_BULLETPROOF.html:395:                    measure.push({ notes: [base + 2], duration: 1, isChord: false });
quintet-rhythm-analysis.txt:870:quintet_composer_v57_BULLETPROOF.html:396:                    measure.push({ notes: [base - 1], duration: 1, isChord: false });
quintet-rhythm-analysis.txt:871:quintet_composer_v57_BULLETPROOF.html:419:                        duration: 4,
quintet-rhythm-analysis.txt:872:quintet_composer_v57_BULLETPROOF.html:423:                    measure.push({ notes: [base], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:873:quintet_composer_v57_BULLETPROOF.html:446:                        duration: 2,
quintet-rhythm-analysis.txt:874:quintet_composer_v57_BULLETPROOF.html:449:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:875:quintet_composer_v57_BULLETPROOF.html:451:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:876:quintet_composer_v57_BULLETPROOF.html:452:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:877:quintet_composer_v57_BULLETPROOF.html:475:                        duration: 4,
quintet-rhythm-analysis.txt:878:quintet_composer_v57_BULLETPROOF.html:479:                    measure.push({ notes: [root], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:879:quintet_composer_v57_BULLETPROOF.html:480:                    measure.push({ notes: [root + 7], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:880:quintet_composer_v57_BULLETPROOF.html:526:                const beatDuration = 60 / tempo;
quintet-rhythm-analysis.txt:881:quintet_composer_v57_BULLETPROOF.html:539:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet-rhythm-analysis.txt:882:quintet_composer_v57_BULLETPROOF.html:542:                            beatTime += event.duration * beatDuration;
quintet-rhythm-analysis.txt:883:quintet_composer_v57_BULLETPROOF.html:545:                        measureTime += 4 * beatDuration;
quintet-rhythm-analysis.txt:884:quintet_composer_v57_BULLETPROOF.html:549:                const totalDuration = composition.measures * 4 * beatDuration;
quintet-rhythm-analysis.txt:885:quintet_composer_v57_BULLETPROOF.html:555:                }, totalDuration * 1000);
quintet-rhythm-analysis.txt:886:quintet_composer_v57_BULLETPROOF.html:565:        function playNote(midi, startTime, duration, instrument) {
quintet-rhythm-analysis.txt:887:quintet_composer_v57_BULLETPROOF.html:593:                gainNode.gain.setValueAtTime(volume, startTime + duration - 0.05);
quintet-rhythm-analysis.txt:888:quintet_composer_v57_BULLETPROOF.html:594:                gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet-rhythm-analysis.txt:889:quintet_composer_v57_BULLETPROOF.html:600:                oscillator.stop(startTime + duration);
quintet-rhythm-analysis.txt:890:quintet_composer_v57_BULLETPROOF.html:623:                const xml = generateMusicXML(composition);
quintet-rhythm-analysis.txt:891:quintet_composer_v57_BULLETPROOF.html:639:        function generateMusicXML(comp) {
quintet-rhythm-analysis.txt:892:quintet_composer_v57_BULLETPROOF.html:641:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:893:quintet_composer_v57_BULLETPROOF.html:642:            xml += '<score-partwise version="3.0">\n';
quintet-rhythm-analysis.txt:894:quintet_composer_v57_BULLETPROOF.html:666:                        xml += '        <divisions>256</divisions>\n';
quintet-rhythm-analysis.txt:895:quintet_composer_v57_BULLETPROOF.html:680:                                xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet-rhythm-analysis.txt:896:quintet_composer_v57_BULLETPROOF.html:691:            xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:897:quintet_composer_v57_BULLETPROOF.html:695:        function createNoteXML(midi, duration, isChordNote) {
quintet-rhythm-analysis.txt:898:quintet_composer_v57_BULLETPROOF.html:712:            xml += '        <duration>' + Math.floor(duration) + '</duration>\n';
quintet-rhythm-analysis.txt:899:quintet_composer_v57_BULLETPROOF.html:713:            xml += '        <type>' + getDurationType(duration) + '</type>\n';
quintet-rhythm-analysis.txt:900:quintet_composer_v57_BULLETPROOF.html:719:        function getDurationType(duration) {
quintet-rhythm-analysis.txt:901:quintet_composer_v57_BULLETPROOF.html:720:            if (duration >= 1024) return 'whole';
quintet-rhythm-analysis.txt:902:quintet_composer_v57_BULLETPROOF.html:721:            if (duration >= 512) return 'half';
quintet-rhythm-analysis.txt:903:quintet_composer_v57_BULLETPROOF.html:722:            if (duration >= 256) return 'quarter';
quintet-rhythm-analysis.txt:904:quintet_composer_v57_BULLETPROOF.html:723:            if (duration >= 128) return 'eighth';
quintet-rhythm-analysis.txt:936:quintet_composer_v57_MULTIPLE_STOPS.html:779:            gainNode.gain.setValueAtTime(finalVolume, startTime + duration - 0.1);
quintet-rhythm-analysis.txt:1023:quintet_composer_v59_BULLETPROOF.html:302:                let totalDuration = 0;
quintet-rhythm-analysis.txt:1024:quintet_composer_v59_BULLETPROOF.html:303:                pattern.forEach((duration, i) => {
quintet-rhythm-analysis.txt:1025:quintet_composer_v59_BULLETPROOF.html:329:                        duration: duration
quintet-rhythm-analysis.txt:1026:quintet_composer_v59_BULLETPROOF.html:332:                    totalDuration += duration;
quintet-rhythm-analysis.txt:1027:quintet_composer_v59_BULLETPROOF.html:333:                    if (totalDuration >= 4) return;
quintet-rhythm-analysis.txt:1028:quintet_composer_v59_BULLETPROOF.html:382:                    measureEvents.push({ notes: [note], duration: 2 });
quintet-rhythm-analysis.txt:1029:quintet_composer_v59_BULLETPROOF.html:383:                    measureEvents.push({ notes: [note - 2], duration: 2 });
quintet-rhythm-analysis.txt:1030:quintet_composer_v59_BULLETPROOF.html:386:                    measureEvents.push({ notes: [note], duration: 4 });
quintet-rhythm-analysis.txt:1031:quintet_composer_v59_BULLETPROOF.html:389:                    measureEvents.push({ notes: [note], duration: 2 });
quintet-rhythm-analysis.txt:1032:quintet_composer_v59_BULLETPROOF.html:390:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet-rhythm-analysis.txt:1033:quintet_composer_v59_BULLETPROOF.html:419:                        measureEvents.push({ notes: [note], duration: 1 });
quintet-rhythm-analysis.txt:1034:quintet_composer_v59_BULLETPROOF.html:423:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet-rhythm-analysis.txt:1035:quintet_composer_v59_BULLETPROOF.html:424:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet-rhythm-analysis.txt:1036:quintet_composer_v59_BULLETPROOF.html:428:                        measureEvents.push({ notes: [note], duration: 1 });
quintet-rhythm-analysis.txt:1037:quintet_composer_v59_BULLETPROOF.html:576:            const beatDuration = 60 / tempo;
quintet-rhythm-analysis.txt:1038:quintet_composer_v59_BULLETPROOF.html:594:                                    startTime + (beatPosition * beatDuration),
quintet-rhythm-analysis.txt:1039:quintet_composer_v59_BULLETPROOF.html:595:                                    event.duration * beatDuration * 0.9,
quintet-rhythm-analysis.txt:1040:quintet_composer_v59_BULLETPROOF.html:601:                        beatPosition += event.duration;
quintet-rhythm-analysis.txt:1041:quintet_composer_v59_BULLETPROOF.html:607:                        setTimeout(resolve, 4 * beatDuration * 1000)
quintet-rhythm-analysis.txt:1042:quintet_composer_v59_BULLETPROOF.html:617:        function playNote(midiNote, startTime, duration, instrument) {
quintet-rhythm-analysis.txt:1043:quintet_composer_v59_BULLETPROOF.html:640:            gainNode.gain.exponentialRampToValueAtTime(0.001, startTime + duration);
quintet-rhythm-analysis.txt:1044:quintet_composer_v59_BULLETPROOF.html:646:            oscillator.stop(startTime + duration);
quintet-rhythm-analysis.txt:1045:quintet_composer_v59_BULLETPROOF.html:660:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:1046:quintet_composer_v59_BULLETPROOF.html:661:            xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:1047:quintet_composer_v59_BULLETPROOF.html:684:                        xml += '        <divisions>4</divisions>\n';
quintet-rhythm-analysis.txt:1048:quintet_composer_v59_BULLETPROOF.html:737:                                xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet-rhythm-analysis.txt:1049:quintet_composer_v59_BULLETPROOF.html:738:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet-rhythm-analysis.txt:1050:quintet_composer_v59_BULLETPROOF.html:750:            xml += '</score-partwise>';
quintet-rhythm-analysis.txt:1051:quintet_composer_v59_BULLETPROOF.html:778:        function getNoteType(duration) {
quintet-rhythm-analysis.txt:1052:quintet_composer_v59_BULLETPROOF.html:779:            if (duration >= 4) return 'whole';
quintet-rhythm-analysis.txt:1053:quintet_composer_v59_BULLETPROOF.html:780:            if (duration >= 2) return 'half';
quintet-rhythm-analysis.txt:1054:quintet_composer_v59_BULLETPROOF.html:781:            if (duration >= 1) return 'quarter';
quintet-rhythm-analysis.txt:1055:quintet_composer_v59_BULLETPROOF.html:782:            if (duration >= 0.5) return 'eighth';
quintet-rhythm-analysis.txt:1056:quintet_composer_v59_BULLETPROOF_RESTORED.html:317:                            duration: 1,
quintet-rhythm-analysis.txt:1057:quintet_composer_v59_BULLETPROOF_RESTORED.html:325:                        duration: 2,
quintet-rhythm-analysis.txt:1058:quintet_composer_v59_BULLETPROOF_RESTORED.html:330:                        duration: 2,
quintet-rhythm-analysis.txt:1059:quintet_composer_v59_BULLETPROOF_RESTORED.html:338:                            duration: 1.33,
quintet-rhythm-analysis.txt:1060:quintet_composer_v59_BULLETPROOF_RESTORED.html:383:                        duration: rhythm,
quintet-rhythm-analysis.txt:1061:quintet_composer_v59_BULLETPROOF_RESTORED.html:428:                    duration: 4,
quintet-rhythm-analysis.txt:1062:quintet_composer_v59_BULLETPROOF_RESTORED.html:461:                    duration: 2,
quintet-rhythm-analysis.txt:1063:quintet_composer_v59_BULLETPROOF_RESTORED.html:467:                    duration: 2,
quintet-rhythm-analysis.txt:1064:quintet_composer_v59_BULLETPROOF_RESTORED.html:511:            const beatDuration = 60 / currentTempo;
quintet-rhythm-analysis.txt:1065:quintet_composer_v59_BULLETPROOF_RESTORED.html:520:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet-rhythm-analysis.txt:1066:quintet_composer_v59_BULLETPROOF_RESTORED.html:522:                        currentTime += event.duration * beatDuration;
quintet-rhythm-analysis.txt:1067:quintet_composer_v59_BULLETPROOF_RESTORED.html:530:            }, composition.measures * 4 * beatDuration * 1000);
quintet-rhythm-analysis.txt:1068:quintet_composer_v59_BULLETPROOF_RESTORED.html:533:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet-rhythm-analysis.txt:1069:quintet_composer_v59_BULLETPROOF_RESTORED.html:558:            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
quintet-rhythm-analysis.txt:1070:quintet_composer_v59_BULLETPROOF_RESTORED.html:561:            oscillator.stop(startTime + duration);
quintet-rhythm-analysis.txt:1071:quintet_composer_v59_BULLETPROOF_RESTORED.html:579:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:1072:quintet_composer_v59_BULLETPROOF_RESTORED.html:580:            xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:1073:quintet_composer_v59_BULLETPROOF_RESTORED.html:601:                xml += '        <divisions>4</divisions>\n';
quintet-rhythm-analysis.txt:1074:quintet_composer_v59_BULLETPROOF_RESTORED.html:622:                        xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet-rhythm-analysis.txt:1075:quintet_composer_v59_BULLETPROOF_RESTORED.html:623:                        xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet-rhythm-analysis.txt:1076:quintet_composer_v59_BULLETPROOF_RESTORED.html:642:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet-rhythm-analysis.txt:1077:quintet_composer_v59_BULLETPROOF_RESTORED.html:643:                            xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet-rhythm-analysis.txt:1078:quintet_composer_v59_BULLETPROOF_RESTORED.html:654:            xml += '</score-partwise>';
quintet-rhythm-analysis.txt:1079:quintet_composer_v59_BULLETPROOF_RESTORED.html:694:        function getDurationType(duration) {
quintet-rhythm-analysis.txt:1080:quintet_composer_v59_BULLETPROOF_RESTORED.html:695:            if (duration >= 4) return 'whole';
quintet-rhythm-analysis.txt:1081:quintet_composer_v59_BULLETPROOF_RESTORED.html:696:            if (duration >= 2) return 'half';
quintet-rhythm-analysis.txt:1082:quintet_composer_v59_BULLETPROOF_RESTORED.html:697:            if (duration >= 1) return 'quarter';
quintet-rhythm-analysis.txt:1083:quintet_composer_v59_BULLETPROOF_RESTORED.html:698:            if (duration >= 0.5) return 'eighth';
quintet-rhythm-analysis.txt:1084:quintet_composer_v60_ACTUALLY_WORKING.html:426:                        duration: 2,
quintet-rhythm-analysis.txt:1085:quintet_composer_v60_ACTUALLY_WORKING.html:431:                        duration: 2,
quintet-rhythm-analysis.txt:1086:quintet_composer_v60_ACTUALLY_WORKING.html:439:                            duration: 1,
quintet-rhythm-analysis.txt:1087:quintet_composer_v60_ACTUALLY_WORKING.html:447:                        duration: 1,
quintet-rhythm-analysis.txt:1088:quintet_composer_v60_ACTUALLY_WORKING.html:452:                        duration: 1,
quintet-rhythm-analysis.txt:1089:quintet_composer_v60_ACTUALLY_WORKING.html:457:                        duration: 1,
quintet-rhythm-analysis.txt:1090:quintet_composer_v60_ACTUALLY_WORKING.html:462:                        duration: 1,
quintet-rhythm-analysis.txt:1091:quintet_composer_v60_ACTUALLY_WORKING.html:487:                    const duration = rhythmOptions[Math.floor(Math.random() * rhythmOptions.length)];
quintet-rhythm-analysis.txt:1092:quintet_composer_v60_ACTUALLY_WORKING.html:489:                    if (beatCount + duration > 4) break;
quintet-rhythm-analysis.txt:1093:quintet_composer_v60_ACTUALLY_WORKING.html:507:                        duration: duration,
quintet-rhythm-analysis.txt:1094:quintet_composer_v60_ACTUALLY_WORKING.html:511:                    beatCount += duration;
quintet-rhythm-analysis.txt:1095:quintet_composer_v60_ACTUALLY_WORKING.html:540:                        duration: 2,
quintet-rhythm-analysis.txt:1096:quintet_composer_v60_ACTUALLY_WORKING.html:545:                        duration: 2,
quintet-rhythm-analysis.txt:1097:quintet_composer_v60_ACTUALLY_WORKING.html:551:                        duration: 4,
quintet-rhythm-analysis.txt:1098:quintet_composer_v60_ACTUALLY_WORKING.html:580:                    duration: 4,
quintet-rhythm-analysis.txt:1099:quintet_composer_v60_ACTUALLY_WORKING.html:614:                    duration: 2,
quintet-rhythm-analysis.txt:1100:quintet_composer_v60_ACTUALLY_WORKING.html:619:                    duration: 2,
quintet-rhythm-analysis.txt:1101:quintet_composer_v60_ACTUALLY_WORKING.html:668:            const beatDuration = 60 / currentTempo;
quintet-rhythm-analysis.txt:1102:quintet_composer_v60_ACTUALLY_WORKING.html:677:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet-rhythm-analysis.txt:1103:quintet_composer_v60_ACTUALLY_WORKING.html:679:                        currentTime += event.duration * beatDuration;
quintet-rhythm-analysis.txt:1104:quintet_composer_v60_ACTUALLY_WORKING.html:687:            }, composition.measures * 4 * beatDuration * 1000);
quintet-rhythm-analysis.txt:1105:quintet_composer_v60_ACTUALLY_WORKING.html:690:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet-rhythm-analysis.txt:1106:quintet_composer_v60_ACTUALLY_WORKING.html:715:            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
quintet-rhythm-analysis.txt:1107:quintet_composer_v60_ACTUALLY_WORKING.html:718:            oscillator.stop(startTime + duration);
quintet-rhythm-analysis.txt:1108:quintet_composer_v60_ACTUALLY_WORKING.html:736:            xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:1109:quintet_composer_v60_ACTUALLY_WORKING.html:737:            xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:1110:quintet_composer_v60_ACTUALLY_WORKING.html:758:                xml += '        <divisions>4</divisions>\n';
quintet-rhythm-analysis.txt:1111:quintet_composer_v60_ACTUALLY_WORKING.html:785:                            xml += `        <duration>${Math.floor(event.duration * 4)}</duration>\n`;
quintet-rhythm-analysis.txt:1112:quintet_composer_v60_ACTUALLY_WORKING.html:786:                            xml += '        <type>' + getDurationType(event.duration) + '</type>\n';
quintet-rhythm-analysis.txt:1113:quintet_composer_v60_ACTUALLY_WORKING.html:797:            xml += '</score-partwise>';
quintet-rhythm-analysis.txt:1114:quintet_composer_v60_ACTUALLY_WORKING.html:837:        function getDurationType(duration) {
quintet-rhythm-analysis.txt:1115:quintet_composer_v60_ACTUALLY_WORKING.html:838:            if (duration >= 4) return 'whole';
quintet-rhythm-analysis.txt:1116:quintet_composer_v60_ACTUALLY_WORKING.html:839:            if (duration >= 2) return 'half';
quintet-rhythm-analysis.txt:1117:quintet_composer_v60_ACTUALLY_WORKING.html:840:            if (duration >= 1) return 'quarter';
quintet-rhythm-analysis.txt:1118:quintet_composer_v60_ACTUALLY_WORKING.html:841:            if (duration >= 0.5) return 'eighth';
quintet-rhythm-analysis.txt:1198:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:616:                rhythms.forEach(duration => {
quintet-rhythm-analysis.txt:1199:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:622:                        duration: duration
quintet-rhythm-analysis.txt:1200:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:635:                    duration: 4
quintet-rhythm-analysis.txt:1201:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:644:                    duration: 4
quintet-rhythm-analysis.txt:1202:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:653:                    duration: 4,
quintet-rhythm-analysis.txt:1203:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:666:                    const divisions = 4;
quintet-rhythm-analysis.txt:1204:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:669:                    xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.1 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:1205:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:670:                    xml += '<score-partwise version="3.1">\n';
quintet-rhythm-analysis.txt:1206:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:712:                        xml += `        <divisions>${divisions}</divisions>\n`;
quintet-rhythm-analysis.txt:1207:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:739:                                xml += this.noteToMusicXML(note, divisions);
quintet-rhythm-analysis.txt:1208:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:750:                                    xml += this.noteToMusicXML(note, divisions);
quintet-rhythm-analysis.txt:1209:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:759:                    xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:1210:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:777:            noteToMusicXML(note, divisions) {
quintet-rhythm-analysis.txt:1211:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:797:                xml += `        <duration>${note.duration}</duration>\n`;
quintet-rhythm-analysis.txt:1212:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:798:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet-rhythm-analysis.txt:1213:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:804:            durationToType(duration) {
quintet-rhythm-analysis.txt:1214:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:805:                // BULLETPROOF: Map duration to note type
quintet-rhythm-analysis.txt:1215:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:812:                return types[duration] || 'quarter';
quintet-rhythm-analysis.txt:1348:quintet_composer_v7_final.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:1349:quintet_composer_v7_final.html:265:                        function addNote(startBeat, duration, vel) {
quintet-rhythm-analysis.txt:1350:quintet_composer_v7_final.html:285:                                start: (m * divisions * 4) + startBeat,
quintet-rhythm-analysis.txt:1351:quintet_composer_v7_final.html:286:                                duration: duration,
quintet-rhythm-analysis.txt:1352:quintet_composer_v7_final.html:296:                                addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:1353:quintet_composer_v7_final.html:300:                            addNote(0, divisions * 2, velocity);
quintet-rhythm-analysis.txt:1354:quintet_composer_v7_final.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet-rhythm-analysis.txt:1355:quintet_composer_v7_final.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet-rhythm-analysis.txt:1356:quintet_composer_v7_final.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:1357:quintet_composer_v7_final.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1358:quintet_composer_v7_final.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:1359:quintet_composer_v7_final.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet-rhythm-analysis.txt:1360:quintet_composer_v7_final.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet-rhythm-analysis.txt:1361:quintet_composer_v7_final.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:1362:quintet_composer_v7_final.html:324:                                addNote(0, divisions, velocity);
quintet-rhythm-analysis.txt:1363:quintet_composer_v7_final.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1364:quintet_composer_v7_final.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1365:quintet_composer_v7_final.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet-rhythm-analysis.txt:1366:quintet_composer_v7_final.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:1367:quintet_composer_v7_final.html:439:                        track.push.apply(track, varLength(duration));
quintet-rhythm-analysis.txt:1368:quintet_composer_v7_final.html:444:                        lastTick = startTick + duration;
quintet-rhythm-analysis.txt:1369:quintet_composer_v7_final.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:1370:quintet_composer_v7_final.html:489:                xml += '<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">\n';
quintet-rhythm-analysis.txt:1371:quintet_composer_v7_final.html:490:                xml += '<score-partwise version="3.0">\n';
quintet-rhythm-analysis.txt:1372:quintet_composer_v7_final.html:520:                            xml += '        <divisions>' + divisions + '</divisions>\n';
quintet-rhythm-analysis.txt:1373:quintet_composer_v7_final.html:554:                        var measureDuration = divisions * 4;
quintet-rhythm-analysis.txt:1374:quintet_composer_v7_final.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet-rhythm-analysis.txt:1375:quintet_composer_v7_final.html:562:                                var restDuration = noteStart - currentBeat;
quintet-rhythm-analysis.txt:1376:quintet_composer_v7_final.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet-rhythm-analysis.txt:1377:quintet_composer_v7_final.html:587:                            var duration = Math.max(1, note.duration);
quintet-rhythm-analysis.txt:1378:quintet_composer_v7_final.html:588:                            xml += '        <duration>' + duration + '</duration>\n';
quintet-rhythm-analysis.txt:1379:quintet_composer_v7_final.html:593:                            if (duration >= divisions * 4) {
quintet-rhythm-analysis.txt:1380:quintet_composer_v7_final.html:595:                            } else if (duration >= divisions * 2) {
quintet-rhythm-analysis.txt:1381:quintet_composer_v7_final.html:597:                            } else if (duration === divisions * 1.5) {
quintet-rhythm-analysis.txt:1382:quintet_composer_v7_final.html:600:                            } else if (duration >= divisions) {
quintet-rhythm-analysis.txt:1383:quintet_composer_v7_final.html:602:                            } else if (duration >= divisions * 0.5) {
quintet-rhythm-analysis.txt:1384:quintet_composer_v7_final.html:614:                            currentBeat = noteStart + note.duration;
quintet-rhythm-analysis.txt:1385:quintet_composer_v7_final.html:618:                        if (currentBeat < measureDuration) {
quintet-rhythm-analysis.txt:1386:quintet_composer_v7_final.html:619:                            var finalRest = measureDuration - currentBeat;
quintet-rhythm-analysis.txt:1387:quintet_composer_v7_final.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet-rhythm-analysis.txt:1388:quintet_composer_v7_final.html:632:                xml += '</score-partwise>\n';
quintet-rhythm-analysis.txt:1425:quintet_v62_real_music.html:942:            // BULLETPROOF: Duration to note type
quintet-rhythm-analysis.txt:1442:quintet_v63.html:424:        // TESTED: Get duration type
quintet-rhythm-analysis.txt:1518:bulletproof_integrated.html:114:                const part = { name: inst.name, notes: [] };
quintet-rhythm-analysis.txt:1519:bulletproof_integrated.html:128:                        part.notes.push({
quintet-rhythm-analysis.txt:1520:bulletproof_integrated.html:156:                    part.notes.filter(n => n.measure === m).forEach(note => {
quintet-rhythm-analysis.txt:1521:bulletproof_integrated.html:158:                        const oct = Math.floor(note.pitch / 12) - 1;
quintet-rhythm-analysis.txt:1522:bulletproof_integrated.html:159:                        const name = names[note.pitch % 12];
quintet-rhythm-analysis.txt:1523:bulletproof_integrated.html:160:                        xml += '<note><pitch><step>' + name.replace('#','') + '</step>';
quintet-rhythm-analysis.txt:1524:bulletproof_integrated.html:162:                        xml += `<octave>${oct}</octave></pitch><duration>${note.duration*4}</duration>`;
quintet-rhythm-analysis.txt:1525:bulletproof_integrated.html:163:                        xml += `<type>${note.duration===4?'whole':note.duration===2?'half':note.duration===1?'quarter':note.duration===0.5?'eighth':'16th'}</type></note>\n`;
quintet-rhythm-analysis.txt:1526:bulletproof_integrated.html:193:                part.notes.forEach(n => {
quintet-rhythm-analysis.txt:1666:quintet_composer_v14_WORKING_BASE.html:105:        .instrument-card .note-count {
quintet-rhythm-analysis.txt:1667:quintet_composer_v14_WORKING_BASE.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet-rhythm-analysis.txt:1668:quintet_composer_v14_WORKING_BASE.html:165:                <select id="noteType">
quintet-rhythm-analysis.txt:1669:quintet_composer_v14_WORKING_BASE.html:166:                    <option value="simple">Simple (Quarter notes)</option>
quintet-rhythm-analysis.txt:1670:quintet_composer_v14_WORKING_BASE.html:184:                <div class="note-count" id="guitar-count">-</div>
quintet-rhythm-analysis.txt:1671:quintet_composer_v14_WORKING_BASE.html:188:                <div class="note-count" id="violin1-count">-</div>
quintet-rhythm-analysis.txt:1672:quintet_composer_v14_WORKING_BASE.html:192:                <div class="note-count" id="violin2-count">-</div>
quintet-rhythm-analysis.txt:1673:quintet_composer_v14_WORKING_BASE.html:196:                <div class="note-count" id="viola-count">-</div>
quintet-rhythm-analysis.txt:1674:quintet_composer_v14_WORKING_BASE.html:200:                <div class="note-count" id="cello-count">-</div>
quintet-rhythm-analysis.txt:1675:quintet_composer_v14_WORKING_BASE.html:235:                var noteType = document.getElementById('noteType').value;
quintet-rhythm-analysis.txt:1676:quintet_composer_v14_WORKING_BASE.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:1677:quintet_composer_v14_WORKING_BASE.html:257:                // Generate notes for each instrument
quintet-rhythm-analysis.txt:1678:quintet_composer_v14_WORKING_BASE.html:259:                    var notes = [];
quintet-rhythm-analysis.txt:1679:quintet_composer_v14_WORKING_BASE.html:264:                        // Helper function to add a note
quintet-rhythm-analysis.txt:1680:quintet_composer_v14_WORKING_BASE.html:265:                        function addNote(startBeat, duration, vel) {
quintet-rhythm-analysis.txt:1681:quintet_composer_v14_WORKING_BASE.html:283:                            notes.push({
quintet-rhythm-analysis.txt:1682:quintet_composer_v14_WORKING_BASE.html:293:                        if (noteType === 'simple') {
quintet-rhythm-analysis.txt:1683:quintet_composer_v14_WORKING_BASE.html:294:                            // 4 quarter notes
quintet-rhythm-analysis.txt:1684:quintet_composer_v14_WORKING_BASE.html:296:                                addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:1685:quintet_composer_v14_WORKING_BASE.html:298:                        } else if (noteType === 'moderate') {
quintet-rhythm-analysis.txt:1686:quintet_composer_v14_WORKING_BASE.html:299:                            // Half note + 2 quarters
quintet-rhythm-analysis.txt:1687:quintet_composer_v14_WORKING_BASE.html:300:                            addNote(0, divisions * 2, velocity);
quintet-rhythm-analysis.txt:1688:quintet_composer_v14_WORKING_BASE.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet-rhythm-analysis.txt:1689:quintet_composer_v14_WORKING_BASE.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet-rhythm-analysis.txt:1690:quintet_composer_v14_WORKING_BASE.html:303:                        } else if (noteType === 'complex') {
quintet-rhythm-analysis.txt:1691:quintet_composer_v14_WORKING_BASE.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:1692:quintet_composer_v14_WORKING_BASE.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1693:quintet_composer_v14_WORKING_BASE.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:1694:quintet_composer_v14_WORKING_BASE.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet-rhythm-analysis.txt:1695:quintet_composer_v14_WORKING_BASE.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet-rhythm-analysis.txt:1696:quintet_composer_v14_WORKING_BASE.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:1697:quintet_composer_v14_WORKING_BASE.html:324:                                addNote(0, divisions, velocity);
quintet-rhythm-analysis.txt:1698:quintet_composer_v14_WORKING_BASE.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1699:quintet_composer_v14_WORKING_BASE.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:1700:quintet_composer_v14_WORKING_BASE.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet-rhythm-analysis.txt:1701:quintet_composer_v14_WORKING_BASE.html:334:                        notes: notes
quintet-rhythm-analysis.txt:1702:quintet_composer_v14_WORKING_BASE.html:338:                    document.getElementById(instrumentNames[inst].toLowerCase() + '-count').textContent = notes.length;
quintet-rhythm-analysis.txt:1703:quintet_composer_v14_WORKING_BASE.html:349:                    composition.instruments.reduce(function(sum, inst) { return sum + inst.notes.length; }, 0) + 
quintet-rhythm-analysis.txt:1704:quintet_composer_v14_WORKING_BASE.html:350:                    ' total notes';
quintet-rhythm-analysis.txt:1705:quintet_composer_v14_WORKING_BASE.html:419:                    // Sort notes by start time
quintet-rhythm-analysis.txt:1706:quintet_composer_v14_WORKING_BASE.html:420:                    var sortedNotes = instrument.notes.slice().sort(function(a, b) {
quintet-rhythm-analysis.txt:1707:quintet_composer_v14_WORKING_BASE.html:424:                    // Write notes
quintet-rhythm-analysis.txt:1708:quintet_composer_v14_WORKING_BASE.html:426:                    for (var n = 0; n < sortedNotes.length; n++) {
quintet-rhythm-analysis.txt:1709:quintet_composer_v14_WORKING_BASE.html:427:                        var note = sortedNotes[n];
quintet-rhythm-analysis.txt:1710:quintet_composer_v14_WORKING_BASE.html:428:                        var startTick = Math.round(note.start * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:1711:quintet_composer_v14_WORKING_BASE.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:1712:quintet_composer_v14_WORKING_BASE.html:431:                        // Note on
quintet-rhythm-analysis.txt:1713:quintet_composer_v14_WORKING_BASE.html:434:                        track.push(0x90 + i); // Note on
quintet-rhythm-analysis.txt:1714:quintet_composer_v14_WORKING_BASE.html:435:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet-rhythm-analysis.txt:1715:quintet_composer_v14_WORKING_BASE.html:436:                        track.push(Math.max(1, Math.min(127, note.velocity)));
quintet-rhythm-analysis.txt:1716:quintet_composer_v14_WORKING_BASE.html:438:                        // Note off
quintet-rhythm-analysis.txt:1717:quintet_composer_v14_WORKING_BASE.html:440:                        track.push(0x80 + i); // Note off
quintet-rhythm-analysis.txt:1718:quintet_composer_v14_WORKING_BASE.html:441:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet-rhythm-analysis.txt:1719:quintet_composer_v14_WORKING_BASE.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:1720:quintet_composer_v14_WORKING_BASE.html:542:                        // Get notes for this measure
quintet-rhythm-analysis.txt:1721:quintet_composer_v14_WORKING_BASE.html:543:                        var measureNotes = instrument.notes.filter(function(n) {
quintet-rhythm-analysis.txt:1722:quintet_composer_v14_WORKING_BASE.html:548:                        measureNotes.sort(function(a, b) {
quintet-rhythm-analysis.txt:1723:quintet_composer_v14_WORKING_BASE.html:556:                        for (var n = 0; n < measureNotes.length; n++) {
quintet-rhythm-analysis.txt:1724:quintet_composer_v14_WORKING_BASE.html:557:                            var note = measureNotes[n];
quintet-rhythm-analysis.txt:1725:quintet_composer_v14_WORKING_BASE.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet-rhythm-analysis.txt:1726:quintet_composer_v14_WORKING_BASE.html:560:                            // Add rest if there's a gap
quintet-rhythm-analysis.txt:1727:quintet_composer_v14_WORKING_BASE.html:561:                            if (noteStart > currentBeat) {
quintet-rhythm-analysis.txt:1728:quintet_composer_v14_WORKING_BASE.html:562:                                var restDuration = noteStart - currentBeat;
quintet-rhythm-analysis.txt:1729:quintet_composer_v14_WORKING_BASE.html:563:                                xml += '      <note>\n';
quintet-rhythm-analysis.txt:1730:quintet_composer_v14_WORKING_BASE.html:564:                                xml += '        <rest/>\n';
quintet-rhythm-analysis.txt:1731:quintet_composer_v14_WORKING_BASE.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet-rhythm-analysis.txt:1732:quintet_composer_v14_WORKING_BASE.html:566:                                xml += '      </note>\n';
quintet-rhythm-analysis.txt:1733:quintet_composer_v14_WORKING_BASE.html:569:                            // Add the note
quintet-rhythm-analysis.txt:1734:quintet_composer_v14_WORKING_BASE.html:570:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:1735:quintet_composer_v14_WORKING_BASE.html:572:                            // Convert MIDI pitch to note name
quintet-rhythm-analysis.txt:1736:quintet_composer_v14_WORKING_BASE.html:574:                            var noteName = pitchNames[note.pitch % 12];
quintet-rhythm-analysis.txt:1737:quintet_composer_v14_WORKING_BASE.html:575:                            var octave = Math.floor(note.pitch / 12) - 1;
quintet-rhythm-analysis.txt:1738:quintet_composer_v14_WORKING_BASE.html:576:                            var alter = noteName.includes('#') ? 1 : 0;
quintet-rhythm-analysis.txt:1739:quintet_composer_v14_WORKING_BASE.html:577:                            var step = noteName.replace('#', '');
quintet-rhythm-analysis.txt:1740:quintet_composer_v14_WORKING_BASE.html:587:                            var duration = Math.max(1, note.duration);
quintet-rhythm-analysis.txt:1741:quintet_composer_v14_WORKING_BASE.html:590:                            // Determine note type
quintet-rhythm-analysis.txt:1742:quintet_composer_v14_WORKING_BASE.html:612:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:1743:quintet_composer_v14_WORKING_BASE.html:614:                            currentBeat = noteStart + note.duration;
quintet-rhythm-analysis.txt:1744:quintet_composer_v14_WORKING_BASE.html:617:                        // Fill rest of measure if needed
quintet-rhythm-analysis.txt:1745:quintet_composer_v14_WORKING_BASE.html:619:                            var finalRest = measureDuration - currentBeat;
quintet-rhythm-analysis.txt:1746:quintet_composer_v14_WORKING_BASE.html:620:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:1747:quintet_composer_v14_WORKING_BASE.html:621:                            xml += '        <rest/>\n';
quintet-rhythm-analysis.txt:1748:quintet_composer_v14_WORKING_BASE.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet-rhythm-analysis.txt:1749:quintet_composer_v14_WORKING_BASE.html:623:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:2096:quintet_composer_v26_WORKING_BASE.html:210:                <label for="density">Note Density:</label>
quintet-rhythm-analysis.txt:2097:quintet_composer_v26_WORKING_BASE.html:315:        function midiToNote(midi) {
quintet-rhythm-analysis.txt:2098:quintet_composer_v26_WORKING_BASE.html:316:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:2099:quintet_composer_v26_WORKING_BASE.html:319:            const noteIndex = midi % 12;
quintet-rhythm-analysis.txt:2100:quintet_composer_v26_WORKING_BASE.html:320:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:2101:quintet_composer_v26_WORKING_BASE.html:323:            const step = noteName.replace('#', '');
quintet-rhythm-analysis.txt:2102:quintet_composer_v26_WORKING_BASE.html:324:            const alter = noteName.includes('#') ? 1 : 0;
quintet-rhythm-analysis.txt:2103:quintet_composer_v26_WORKING_BASE.html:328:                const noteString = `${noteName}${octave}`;
quintet-rhythm-analysis.txt:2104:quintet_composer_v26_WORKING_BASE.html:329:                debugLog(`MIDI ${midi} -> ${noteString}`);
quintet-rhythm-analysis.txt:2105:quintet_composer_v26_WORKING_BASE.html:336:            let rangeInfo = 'INSTRUMENT RANGES (MIDI -> Note):\n\n';
quintet-rhythm-analysis.txt:2106:quintet_composer_v26_WORKING_BASE.html:339:                const lowNote = midiToNote(range.min);
quintet-rhythm-analysis.txt:2107:quintet_composer_v26_WORKING_BASE.html:340:                const highNote = midiToNote(range.max);
quintet-rhythm-analysis.txt:2108:quintet_composer_v26_WORKING_BASE.html:341:                const lowName = `${lowNote.step}${lowNote.alter ? '#' : ''}${lowNote.octave}`;
quintet-rhythm-analysis.txt:2109:quintet_composer_v26_WORKING_BASE.html:342:                const highName = `${highNote.step}${highNote.alter ? '#' : ''}${highNote.octave}`;
quintet-rhythm-analysis.txt:2110:quintet_composer_v26_WORKING_BASE.html:346:                rangeInfo += `  Notes: ${lowName} to ${highName}\n`;
quintet-rhythm-analysis.txt:2111:quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet-rhythm-analysis.txt:2112:quintet_composer_v26_WORKING_BASE.html:360:            const note = midiToNote(midi);
quintet-rhythm-analysis.txt:2113:quintet_composer_v26_WORKING_BASE.html:361:            let xml = '<note>';
quintet-rhythm-analysis.txt:2114:quintet_composer_v26_WORKING_BASE.html:363:            // CRITICAL: chord element must come FIRST after <note>
quintet-rhythm-analysis.txt:2115:quintet_composer_v26_WORKING_BASE.html:369:            xml += `<step>${note.step}</step>`;
quintet-rhythm-analysis.txt:2116:quintet_composer_v26_WORKING_BASE.html:370:            if (note.alter) {
quintet-rhythm-analysis.txt:2117:quintet_composer_v26_WORKING_BASE.html:371:                xml += `<alter>${note.alter}</alter>`;
quintet-rhythm-analysis.txt:2118:quintet_composer_v26_WORKING_BASE.html:373:            xml += `<octave>${note.octave}</octave>`;
quintet-rhythm-analysis.txt:2119:quintet_composer_v26_WORKING_BASE.html:377:            xml += `<type>${noteType}</type>`;
quintet-rhythm-analysis.txt:2120:quintet_composer_v26_WORKING_BASE.html:388:            xml += '</note>';
quintet-rhythm-analysis.txt:2121:quintet_composer_v26_WORKING_BASE.html:404:                // Test mode: specific notes to verify ranges
quintet-rhythm-analysis.txt:2122:quintet_composer_v26_WORKING_BASE.html:407:                    // First measure: lowest note
quintet-rhythm-analysis.txt:2123:quintet_composer_v26_WORKING_BASE.html:409:                    debugLog(`${instrumentName}: Testing LOWEST note - MIDI ${testMidi}`);
quintet-rhythm-analysis.txt:2124:quintet_composer_v26_WORKING_BASE.html:411:                    // Second measure: middle note
quintet-rhythm-analysis.txt:2125:quintet_composer_v26_WORKING_BASE.html:413:                    debugLog(`${instrumentName}: Testing MIDDLE note - MIDI ${testMidi}`);
quintet-rhythm-analysis.txt:2126:quintet_composer_v26_WORKING_BASE.html:415:                    // Third measure: highest note
quintet-rhythm-analysis.txt:2127:quintet_composer_v26_WORKING_BASE.html:417:                    debugLog(`${instrumentName}: Testing HIGHEST note - MIDI ${testMidi}`);
quintet-rhythm-analysis.txt:2128:quintet_composer_v26_WORKING_BASE.html:425:                // Generate whole notes for clarity in test mode
quintet-rhythm-analysis.txt:2129:quintet_composer_v26_WORKING_BASE.html:426:                xml += generateNoteXML(testMidi, DURATIONS.whole, 'whole', false);
quintet-rhythm-analysis.txt:2130:quintet_composer_v26_WORKING_BASE.html:434:                    let duration, noteType;
quintet-rhythm-analysis.txt:2131:quintet_composer_v26_WORKING_BASE.html:441:                            noteType = 'whole';
quintet-rhythm-analysis.txt:2132:quintet_composer_v26_WORKING_BASE.html:444:                            noteType = 'half';
quintet-rhythm-analysis.txt:2133:quintet_composer_v26_WORKING_BASE.html:447:                            noteType = 'quarter';
quintet-rhythm-analysis.txt:2134:quintet_composer_v26_WORKING_BASE.html:450:                            noteType = 'eighth';
quintet-rhythm-analysis.txt:2135:quintet_composer_v26_WORKING_BASE.html:455:                                noteType = 'quarter';
quintet-rhythm-analysis.txt:2136:quintet_composer_v26_WORKING_BASE.html:457:                                noteType = 'eighth';
quintet-rhythm-analysis.txt:2137:quintet_composer_v26_WORKING_BASE.html:459:                                noteType = 'sixteenth';
quintet-rhythm-analysis.txt:2138:quintet_composer_v26_WORKING_BASE.html:466:                            noteType = 'quarter';
quintet-rhythm-analysis.txt:2139:quintet_composer_v26_WORKING_BASE.html:469:                            noteType = 'eighth';
quintet-rhythm-analysis.txt:2140:quintet_composer_v26_WORKING_BASE.html:476:                        // Determine correct note type for remaining duration
quintet-rhythm-analysis.txt:2141:quintet_composer_v26_WORKING_BASE.html:477:                        if (duration === DURATIONS.whole) noteType = 'whole';
quintet-rhythm-analysis.txt:2142:quintet_composer_v26_WORKING_BASE.html:478:                        else if (duration === DURATIONS.half) noteType = 'half';
quintet-rhythm-analysis.txt:2143:quintet_composer_v26_WORKING_BASE.html:479:                        else if (duration === DURATIONS.quarter) noteType = 'quarter';
quintet-rhythm-analysis.txt:2144:quintet_composer_v26_WORKING_BASE.html:480:                        else if (duration === DURATIONS.eighth) noteType = 'eighth';
quintet-rhythm-analysis.txt:2145:quintet_composer_v26_WORKING_BASE.html:481:                        else noteType = 'sixteenth';
quintet-rhythm-analysis.txt:2146:quintet_composer_v26_WORKING_BASE.html:484:                    // Generate note(s) - ENSURE within range
quintet-rhythm-analysis.txt:2147:quintet_composer_v26_WORKING_BASE.html:499:                    xml += generateNoteXML(midi, duration, noteType, false, articulation);
quintet-rhythm-analysis.txt:2148:quintet_composer_v26_WORKING_BASE.html:506:                        xml += generateNoteXML(midi2, duration, noteType, true, articulation);
quintet-rhythm-analysis.txt:2149:quintet_composer_v26_WORKING_BASE.html:560:            // Generate notes for first measure
quintet-rhythm-analysis.txt:2150:quintet_composer_v26_WORKING_BASE.html:609:            xml += '<supports element="beam" type="yes"/>\n';
quintet-rhythm-analysis.txt:2151:quintet_composer_v26_WORKING_BASE.html:709:                    name: 'Note Structure',
quintet-rhythm-analysis.txt:2152:quintet_composer_v26_WORKING_BASE.html:711:                    message: 'Notes have pitch and duration'
quintet-rhythm-analysis.txt:2214:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:167:                Enable Failsafe (ALWAYS generates notes)
quintet-rhythm-analysis.txt:2215:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:272:        let notesGenerated = 0;
quintet-rhythm-analysis.txt:2216:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:294:        function generateNotesWithFailsafe(instrumentName, measureNum, chord, complexity) {
quintet-rhythm-analysis.txt:2217:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:295:            let notes = [];
quintet-rhythm-analysis.txt:2218:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:302:                notes = generateAdvancedNotes(instrumentName, chord);
quintet-rhythm-analysis.txt:2219:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:304:                notes = generateModerateNotes(instrumentName, chord);
quintet-rhythm-analysis.txt:2220:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:307:            // FAILSAFE LEVEL 1: If no notes, use simple generation
quintet-rhythm-analysis.txt:2221:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:308:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet-rhythm-analysis.txt:2222:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:311:                notes = generateSimpleNotes(instrumentName, chord);
quintet-rhythm-analysis.txt:2223:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:315:            // FAILSAFE LEVEL 2: If still no notes, generate quarter notes
quintet-rhythm-analysis.txt:2224:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:316:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet-rhythm-analysis.txt:2225:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:320:                notes = [
quintet-rhythm-analysis.txt:2226:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:328:            // FAILSAFE LEVEL 3: Ultimate fallback - middle C whole note
quintet-rhythm-analysis.txt:2227:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:329:            if ((!notes || notes.length === 0) && useFailsafe) {
quintet-rhythm-analysis.txt:2228:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:331:                notes = [{ midi: 60, duration: durations.whole }]; // Middle C
quintet-rhythm-analysis.txt:2229:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:334:            notesGenerated += notes.length;
quintet-rhythm-analysis.txt:2230:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:335:            return notes;
quintet-rhythm-analysis.txt:2231:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:339:        function generateSimpleNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:2232:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:341:            const chordNotes = getChordNotes(chord);
quintet-rhythm-analysis.txt:2233:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:342:            const notes = [];
quintet-rhythm-analysis.txt:2234:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:344:            // Generate 4 quarter notes from chord
quintet-rhythm-analysis.txt:2235:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:346:                const chordTone = chordNotes[i % chordNotes.length];
quintet-rhythm-analysis.txt:2236:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:352:                notes.push({ midi: finalMidi, duration: durations.quarter });
quintet-rhythm-analysis.txt:2237:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:355:            return notes;
quintet-rhythm-analysis.txt:2238:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:359:        function generateModerateNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:2239:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:362:                const notes = [];
quintet-rhythm-analysis.txt:2240:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:367:                    const chordNotes = getChordNotes(chord);
quintet-rhythm-analysis.txt:2241:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:370:                        const midi = 48 + chordNotes[interval % chordNotes.length];
quintet-rhythm-analysis.txt:2242:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:371:                        notes.push({ midi: Math.min(range.max, midi), duration: durations.eighth });
quintet-rhythm-analysis.txt:2243:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:375:                    return generateSimpleNotes(instrumentName, chord);
quintet-rhythm-analysis.txt:2244:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:378:                return notes;
quintet-rhythm-analysis.txt:2245:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:386:        function generateAdvancedNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:2246:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:390:                const notes = [];
quintet-rhythm-analysis.txt:2247:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:397:                return generateSimpleNotes(instrumentName, chord); // Fallback to simple
quintet-rhythm-analysis.txt:2248:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:404:        function getChordNotes(chordSymbol) {
quintet-rhythm-analysis.txt:2249:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:417:        function midiToNote(midi) {
quintet-rhythm-analysis.txt:2250:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:418:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:2251:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:420:            const noteName = noteNames[midi % 12];
quintet-rhythm-analysis.txt:2252:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:421:            return { step: noteName.replace('#', ''), alter: noteName.includes('#') ? 1 : 0, octave };
quintet-rhythm-analysis.txt:2253:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:433:            notesGenerated = 0;
quintet-rhythm-analysis.txt:2254:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:494:                    // Generate notes with failsafe
quintet-rhythm-analysis.txt:2255:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:495:                    const notes = generateNotesWithFailsafe(instrumentName, measure + 1, chord, complexity);
quintet-rhythm-analysis.txt:2256:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:497:                    if (document.getElementById('validateMeasures').checked && notes.length === 0) {
quintet-rhythm-analysis.txt:2257:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:498:                        debugLog(`CRITICAL: No notes in ${instrumentName} measure ${measure + 1}!`, 'error');
quintet-rhythm-analysis.txt:2258:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:501:                    notes.forEach((noteData, noteIndex) => {
quintet-rhythm-analysis.txt:2259:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:502:                        const note = midiToNote(noteData.midi);
quintet-rhythm-analysis.txt:2260:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:504:      <note>
quintet-rhythm-analysis.txt:2261:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:505:        ${noteIndex > 0 && noteData.chord ? '<chord/>' : ''}
quintet-rhythm-analysis.txt:2262:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:507:          <step>${note.step}</step>
quintet-rhythm-analysis.txt:2263:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:508:          ${note.alter ? `<alter>${note.alter}</alter>` : ''}
quintet-rhythm-analysis.txt:2264:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:509:          <octave>${note.octave}</octave>
quintet-rhythm-analysis.txt:2265:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:511:        <duration>${noteData.duration}</duration>
quintet-rhythm-analysis.txt:2266:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:512:        <type>${getDurationType(noteData.duration)}</type>
quintet-rhythm-analysis.txt:2267:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:513:      </note>`;
quintet-rhythm-analysis.txt:2268:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:528:            debugLog(`Generation complete: ${measuresGenerated} measures, ${notesGenerated} notes, ${failsafeTriggered} failsafes triggered`, 'info');
quintet-rhythm-analysis.txt:2269:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:601:            let notes = generateAdvancedNotes(testInstrument, testChord);
quintet-rhythm-analysis.txt:2270:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:602:            if (notes.length === 0) {
quintet-rhythm-analysis.txt:2271:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:603:                notes = generateSimpleNotes(testInstrument, testChord);
quintet-rhythm-analysis.txt:2272:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:609:            notes = [];
quintet-rhythm-analysis.txt:2273:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:610:            notes = generateNotesWithFailsafe(testInstrument, 1, testChord, 'advanced');
quintet-rhythm-analysis.txt:2274:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:611:            if (notes.length > 0) {
quintet-rhythm-analysis.txt:2276:quintet_composer_v32_COMPOSER_PROFILES.html:424:        // FAILSAFE NOTE GENERATION - Bulletproof from v31
quintet-rhythm-analysis.txt:2347:quintet_composer_v40_WORKING.html:278:                        xml += '        <divisions>4</divisions>\n'; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:2348:quintet_composer_v40_WORKING.html:320:                    // Generate notes based on composer style
quintet-rhythm-analysis.txt:2349:quintet_composer_v40_WORKING.html:321:                    const notes = generateNotesForStyle(part.name, m);
quintet-rhythm-analysis.txt:2350:quintet_composer_v40_WORKING.html:323:                    notes.forEach(note => {
quintet-rhythm-analysis.txt:2351:quintet_composer_v40_WORKING.html:324:                        xml += '      <note>\n';
quintet-rhythm-analysis.txt:2352:quintet_composer_v40_WORKING.html:326:                        xml += `          <step>${note.step}</step>\n`;
quintet-rhythm-analysis.txt:2353:quintet_composer_v40_WORKING.html:327:                        if (note.alter) {
quintet-rhythm-analysis.txt:2354:quintet_composer_v40_WORKING.html:328:                            xml += `          <alter>${note.alter}</alter>\n`;
quintet-rhythm-analysis.txt:2355:quintet_composer_v40_WORKING.html:330:                        xml += `          <octave>${note.octave}</octave>\n`;
quintet-rhythm-analysis.txt:2356:quintet_composer_v40_WORKING.html:332:                        xml += `        <duration>${note.duration}</duration>\n`; // Duration in divisions
quintet-rhythm-analysis.txt:2357:quintet_composer_v40_WORKING.html:334:                        xml += `        <type>${note.type}</type>\n`;
quintet-rhythm-analysis.txt:2358:quintet_composer_v40_WORKING.html:335:                        if (note.dot) {
quintet-rhythm-analysis.txt:2359:quintet_composer_v40_WORKING.html:338:                        xml += '      </note>\n';
quintet-rhythm-analysis.txt:2360:quintet_composer_v40_WORKING.html:366:        // Generate notes for each instrument and measure
quintet-rhythm-analysis.txt:2361:quintet_composer_v40_WORKING.html:367:        function generateNotesForStyle(instrument, measureNum) {
quintet-rhythm-analysis.txt:2362:quintet_composer_v40_WORKING.html:368:            const notes = [];
quintet-rhythm-analysis.txt:2363:quintet_composer_v40_WORKING.html:379:                // Bach-style: running eighth notes
quintet-rhythm-analysis.txt:2364:quintet_composer_v40_WORKING.html:382:                    notes.push({
quintet-rhythm-analysis.txt:2365:quintet_composer_v40_WORKING.html:385:                        duration: 2, // eighth note = 2 divisions
quintet-rhythm-analysis.txt:2366:quintet_composer_v40_WORKING.html:391:                notes.push({ step: 'C', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2367:quintet_composer_v40_WORKING.html:392:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2368:quintet_composer_v40_WORKING.html:393:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2369:quintet_composer_v40_WORKING.html:394:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2370:quintet_composer_v40_WORKING.html:397:                notes.push({ step: 'C', octave: baseOctave, duration: 8, type: 'half' });
quintet-rhythm-analysis.txt:2371:quintet_composer_v40_WORKING.html:398:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2372:quintet_composer_v40_WORKING.html:399:                notes.push({ step: 'C', octave: baseOctave + 1, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2373:quintet_composer_v40_WORKING.html:402:                notes.push({ step: 'E', octave: baseOctave, duration: 6, type: 'quarter', dot: true });
quintet-rhythm-analysis.txt:2374:quintet_composer_v40_WORKING.html:403:                notes.push({ step: 'F', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:2375:quintet_composer_v40_WORKING.html:404:                notes.push({ step: 'G', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2376:quintet_composer_v40_WORKING.html:405:                notes.push({ step: 'A', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2377:quintet_composer_v40_WORKING.html:409:                    notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:2378:quintet_composer_v40_WORKING.html:410:                    notes.push({ step: 'E', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:2379:quintet_composer_v40_WORKING.html:414:                notes.push({ step: 'C', octave: baseOctave, duration: 16, type: 'whole' });
quintet-rhythm-analysis.txt:2380:quintet_composer_v40_WORKING.html:417:                notes.push({ step: 'C', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:2381:quintet_composer_v40_WORKING.html:418:                notes.push({ step: 'E', octave: baseOctave, duration: 4, type: 'quarter' });
quintet-rhythm-analysis.txt:2382:quintet_composer_v40_WORKING.html:419:                notes.push({ step: 'G', octave: baseOctave, duration: 2, type: 'eighth' });
quintet-rhythm-analysis.txt:2383:quintet_composer_v40_WORKING.html:420:                notes.push({ step: 'B', octave: baseOctave, duration: 8, type: 'half' });
quintet-rhythm-analysis.txt:2384:quintet_composer_v40_WORKING.html:423:            return notes;
quintet-rhythm-analysis.txt:2608:quintet_composer_v56_FINAL.html:202:            'C': { tonic: 'C', notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'], sharps: 0 },
quintet-rhythm-analysis.txt:2609:quintet_composer_v56_FINAL.html:203:            'G': { tonic: 'G', notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'], sharps: 1 },
quintet-rhythm-analysis.txt:2610:quintet_composer_v56_FINAL.html:204:            'D': { tonic: 'D', notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'], sharps: 2 },
quintet-rhythm-analysis.txt:2611:quintet_composer_v56_FINAL.html:205:            'A': { tonic: 'A', notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'], sharps: 3 },
quintet-rhythm-analysis.txt:2612:quintet_composer_v56_FINAL.html:206:            'F': { tonic: 'F', notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'], sharps: -1 },
quintet-rhythm-analysis.txt:2613:quintet_composer_v56_FINAL.html:207:            'Bb': { tonic: 'Bb', notes: ['Bb', 'C', 'D', 'Eb', 'F', 'G', 'A'], sharps: -2 },
quintet-rhythm-analysis.txt:2614:quintet_composer_v56_FINAL.html:208:            'Am': { tonic: 'A', notes: ['A', 'B', 'C', 'D', 'E', 'F', 'G'], sharps: 0, minor: true },
quintet-rhythm-analysis.txt:2615:quintet_composer_v56_FINAL.html:209:            'Em': { tonic: 'E', notes: ['E', 'F#', 'G', 'A', 'B', 'C', 'D'], sharps: 1, minor: true },
quintet-rhythm-analysis.txt:2616:quintet_composer_v56_FINAL.html:210:            'Dm': { tonic: 'D', notes: ['D', 'E', 'F', 'G', 'A', 'Bb', 'C'], sharps: -1, minor: true }
quintet-rhythm-analysis.txt:2617:quintet_composer_v56_FINAL.html:222:        // Note to MIDI conversion
quintet-rhythm-analysis.txt:2618:quintet_composer_v56_FINAL.html:223:        function noteToMidi(note, octave) {
quintet-rhythm-analysis.txt:2619:quintet_composer_v56_FINAL.html:224:            const noteMap = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };
quintet-rhythm-analysis.txt:2620:quintet_composer_v56_FINAL.html:225:            let midi = 12 + (octave * 12) + noteMap[note[0]];
quintet-rhythm-analysis.txt:2621:quintet_composer_v56_FINAL.html:226:            if (note.includes('#')) midi++;
quintet-rhythm-analysis.txt:2622:quintet_composer_v56_FINAL.html:227:            if (note.includes('b')) midi--;
quintet-rhythm-analysis.txt:2623:quintet_composer_v56_FINAL.html:304:            const root = keyData.notes[degree - 1];
quintet-rhythm-analysis.txt:2624:quintet_composer_v56_FINAL.html:305:            const third = keyData.notes[(degree - 1 + 2) % 7];
quintet-rhythm-analysis.txt:2625:quintet_composer_v56_FINAL.html:306:            const fifth = keyData.notes[(degree - 1 + 4) % 7];
quintet-rhythm-analysis.txt:2626:quintet_composer_v56_FINAL.html:307:            const seventh = keyData.notes[(degree - 1 + 6) % 7];
quintet-rhythm-analysis.txt:2627:quintet_composer_v56_FINAL.html:314:                notes: [root, third, fifth],
quintet-rhythm-analysis.txt:2628:quintet_composer_v56_FINAL.html:339:                        noteToMidi(chord.root, 2),
quintet-rhythm-analysis.txt:2629:quintet_composer_v56_FINAL.html:340:                        noteToMidi(chord.notes[2], 2),
quintet-rhythm-analysis.txt:2630:quintet_composer_v56_FINAL.html:341:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2631:quintet_composer_v56_FINAL.html:342:                        noteToMidi(chord.notes[1], 3),
quintet-rhythm-analysis.txt:2632:quintet_composer_v56_FINAL.html:343:                        noteToMidi(chord.notes[2], 3),
quintet-rhythm-analysis.txt:2633:quintet_composer_v56_FINAL.html:344:                        noteToMidi(chord.notes[0], 4)
quintet-rhythm-analysis.txt:2634:quintet_composer_v56_FINAL.html:345:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2635:quintet_composer_v56_FINAL.html:349:                            notes: voicing,
quintet-rhythm-analysis.txt:2636:quintet_composer_v56_FINAL.html:357:                    const bassNote = noteToMidi(chord.root, 2);
quintet-rhythm-analysis.txt:2637:quintet_composer_v56_FINAL.html:359:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2638:quintet_composer_v56_FINAL.html:360:                        noteToMidi(chord.notes[1], 3),
quintet-rhythm-analysis.txt:2639:quintet_composer_v56_FINAL.html:361:                        noteToMidi(chord.notes[2], 3)
quintet-rhythm-analysis.txt:2640:quintet_composer_v56_FINAL.html:362:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2641:quintet_composer_v56_FINAL.html:365:                        measure.push({ notes: [bassNote], duration: 0.5, isChord: false });
quintet-rhythm-analysis.txt:2642:quintet_composer_v56_FINAL.html:366:                        measure.push({ notes: trebleChord, duration: 0.5, isChord: true, volume: 0.5 });
quintet-rhythm-analysis.txt:2643:quintet_composer_v56_FINAL.html:371:                        noteToMidi(chord.root, 2),
quintet-rhythm-analysis.txt:2644:quintet_composer_v56_FINAL.html:372:                        noteToMidi(chord.notes[2], 2),
quintet-rhythm-analysis.txt:2645:quintet_composer_v56_FINAL.html:373:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2646:quintet_composer_v56_FINAL.html:374:                        noteToMidi(chord.notes[1], 3)
quintet-rhythm-analysis.txt:2647:quintet_composer_v56_FINAL.html:375:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2648:quintet_composer_v56_FINAL.html:377:                    measure.push({ notes: fullChord, duration: 4, isChord: true, volume: 0.5 });
quintet-rhythm-analysis.txt:2649:quintet_composer_v56_FINAL.html:380:                    const arpNotes = [
quintet-rhythm-analysis.txt:2650:quintet_composer_v56_FINAL.html:381:                        noteToMidi(chord.root, 2),
quintet-rhythm-analysis.txt:2651:quintet_composer_v56_FINAL.html:382:                        noteToMidi(chord.notes[2], 2),
quintet-rhythm-analysis.txt:2652:quintet_composer_v56_FINAL.html:383:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2653:quintet_composer_v56_FINAL.html:384:                        noteToMidi(chord.notes[1], 3),
quintet-rhythm-analysis.txt:2654:quintet_composer_v56_FINAL.html:385:                        noteToMidi(chord.notes[2], 3),
quintet-rhythm-analysis.txt:2655:quintet_composer_v56_FINAL.html:386:                        noteToMidi(chord.notes[0], 3)
quintet-rhythm-analysis.txt:2656:quintet_composer_v56_FINAL.html:387:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2657:quintet_composer_v56_FINAL.html:391:                        const noteIdx = pattern[i] % arpNotes.length;
quintet-rhythm-analysis.txt:2658:quintet_composer_v56_FINAL.html:393:                            notes: [arpNotes[noteIdx]],
quintet-rhythm-analysis.txt:2659:quintet_composer_v56_FINAL.html:410:            let lastNote = 69;
quintet-rhythm-analysis.txt:2660:quintet_composer_v56_FINAL.html:426:                            noteToMidi(chord.notes[0], 5),
quintet-rhythm-analysis.txt:2661:quintet_composer_v56_FINAL.html:427:                            noteToMidi(chord.notes[1], 5),
quintet-rhythm-analysis.txt:2662:quintet_composer_v56_FINAL.html:428:                            noteToMidi(chord.notes[2], 5),
quintet-rhythm-analysis.txt:2663:quintet_composer_v56_FINAL.html:429:                            noteToMidi(chord.notes[0], 6)
quintet-rhythm-analysis.txt:2664:quintet_composer_v56_FINAL.html:431:                        lastNote = chordMidis[Math.floor(Math.random() * chordMidis.length)];
quintet-rhythm-analysis.txt:2665:quintet_composer_v56_FINAL.html:434:                        lastNote = lastNote + (direction * 2);
quintet-rhythm-analysis.txt:2666:quintet_composer_v56_FINAL.html:437:                    lastNote = Math.max(RANGES.violin1.min, Math.min(RANGES.violin1.max, lastNote));
quintet-rhythm-analysis.txt:2667:quintet_composer_v56_FINAL.html:440:                        notes: [lastNote],
quintet-rhythm-analysis.txt:2668:quintet_composer_v56_FINAL.html:462:                const note = chord.notes[1];
quintet-rhythm-analysis.txt:2669:quintet_composer_v56_FINAL.html:466:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:2670:quintet_composer_v56_FINAL.html:468:                    measure.push({ notes: [noteToMidi(note, octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2671:quintet_composer_v56_FINAL.html:469:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2672:quintet_composer_v56_FINAL.html:486:                const notes = [chord.notes[2], chord.notes[0]];
quintet-rhythm-analysis.txt:2673:quintet_composer_v56_FINAL.html:488:                    [{ note: notes[0], duration: 2 }, { note: notes[1], duration: 2 }] :
quintet-rhythm-analysis.txt:2674:quintet_composer_v56_FINAL.html:489:                    [{ note: notes[1], duration: 4 }];
quintet-rhythm-analysis.txt:2675:quintet_composer_v56_FINAL.html:493:                        notes: [noteToMidi(p.note, 3)],
quintet-rhythm-analysis.txt:2676:quintet_composer_v56_FINAL.html:517:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2677:quintet_composer_v56_FINAL.html:518:                    measure.push({ notes: [noteToMidi(chord.notes[2], octave)], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2678:quintet_composer_v56_FINAL.html:520:                    measure.push({ notes: [noteToMidi(root, octave)], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:2679:quintet_composer_v56_FINAL.html:565:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:2680:quintet_composer_v56_FINAL.html:567:                                event.notes.forEach(note => {
quintet-rhythm-analysis.txt:2681:quintet_composer_v56_FINAL.html:568:                                    playNote(note, beatTime, event.duration * beatDuration, instrument, event.volume);
quintet-rhythm-analysis.txt:2682:quintet_composer_v56_FINAL.html:571:                                event.notes.forEach(note => {
quintet-rhythm-analysis.txt:2683:quintet_composer_v56_FINAL.html:572:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet-rhythm-analysis.txt:2684:quintet_composer_v56_FINAL.html:594:        function playNote(midi, startTime, duration, instrument, volume) {
quintet-rhythm-analysis.txt:2685:quintet_composer_v56_FINAL.html:706:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:2686:quintet_composer_v56_FINAL.html:707:                            if (event.isChord && event.notes.length > 1) {
quintet-rhythm-analysis.txt:2687:quintet_composer_v56_FINAL.html:708:                                event.notes.forEach((note, idx) => {
quintet-rhythm-analysis.txt:2688:quintet_composer_v56_FINAL.html:709:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet-rhythm-analysis.txt:2689:quintet_composer_v56_FINAL.html:710:                                    xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet-rhythm-analysis.txt:2690:quintet_composer_v56_FINAL.html:713:                                event.notes.forEach(note => {
quintet-rhythm-analysis.txt:2691:quintet_composer_v56_FINAL.html:714:                                    const adjustedNote = (p === 0) ? note + 12 : note;
quintet-rhythm-analysis.txt:2692:quintet_composer_v56_FINAL.html:715:                                    xml += createNoteXML(adjustedNote, event.duration * 256, false);
quintet-rhythm-analysis.txt:2693:quintet_composer_v56_FINAL.html:731:        function createNoteXML(midi, duration, isChordNote) {
quintet-rhythm-analysis.txt:2694:quintet_composer_v56_FINAL.html:732:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:2695:quintet_composer_v56_FINAL.html:734:            const noteIndex = midi % 12;
quintet-rhythm-analysis.txt:2696:quintet_composer_v56_FINAL.html:735:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:2697:quintet_composer_v56_FINAL.html:737:            let xml = '      <note>\n';
quintet-rhythm-analysis.txt:2698:quintet_composer_v56_FINAL.html:738:            if (isChordNote) {
quintet-rhythm-analysis.txt:2699:quintet_composer_v56_FINAL.html:742:            xml += `          <step>${noteName.replace('#', '')}</step>\n`;
quintet-rhythm-analysis.txt:2700:quintet_composer_v56_FINAL.html:743:            if (noteName.includes('#')) {
quintet-rhythm-analysis.txt:2701:quintet_composer_v56_FINAL.html:750:            xml += '      </note>\n';
quintet-rhythm-analysis.txt:2702:quintet_composer_v57_BULLETPROOF.html:192:            'C': { tonic: 'C', notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'], sharps: 0 },
quintet-rhythm-analysis.txt:2703:quintet_composer_v57_BULLETPROOF.html:193:            'G': { tonic: 'G', notes: ['G', 'A', 'B', 'C', 'D', 'E', 'F#'], sharps: 1 },
quintet-rhythm-analysis.txt:2704:quintet_composer_v57_BULLETPROOF.html:194:            'D': { tonic: 'D', notes: ['D', 'E', 'F#', 'G', 'A', 'B', 'C#'], sharps: 2 },
quintet-rhythm-analysis.txt:2705:quintet_composer_v57_BULLETPROOF.html:195:            'A': { tonic: 'A', notes: ['A', 'B', 'C#', 'D', 'E', 'F#', 'G#'], sharps: 3 },
quintet-rhythm-analysis.txt:2706:quintet_composer_v57_BULLETPROOF.html:196:            'F': { tonic: 'F', notes: ['F', 'G', 'A', 'Bb', 'C', 'D', 'E'], sharps: -1 }
quintet-rhythm-analysis.txt:2707:quintet_composer_v57_BULLETPROOF.html:208:        // Note to MIDI conversion
quintet-rhythm-analysis.txt:2708:quintet_composer_v57_BULLETPROOF.html:209:        function noteToMidi(note, octave) {
quintet-rhythm-analysis.txt:2709:quintet_composer_v57_BULLETPROOF.html:211:                const noteMap = { 'C': 0, 'D': 2, 'E': 4, 'F': 5, 'G': 7, 'A': 9, 'B': 11 };
quintet-rhythm-analysis.txt:2710:quintet_composer_v57_BULLETPROOF.html:212:                let midi = 12 + (octave * 12) + noteMap[note[0]];
quintet-rhythm-analysis.txt:2711:quintet_composer_v57_BULLETPROOF.html:213:                if (note.includes('#')) midi++;
quintet-rhythm-analysis.txt:2712:quintet_composer_v57_BULLETPROOF.html:214:                if (note.includes('b')) midi--;
quintet-rhythm-analysis.txt:2713:quintet_composer_v57_BULLETPROOF.html:217:                console.error('noteToMidi error:', e);
quintet-rhythm-analysis.txt:2714:quintet_composer_v57_BULLETPROOF.html:299:            const root = keyData.notes[degree - 1];
quintet-rhythm-analysis.txt:2715:quintet_composer_v57_BULLETPROOF.html:300:            const third = keyData.notes[(degree - 1 + 2) % 7];
quintet-rhythm-analysis.txt:2716:quintet_composer_v57_BULLETPROOF.html:301:            const fifth = keyData.notes[(degree - 1 + 4) % 7];
quintet-rhythm-analysis.txt:2717:quintet_composer_v57_BULLETPROOF.html:306:                notes: [root, third, fifth]
quintet-rhythm-analysis.txt:2718:quintet_composer_v57_BULLETPROOF.html:320:                        noteToMidi(chord.root, 2),
quintet-rhythm-analysis.txt:2719:quintet_composer_v57_BULLETPROOF.html:321:                        noteToMidi(chord.notes[2], 2),
quintet-rhythm-analysis.txt:2720:quintet_composer_v57_BULLETPROOF.html:322:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2721:quintet_composer_v57_BULLETPROOF.html:323:                        noteToMidi(chord.notes[1], 3)
quintet-rhythm-analysis.txt:2722:quintet_composer_v57_BULLETPROOF.html:324:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2723:quintet_composer_v57_BULLETPROOF.html:328:                            notes: voicing,
quintet-rhythm-analysis.txt:2724:quintet_composer_v57_BULLETPROOF.html:334:                    const bass = noteToMidi(chord.root, 2);
quintet-rhythm-analysis.txt:2725:quintet_composer_v57_BULLETPROOF.html:336:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2726:quintet_composer_v57_BULLETPROOF.html:337:                        noteToMidi(chord.notes[1], 3),
quintet-rhythm-analysis.txt:2727:quintet_composer_v57_BULLETPROOF.html:338:                        noteToMidi(chord.notes[2], 3)
quintet-rhythm-analysis.txt:2728:quintet_composer_v57_BULLETPROOF.html:339:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2729:quintet_composer_v57_BULLETPROOF.html:342:                        measure.push({ notes: [bass], duration: 0.5, isChord: false });
quintet-rhythm-analysis.txt:2730:quintet_composer_v57_BULLETPROOF.html:343:                        measure.push({ notes: treble, duration: 0.5, isChord: true });
quintet-rhythm-analysis.txt:2731:quintet_composer_v57_BULLETPROOF.html:348:                        noteToMidi(chord.root, 2),
quintet-rhythm-analysis.txt:2732:quintet_composer_v57_BULLETPROOF.html:349:                        noteToMidi(chord.notes[2], 2),
quintet-rhythm-analysis.txt:2733:quintet_composer_v57_BULLETPROOF.html:350:                        noteToMidi(chord.notes[0], 3),
quintet-rhythm-analysis.txt:2734:quintet_composer_v57_BULLETPROOF.html:351:                        noteToMidi(chord.notes[1], 3)
quintet-rhythm-analysis.txt:2735:quintet_composer_v57_BULLETPROOF.html:352:                    ].filter(note => note >= 40 && note <= 67);
quintet-rhythm-analysis.txt:2736:quintet_composer_v57_BULLETPROOF.html:356:                            notes: [arp[i % arp.length]],
quintet-rhythm-analysis.txt:2737:quintet_composer_v57_BULLETPROOF.html:378:                const base = noteToMidi(chord.notes[0], 5);
quintet-rhythm-analysis.txt:2738:quintet_composer_v57_BULLETPROOF.html:383:                        notes: [base, base + 4],
quintet-rhythm-analysis.txt:2739:quintet_composer_v57_BULLETPROOF.html:388:                        notes: [base + 2],
quintet-rhythm-analysis.txt:2740:quintet_composer_v57_BULLETPROOF.html:393:                    // Single notes
quintet-rhythm-analysis.txt:2741:quintet_composer_v57_BULLETPROOF.html:394:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2742:quintet_composer_v57_BULLETPROOF.html:395:                    measure.push({ notes: [base + 2], duration: 1, isChord: false });
quintet-rhythm-analysis.txt:2743:quintet_composer_v57_BULLETPROOF.html:396:                    measure.push({ notes: [base - 1], duration: 1, isChord: false });
quintet-rhythm-analysis.txt:2744:quintet_composer_v57_BULLETPROOF.html:413:                const base = noteToMidi(chord.notes[1], 4);
quintet-rhythm-analysis.txt:2745:quintet_composer_v57_BULLETPROOF.html:418:                        notes: [base, base + 3],
quintet-rhythm-analysis.txt:2746:quintet_composer_v57_BULLETPROOF.html:423:                    measure.push({ notes: [base], duration: 4, isChord: false });
quintet-rhythm-analysis.txt:2747:quintet_composer_v57_BULLETPROOF.html:440:                const base = noteToMidi(chord.notes[2], 3);
quintet-rhythm-analysis.txt:2748:quintet_composer_v57_BULLETPROOF.html:445:                        notes: [base, base + 5],
quintet-rhythm-analysis.txt:2749:quintet_composer_v57_BULLETPROOF.html:449:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2750:quintet_composer_v57_BULLETPROOF.html:451:                    measure.push({ notes: [base], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2751:quintet_composer_v57_BULLETPROOF.html:452:                    measure.push({ notes: [base + 2], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2752:quintet_composer_v57_BULLETPROOF.html:469:                const root = noteToMidi(chord.root, 2);
quintet-rhythm-analysis.txt:2753:quintet_composer_v57_BULLETPROOF.html:474:                        notes: [root, root + 12],
quintet-rhythm-analysis.txt:2754:quintet_composer_v57_BULLETPROOF.html:479:                    measure.push({ notes: [root], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2755:quintet_composer_v57_BULLETPROOF.html:480:                    measure.push({ notes: [root + 7], duration: 2, isChord: false });
quintet-rhythm-analysis.txt:2756:quintet_composer_v57_BULLETPROOF.html:537:                            if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:2757:quintet_composer_v57_BULLETPROOF.html:538:                                event.notes.forEach(note => {
quintet-rhythm-analysis.txt:2758:quintet_composer_v57_BULLETPROOF.html:539:                                    playNote(note, beatTime, event.duration * beatDuration, instrument);
quintet-rhythm-analysis.txt:2759:quintet_composer_v57_BULLETPROOF.html:565:        function playNote(midi, startTime, duration, instrument) {
quintet-rhythm-analysis.txt:2760:quintet_composer_v57_BULLETPROOF.html:604:                console.error('playNote error:', e);
quintet-rhythm-analysis.txt:2761:quintet_composer_v57_BULLETPROOF.html:677:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:2762:quintet_composer_v57_BULLETPROOF.html:678:                            event.notes.forEach((note, idx) => {
quintet-rhythm-analysis.txt:2763:quintet_composer_v57_BULLETPROOF.html:679:                                const adjustedNote = (p === 0) ? note + 12 : note;
quintet-rhythm-analysis.txt:2764:quintet_composer_v57_BULLETPROOF.html:680:                                xml += createNoteXML(adjustedNote, event.duration * 256, idx > 0);
quintet-rhythm-analysis.txt:2765:quintet_composer_v57_BULLETPROOF.html:695:        function createNoteXML(midi, duration, isChordNote) {
quintet-rhythm-analysis.txt:2766:quintet_composer_v57_BULLETPROOF.html:696:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:2767:quintet_composer_v57_BULLETPROOF.html:698:            const noteIndex = midi % 12;
quintet-rhythm-analysis.txt:2768:quintet_composer_v57_BULLETPROOF.html:699:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:2769:quintet_composer_v57_BULLETPROOF.html:701:            let xml = '      <note>\n';
quintet-rhythm-analysis.txt:2770:quintet_composer_v57_BULLETPROOF.html:702:            if (isChordNote) {
quintet-rhythm-analysis.txt:2771:quintet_composer_v57_BULLETPROOF.html:706:            xml += '          <step>' + noteName.replace('#', '') + '</step>\n';
quintet-rhythm-analysis.txt:2772:quintet_composer_v57_BULLETPROOF.html:707:            if (noteName.includes('#')) {
quintet-rhythm-analysis.txt:2773:quintet_composer_v57_BULLETPROOF.html:714:            xml += '      </note>\n';
quintet-rhythm-analysis.txt:3083:quintet_composer_v59_BULLETPROOF.html:207:                notes: [60, 62, 64, 65, 67, 69, 71],
quintet-rhythm-analysis.txt:3084:quintet_composer_v59_BULLETPROOF.html:218:                notes: [55, 57, 59, 60, 62, 64, 66],
quintet-rhythm-analysis.txt:3085:quintet_composer_v59_BULLETPROOF.html:229:                notes: [50, 52, 54, 55, 57, 59, 61],
quintet-rhythm-analysis.txt:3086:quintet_composer_v59_BULLETPROOF.html:240:                notes: [53, 55, 57, 58, 60, 62, 64],
quintet-rhythm-analysis.txt:3087:quintet_composer_v59_BULLETPROOF.html:286:                    [4]                  // whole note (occasionally)
quintet-rhythm-analysis.txt:3088:quintet_composer_v59_BULLETPROOF.html:292:                    // Phrase ending - longer note
quintet-rhythm-analysis.txt:3089:quintet_composer_v59_BULLETPROOF.html:305:                    let note;
quintet-rhythm-analysis.txt:3090:quintet_composer_v59_BULLETPROOF.html:308:                        note = chord[Math.floor(Math.random() * chord.length)] + 24;
quintet-rhythm-analysis.txt:3091:quintet_composer_v59_BULLETPROOF.html:311:                        note = keyData.notes[Math.floor(Math.random() * keyData.notes.length)] + 24;
quintet-rhythm-analysis.txt:3092:quintet_composer_v59_BULLETPROOF.html:315:                    while (note < 67) note += 12;
quintet-rhythm-analysis.txt:3093:quintet_composer_v59_BULLETPROOF.html:316:                    while (note > 88) note -= 12;
quintet-rhythm-analysis.txt:3094:quintet_composer_v59_BULLETPROOF.html:320:                        const lastNote = measureEvents[measureEvents.length - 1].notes[0];
quintet-rhythm-analysis.txt:3095:quintet_composer_v59_BULLETPROOF.html:321:                        if (Math.abs(note - lastNote) > 7) {
quintet-rhythm-analysis.txt:3096:quintet_composer_v59_BULLETPROOF.html:323:                            note = lastNote + (Math.random() < 0.5 ? 2 : -2);
quintet-rhythm-analysis.txt:3097:quintet_composer_v59_BULLETPROOF.html:328:                        notes: [note],
quintet-rhythm-analysis.txt:3098:quintet_composer_v59_BULLETPROOF.html:351:                // Select appropriate note from chord
quintet-rhythm-analysis.txt:3099:quintet_composer_v59_BULLETPROOF.html:352:                let noteIndex = 0;
quintet-rhythm-analysis.txt:3100:quintet_composer_v59_BULLETPROOF.html:353:                if (instrument === 'violin2') noteIndex = 1;  // Third
quintet-rhythm-analysis.txt:3101:quintet_composer_v59_BULLETPROOF.html:354:                if (instrument === 'viola') noteIndex = 2;     // Fifth
quintet-rhythm-analysis.txt:3102:quintet_composer_v59_BULLETPROOF.html:355:                if (instrument === 'cello') noteIndex = 0;     // Root
quintet-rhythm-analysis.txt:3103:quintet_composer_v59_BULLETPROOF.html:357:                let note = chord[noteIndex % chord.length];
quintet-rhythm-analysis.txt:3104:quintet_composer_v59_BULLETPROOF.html:361:                    note += 12;
quintet-rhythm-analysis.txt:3105:quintet_composer_v59_BULLETPROOF.html:362:                    while (note < 60 || note > 84) {
quintet-rhythm-analysis.txt:3106:quintet_composer_v59_BULLETPROOF.html:363:                        if (note < 60) note += 12;
quintet-rhythm-analysis.txt:3107:quintet_composer_v59_BULLETPROOF.html:364:                        if (note > 84) note -= 12;
quintet-rhythm-analysis.txt:3108:quintet_composer_v59_BULLETPROOF.html:367:                    while (note < 48 || note > 67) {
quintet-rhythm-analysis.txt:3109:quintet_composer_v59_BULLETPROOF.html:368:                        if (note < 48) note += 12;
quintet-rhythm-analysis.txt:3110:quintet_composer_v59_BULLETPROOF.html:369:                        if (note > 67) note -= 12;
quintet-rhythm-analysis.txt:3111:quintet_composer_v59_BULLETPROOF.html:372:                    note -= 12;
quintet-rhythm-analysis.txt:3112:quintet_composer_v59_BULLETPROOF.html:373:                    while (note < 36 || note > 60) {
quintet-rhythm-analysis.txt:3113:quintet_composer_v59_BULLETPROOF.html:374:                        if (note < 36) note += 12;
quintet-rhythm-analysis.txt:3114:quintet_composer_v59_BULLETPROOF.html:375:                        if (note > 60) note -= 12;
quintet-rhythm-analysis.txt:3115:quintet_composer_v59_BULLETPROOF.html:381:                    // Cadence point - two half notes
quintet-rhythm-analysis.txt:3116:quintet_composer_v59_BULLETPROOF.html:382:                    measureEvents.push({ notes: [note], duration: 2 });
quintet-rhythm-analysis.txt:3117:quintet_composer_v59_BULLETPROOF.html:383:                    measureEvents.push({ notes: [note - 2], duration: 2 });
quintet-rhythm-analysis.txt:3118:quintet_composer_v59_BULLETPROOF.html:385:                    // Whole note
quintet-rhythm-analysis.txt:3119:quintet_composer_v59_BULLETPROOF.html:386:                    measureEvents.push({ notes: [note], duration: 4 });
quintet-rhythm-analysis.txt:3120:quintet_composer_v59_BULLETPROOF.html:388:                    // Half notes
quintet-rhythm-analysis.txt:3121:quintet_composer_v59_BULLETPROOF.html:389:                    measureEvents.push({ notes: [note], duration: 2 });
quintet-rhythm-analysis.txt:3122:quintet_composer_v59_BULLETPROOF.html:390:                    measureEvents.push({ notes: [chord[0]], duration: 2 });
quintet-rhythm-analysis.txt:3123:quintet_composer_v59_BULLETPROOF.html:418:                    pattern.forEach(note => {
quintet-rhythm-analysis.txt:3124:quintet_composer_v59_BULLETPROOF.html:419:                        measureEvents.push({ notes: [note], duration: 1 });
quintet-rhythm-analysis.txt:3125:quintet_composer_v59_BULLETPROOF.html:423:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet-rhythm-analysis.txt:3126:quintet_composer_v59_BULLETPROOF.html:424:                    measureEvents.push({ notes: voicing, duration: 2, isChord: true });
quintet-rhythm-analysis.txt:3127:quintet_composer_v59_BULLETPROOF.html:427:                    voicing.forEach(note => {
quintet-rhythm-analysis.txt:3128:quintet_composer_v59_BULLETPROOF.html:428:                        measureEvents.push({ notes: [note], duration: 1 });
quintet-rhythm-analysis.txt:3129:quintet_composer_v59_BULLETPROOF.html:496:                            if (lastEvent && lastEvent.notes.length === 1) {
quintet-rhythm-analysis.txt:3130:quintet_composer_v59_BULLETPROOF.html:497:                                const baseNote = lastEvent.notes[0];
quintet-rhythm-analysis.txt:3131:quintet_composer_v59_BULLETPROOF.html:504:                                const secondNote = baseNote + interval;
quintet-rhythm-analysis.txt:3132:quintet_composer_v59_BULLETPROOF.html:506:                                if (secondNote <= range.max) {
quintet-rhythm-analysis.txt:3133:quintet_composer_v59_BULLETPROOF.html:507:                                    lastEvent.notes.push(secondNote);
quintet-rhythm-analysis.txt:3134:quintet_composer_v59_BULLETPROOF.html:539:            // Count actual notes
quintet-rhythm-analysis.txt:3135:quintet_composer_v59_BULLETPROOF.html:540:            let noteCount = 0;
quintet-rhythm-analysis.txt:3136:quintet_composer_v59_BULLETPROOF.html:546:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:3137:quintet_composer_v59_BULLETPROOF.html:547:                            noteCount++;
quintet-rhythm-analysis.txt:3138:quintet_composer_v59_BULLETPROOF.html:548:                            if (event.notes.length > 1) stopCount++;
quintet-rhythm-analysis.txt:3139:quintet_composer_v59_BULLETPROOF.html:554:            output += `<p><strong>Musical Content:</strong> ${noteCount} events generated</p>`;
quintet-rhythm-analysis.txt:3140:quintet_composer_v59_BULLETPROOF.html:556:            output += '<p><strong>✓</strong> Varied rhythms (not just whole notes)</p>';
quintet-rhythm-analysis.txt:3141:quintet_composer_v59_BULLETPROOF.html:590:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:3142:quintet_composer_v59_BULLETPROOF.html:591:                            event.notes.forEach(note => {
quintet-rhythm-analysis.txt:3143:quintet_composer_v59_BULLETPROOF.html:592:                                playNote(
quintet-rhythm-analysis.txt:3144:quintet_composer_v59_BULLETPROOF.html:593:                                    note,
quintet-rhythm-analysis.txt:3145:quintet_composer_v59_BULLETPROOF.html:617:        function playNote(midiNote, startTime, duration, instrument) {
quintet-rhythm-analysis.txt:3146:quintet_composer_v59_BULLETPROOF.html:618:            const freq = 440 * Math.pow(2, (midiNote - 69) / 12);
quintet-rhythm-analysis.txt:3147:quintet_composer_v59_BULLETPROOF.html:716:                        if (event.notes && event.notes.length > 0) {
quintet-rhythm-analysis.txt:3148:quintet_composer_v59_BULLETPROOF.html:717:                            event.notes.forEach((note, noteIndex) => {
quintet-rhythm-analysis.txt:3149:quintet_composer_v59_BULLETPROOF.html:718:                                xml += '      <note>\n';
quintet-rhythm-analysis.txt:3150:quintet_composer_v59_BULLETPROOF.html:720:                                if (noteIndex > 0) {
quintet-rhythm-analysis.txt:3151:quintet_composer_v59_BULLETPROOF.html:724:                                let displayNote = note;
quintet-rhythm-analysis.txt:3152:quintet_composer_v59_BULLETPROOF.html:726:                                    displayNote = note + 12;
quintet-rhythm-analysis.txt:3153:quintet_composer_v59_BULLETPROOF.html:729:                                const pitchInfo = midiToPitch(displayNote);
quintet-rhythm-analysis.txt:3154:quintet_composer_v59_BULLETPROOF.html:738:                                xml += `        <type>${getNoteType(event.duration)}</type>\n`;
quintet-rhythm-analysis.txt:3155:quintet_composer_v59_BULLETPROOF.html:739:                                xml += '      </note>\n';
quintet-rhythm-analysis.txt:3156:quintet_composer_v59_BULLETPROOF.html:763:        function midiToPitch(midiNote) {
quintet-rhythm-analysis.txt:3157:quintet_composer_v59_BULLETPROOF.html:764:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:3158:quintet_composer_v59_BULLETPROOF.html:765:            const octave = Math.floor(midiNote / 12) - 1;
quintet-rhythm-analysis.txt:3159:quintet_composer_v59_BULLETPROOF.html:766:            const noteIndex = midiNote % 12;
quintet-rhythm-analysis.txt:3160:quintet_composer_v59_BULLETPROOF.html:767:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:3161:quintet_composer_v59_BULLETPROOF.html:769:            let step = noteName[0];
quintet-rhythm-analysis.txt:3162:quintet_composer_v59_BULLETPROOF.html:771:            if (noteName.includes('#')) {
quintet-rhythm-analysis.txt:3163:quintet_composer_v59_BULLETPROOF.html:778:        function getNoteType(duration) {
quintet-rhythm-analysis.txt:3164:quintet_composer_v59_BULLETPROOF_RESTORED.html:6:    <title>String Quintet Composer v59 - BULLETPROOF RESTORED</title>
quintet-rhythm-analysis.txt:3165:quintet_composer_v59_BULLETPROOF_RESTORED.html:122:        <div class="version">Version 59 - BULLETPROOF RESTORED (Last Known Good)</div>
quintet-rhythm-analysis.txt:3166:quintet_composer_v59_BULLETPROOF_RESTORED.html:210:            'C': { notes: [60, 62, 64, 65, 67, 69, 71], chords: [[60,64,67], [62,65,69], [64,67,71], [65,69,72], [67,71,74], [69,72,76], [71,74,77]] },
quintet-rhythm-analysis.txt:3167:quintet_composer_v59_BULLETPROOF_RESTORED.html:211:            'G': { notes: [55, 57, 59, 60, 62, 64, 66], chords: [[55,59,62], [57,60,64], [59,62,66], [60,64,67], [62,66,69], [64,67,71], [66,69,73]] },
quintet-rhythm-analysis.txt:3168:quintet_composer_v59_BULLETPROOF_RESTORED.html:212:            'D': { notes: [50, 52, 54, 55, 57, 59, 61], chords: [[50,54,57], [52,55,59], [54,57,61], [55,59,62], [57,61,64], [59,62,66], [61,64,68]] },
quintet-rhythm-analysis.txt:3169:quintet_composer_v59_BULLETPROOF_RESTORED.html:213:            'A': { notes: [57, 59, 61, 62, 64, 66, 68], chords: [[57,61,64], [59,62,66], [61,64,68], [62,66,69], [64,68,71], [66,69,73], [68,71,75]] },
quintet-rhythm-analysis.txt:3170:quintet_composer_v59_BULLETPROOF_RESTORED.html:214:            'F': { notes: [53, 55, 57, 58, 60, 62, 64], chords: [[53,57,60], [55,58,62], [57,60,64], [58,62,65], [60,64,67], [62,65,69], [64,67,71]] },
quintet-rhythm-analysis.txt:3171:quintet_composer_v59_BULLETPROOF_RESTORED.html:215:            'Bb': { notes: [58, 60, 62, 63, 65, 67, 69], chords: [[58,62,65], [60,63,67], [62,65,69], [63,67,70], [65,69,72], [67,70,74], [69,72,76]] },
quintet-rhythm-analysis.txt:3172:quintet_composer_v59_BULLETPROOF_RESTORED.html:216:            'Am': { notes: [57, 59, 60, 62, 64, 65, 67], chords: [[57,60,64], [59,62,65], [60,64,67], [62,65,69], [64,67,71], [65,69,72], [67,71,74]] },
quintet-rhythm-analysis.txt:3173:quintet_composer_v59_BULLETPROOF_RESTORED.html:217:            'Em': { notes: [52, 54, 55, 57, 59, 60, 62], chords: [[52,55,59], [54,57,60], [55,59,62], [57,60,64], [59,62,66], [60,64,67], [62,66,69]] },
quintet-rhythm-analysis.txt:3174:quintet_composer_v59_BULLETPROOF_RESTORED.html:218:            'Dm': { notes: [50, 52, 53, 55, 57, 58, 60], chords: [[50,53,57], [52,55,58], [53,57,60], [55,58,62], [57,60,64], [58,62,65], [60,64,67]] }
quintet-rhythm-analysis.txt:3175:quintet_composer_v59_BULLETPROOF_RESTORED.html:313:                    const notes = [chord[0] - 12, chord[2] - 12, chord[1] - 12, chord[2] - 12];
quintet-rhythm-analysis.txt:3176:quintet_composer_v59_BULLETPROOF_RESTORED.html:316:                            notes: [notes[i]],
quintet-rhythm-analysis.txt:3177:quintet_composer_v59_BULLETPROOF_RESTORED.html:324:                        notes: chord.map(n => n - 12),
quintet-rhythm-analysis.txt:3178:quintet_composer_v59_BULLETPROOF_RESTORED.html:329:                        notes: chord.map(n => n - 12),
quintet-rhythm-analysis.txt:3179:quintet_composer_v59_BULLETPROOF_RESTORED.html:335:                    chord.forEach(note => {
quintet-rhythm-analysis.txt:3180:quintet_composer_v59_BULLETPROOF_RESTORED.html:337:                            notes: [note - 12],
quintet-rhythm-analysis.txt:3181:quintet_composer_v59_BULLETPROOF_RESTORED.html:362:                let prevNote = chord[0] + 12;
quintet-rhythm-analysis.txt:3182:quintet_composer_v59_BULLETPROOF_RESTORED.html:369:                    let note;
quintet-rhythm-analysis.txt:3183:quintet_composer_v59_BULLETPROOF_RESTORED.html:371:                        note = chord[Math.floor(Math.random() * chord.length)] + 12;
quintet-rhythm-analysis.txt:3184:quintet_composer_v59_BULLETPROOF_RESTORED.html:373:                        const scaleNote = keyData.notes[Math.floor(Math.random() * keyData.notes.length)];
quintet-rhythm-analysis.txt:3185:quintet_composer_v59_BULLETPROOF_RESTORED.html:374:                        note = scaleNote + 12;
quintet-rhythm-analysis.txt:3186:quintet_composer_v59_BULLETPROOF_RESTORED.html:378:                    while (note < range[0]) note += 12;
quintet-rhythm-analysis.txt:3187:quintet_composer_v59_BULLETPROOF_RESTORED.html:379:                    while (note > range[1]) note -= 12;
quintet-rhythm-analysis.txt:3188:quintet_composer_v59_BULLETPROOF_RESTORED.html:382:                        notes: [note],
quintet-rhythm-analysis.txt:3189:quintet_composer_v59_BULLETPROOF_RESTORED.html:390:                        event.notes.push(note + interval);
quintet-rhythm-analysis.txt:3190:quintet_composer_v59_BULLETPROOF_RESTORED.html:396:                    prevNote = note;
quintet-rhythm-analysis.txt:3191:quintet_composer_v59_BULLETPROOF_RESTORED.html:414:                // Simpler harmony - mostly whole and half notes
quintet-rhythm-analysis.txt:3192:quintet_composer_v59_BULLETPROOF_RESTORED.html:415:                const chordNote = chord[1]; // Take the third
quintet-rhythm-analysis.txt:3193:quintet_composer_v59_BULLETPROOF_RESTORED.html:416:                let note = chordNote;
quintet-rhythm-analysis.txt:3194:quintet_composer_v59_BULLETPROOF_RESTORED.html:420:                    note = chordNote - 12;
quintet-rhythm-analysis.txt:3195:quintet_composer_v59_BULLETPROOF_RESTORED.html:423:                while (note < range[0]) note += 12;
quintet-rhythm-analysis.txt:3196:quintet_composer_v59_BULLETPROOF_RESTORED.html:424:                while (note > range[1]) note -= 12;
quintet-rhythm-analysis.txt:3197:quintet_composer_v59_BULLETPROOF_RESTORED.html:427:                    notes: [note],
quintet-rhythm-analysis.txt:3198:quintet_composer_v59_BULLETPROOF_RESTORED.html:435:                    event.notes.push(note + interval);
quintet-rhythm-analysis.txt:3199:quintet_composer_v59_BULLETPROOF_RESTORED.html:460:                    notes: [root],
quintet-rhythm-analysis.txt:3200:quintet_composer_v59_BULLETPROOF_RESTORED.html:465:                const secondNote = {
quintet-rhythm-analysis.txt:3201:quintet_composer_v59_BULLETPROOF_RESTORED.html:466:                    notes: [fifth],
quintet-rhythm-analysis.txt:3202:quintet_composer_v59_BULLETPROOF_RESTORED.html:473:                    secondNote.notes.push(root + 12);
quintet-rhythm-analysis.txt:3203:quintet_composer_v59_BULLETPROOF_RESTORED.html:474:                    secondNote.isMultipleStop = true;
quintet-rhythm-analysis.txt:3204:quintet_composer_v59_BULLETPROOF_RESTORED.html:477:                measure.push(secondNote);
quintet-rhythm-analysis.txt:3205:quintet_composer_v59_BULLETPROOF_RESTORED.html:491:                const noteCount = part.reduce((sum, measure) => 
quintet-rhythm-analysis.txt:3206:quintet_composer_v59_BULLETPROOF_RESTORED.html:492:                    sum + measure.reduce((mSum, event) => mSum + event.notes.length, 0), 0);
quintet-rhythm-analysis.txt:3207:quintet_composer_v59_BULLETPROOF_RESTORED.html:493:                output += `<li><strong>${INSTRUMENTS[instrument].name}:</strong> ${noteCount} notes</li>`;
quintet-rhythm-analysis.txt:3208:quintet_composer_v59_BULLETPROOF_RESTORED.html:519:                        event.notes.forEach((note, idx) => {
quintet-rhythm-analysis.txt:3209:quintet_composer_v59_BULLETPROOF_RESTORED.html:520:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet-rhythm-analysis.txt:3210:quintet_composer_v59_BULLETPROOF_RESTORED.html:533:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet-rhythm-analysis.txt:3211:quintet_composer_v59_BULLETPROOF_RESTORED.html:613:                // Notes for first measure
quintet-rhythm-analysis.txt:3212:quintet_composer_v59_BULLETPROOF_RESTORED.html:615:                    event.notes.forEach((note, noteIdx) => {
quintet-rhythm-analysis.txt:3213:quintet_composer_v59_BULLETPROOF_RESTORED.html:616:                        const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet-rhythm-analysis.txt:3214:quintet_composer_v59_BULLETPROOF_RESTORED.html:617:                        const { step, alter, octave } = midiToNote(adjustedNote);
quintet-rhythm-analysis.txt:3215:quintet_composer_v59_BULLETPROOF_RESTORED.html:619:                        xml += '      <note>\n';
quintet-rhythm-analysis.txt:3216:quintet_composer_v59_BULLETPROOF_RESTORED.html:620:                        if (noteIdx > 0) xml += '        <chord/>\n';
quintet-rhythm-analysis.txt:3217:quintet_composer_v59_BULLETPROOF_RESTORED.html:624:                        xml += '      </note>\n';
quintet-rhythm-analysis.txt:3218:quintet_composer_v59_BULLETPROOF_RESTORED.html:635:                        event.notes.forEach((note, noteIdx) => {
quintet-rhythm-analysis.txt:3219:quintet_composer_v59_BULLETPROOF_RESTORED.html:636:                            const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet-rhythm-analysis.txt:3220:quintet_composer_v59_BULLETPROOF_RESTORED.html:637:                            const { step, alter, octave } = midiToNote(adjustedNote);
quintet-rhythm-analysis.txt:3221:quintet_composer_v59_BULLETPROOF_RESTORED.html:639:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:3222:quintet_composer_v59_BULLETPROOF_RESTORED.html:640:                            if (noteIdx > 0) xml += '        <chord/>\n';
quintet-rhythm-analysis.txt:3223:quintet_composer_v59_BULLETPROOF_RESTORED.html:644:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:3224:quintet_composer_v59_BULLETPROOF_RESTORED.html:666:        function midiToNote(midi) {
quintet-rhythm-analysis.txt:3225:quintet_composer_v59_BULLETPROOF_RESTORED.html:667:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:3226:quintet_composer_v59_BULLETPROOF_RESTORED.html:669:            const noteIndex = midi % 12;
quintet-rhythm-analysis.txt:3227:quintet_composer_v59_BULLETPROOF_RESTORED.html:670:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:3228:quintet_composer_v59_BULLETPROOF_RESTORED.html:673:                step: noteName.replace('#', ''),
quintet-rhythm-analysis.txt:3229:quintet_composer_v59_BULLETPROOF_RESTORED.html:674:                alter: noteName.includes('#') ? 1 : 0,
quintet-rhythm-analysis.txt:3230:quintet_composer_v60_ACTUALLY_WORKING.html:389:                const chordNotes = keyData.chords[actualSymbol] || keyData.chords[chordSymbol] || keyData.chords['I'];
quintet-rhythm-analysis.txt:3231:quintet_composer_v60_ACTUALLY_WORKING.html:393:                    notes: chordNotes
quintet-rhythm-analysis.txt:3232:quintet_composer_v60_ACTUALLY_WORKING.html:405:                const chordNotes = progression[m].notes;
quintet-rhythm-analysis.txt:3233:quintet_composer_v60_ACTUALLY_WORKING.html:409:                chordNotes.forEach(note => {
quintet-rhythm-analysis.txt:3234:quintet_composer_v60_ACTUALLY_WORKING.html:410:                    let guitarNote = note;
quintet-rhythm-analysis.txt:3235:quintet_composer_v60_ACTUALLY_WORKING.html:412:                    while (guitarNote > 76) guitarNote -= 12;
quintet-rhythm-analysis.txt:3236:quintet_composer_v60_ACTUALLY_WORKING.html:413:                    while (guitarNote < 40) guitarNote += 12;
quintet-rhythm-analysis.txt:3237:quintet_composer_v60_ACTUALLY_WORKING.html:414:                    guitarChord.push(guitarNote);
quintet-rhythm-analysis.txt:3238:quintet_composer_v60_ACTUALLY_WORKING.html:417:                // Add additional notes for fuller voicing
quintet-rhythm-analysis.txt:3239:quintet_composer_v60_ACTUALLY_WORKING.html:425:                        notes: guitarChord,
quintet-rhythm-analysis.txt:3240:quintet_composer_v60_ACTUALLY_WORKING.html:430:                        notes: guitarChord,
quintet-rhythm-analysis.txt:3241:quintet_composer_v60_ACTUALLY_WORKING.html:438:                            notes: [guitarChord[i % guitarChord.length]],
quintet-rhythm-analysis.txt:3242:quintet_composer_v60_ACTUALLY_WORKING.html:444:                    // Fingerstyle - bass note then chord
quintet-rhythm-analysis.txt:3243:quintet_composer_v60_ACTUALLY_WORKING.html:446:                        notes: [guitarChord[0]],
quintet-rhythm-analysis.txt:3244:quintet_composer_v60_ACTUALLY_WORKING.html:451:                        notes: guitarChord.slice(1),
quintet-rhythm-analysis.txt:3245:quintet_composer_v60_ACTUALLY_WORKING.html:456:                        notes: [guitarChord[0] + 7],
quintet-rhythm-analysis.txt:3246:quintet_composer_v60_ACTUALLY_WORKING.html:461:                        notes: guitarChord.slice(1),
quintet-rhythm-analysis.txt:3247:quintet_composer_v60_ACTUALLY_WORKING.html:480:                const chordNotes = progression[m].notes;
quintet-rhythm-analysis.txt:3248:quintet_composer_v60_ACTUALLY_WORKING.html:491:                    // Use chord tones and passing notes
quintet-rhythm-analysis.txt:3249:quintet_composer_v60_ACTUALLY_WORKING.html:492:                    let note;
quintet-rhythm-analysis.txt:3250:quintet_composer_v60_ACTUALLY_WORKING.html:495:                        note = chordNotes[Math.floor(Math.random() * chordNotes.length)];
quintet-rhythm-analysis.txt:3251:quintet_composer_v60_ACTUALLY_WORKING.html:498:                        note = keyData.scale[Math.floor(Math.random() * keyData.scale.length)];
quintet-rhythm-analysis.txt:3252:quintet_composer_v60_ACTUALLY_WORKING.html:502:                    while (note < range[0]) note += 12;
quintet-rhythm-analysis.txt:3253:quintet_composer_v60_ACTUALLY_WORKING.html:503:                    while (note > range[1]) note -= 12;
quintet-rhythm-analysis.txt:3254:quintet_composer_v60_ACTUALLY_WORKING.html:506:                        notes: [note],
quintet-rhythm-analysis.txt:3255:quintet_composer_v60_ACTUALLY_WORKING.html:526:                const chordNotes = progression[m].notes;
quintet-rhythm-analysis.txt:3256:quintet_composer_v60_ACTUALLY_WORKING.html:529:                const third = chordNotes[1]; // Get the third of the chord
quintet-rhythm-analysis.txt:3257:quintet_composer_v60_ACTUALLY_WORKING.html:530:                let note = third;
quintet-rhythm-analysis.txt:3258:quintet_composer_v60_ACTUALLY_WORKING.html:533:                while (note < range[0]) note += 12;
quintet-rhythm-analysis.txt:3259:quintet_composer_v60_ACTUALLY_WORKING.html:534:                while (note > range[1]) note -= 12;
quintet-rhythm-analysis.txt:3260:quintet_composer_v60_ACTUALLY_WORKING.html:536:                // Mix of half notes and quarter notes
quintet-rhythm-analysis.txt:3261:quintet_composer_v60_ACTUALLY_WORKING.html:539:                        notes: [note],
quintet-rhythm-analysis.txt:3262:quintet_composer_v60_ACTUALLY_WORKING.html:544:                        notes: [note + 2],
quintet-rhythm-analysis.txt:3263:quintet_composer_v60_ACTUALLY_WORKING.html:550:                        notes: [note],
quintet-rhythm-analysis.txt:3264:quintet_composer_v60_ACTUALLY_WORKING.html:568:                const chordNotes = progression[m].notes;
quintet-rhythm-analysis.txt:3265:quintet_composer_v60_ACTUALLY_WORKING.html:571:                const fifth = chordNotes[2];
quintet-rhythm-analysis.txt:3266:quintet_composer_v60_ACTUALLY_WORKING.html:572:                let note = fifth - 12; // Viola typically an octave lower
quintet-rhythm-analysis.txt:3267:quintet_composer_v60_ACTUALLY_WORKING.html:575:                while (note < range[0]) note += 12;
quintet-rhythm-analysis.txt:3268:quintet_composer_v60_ACTUALLY_WORKING.html:576:                while (note > range[1]) note -= 12;
quintet-rhythm-analysis.txt:3269:quintet_composer_v60_ACTUALLY_WORKING.html:579:                    notes: [note],
quintet-rhythm-analysis.txt:3270:quintet_composer_v60_ACTUALLY_WORKING.html:596:                const chordNotes = progression[m].notes;
quintet-rhythm-analysis.txt:3271:quintet_composer_v60_ACTUALLY_WORKING.html:599:                const root = chordNotes[0] - 12; // Cello plays bass
quintet-rhythm-analysis.txt:3272:quintet_composer_v60_ACTUALLY_WORKING.html:600:                const fifth = chordNotes[2] - 12;
quintet-rhythm-analysis.txt:3273:quintet_composer_v60_ACTUALLY_WORKING.html:603:                let bassNote = root;
quintet-rhythm-analysis.txt:3274:quintet_composer_v60_ACTUALLY_WORKING.html:604:                while (bassNote < 36) bassNote += 12;
quintet-rhythm-analysis.txt:3275:quintet_composer_v60_ACTUALLY_WORKING.html:605:                while (bassNote > 76) bassNote -= 12;
quintet-rhythm-analysis.txt:3276:quintet_composer_v60_ACTUALLY_WORKING.html:607:                let fifthNote = fifth;
quintet-rhythm-analysis.txt:3277:quintet_composer_v60_ACTUALLY_WORKING.html:608:                while (fifthNote < 36) fifthNote += 12;
quintet-rhythm-analysis.txt:3278:quintet_composer_v60_ACTUALLY_WORKING.html:609:                while (fifthNote > 76) fifthNote -= 12;
quintet-rhythm-analysis.txt:3279:quintet_composer_v60_ACTUALLY_WORKING.html:613:                    notes: [bassNote],
quintet-rhythm-analysis.txt:3280:quintet_composer_v60_ACTUALLY_WORKING.html:618:                    notes: [fifthNote],
quintet-rhythm-analysis.txt:3281:quintet_composer_v60_ACTUALLY_WORKING.html:636:                let noteCount = 0;
quintet-rhythm-analysis.txt:3282:quintet_composer_v60_ACTUALLY_WORKING.html:642:                            noteCount += event.notes.length;
quintet-rhythm-analysis.txt:3283:quintet_composer_v60_ACTUALLY_WORKING.html:644:                            noteCount += event.notes.length;
quintet-rhythm-analysis.txt:3284:quintet_composer_v60_ACTUALLY_WORKING.html:650:                output += `<li><strong>${INSTRUMENTS[instrument].name}:</strong> ${noteCount} notes${chordInfo}</li>`;
quintet-rhythm-analysis.txt:3285:quintet_composer_v60_ACTUALLY_WORKING.html:676:                        event.notes.forEach((note, idx) => {
quintet-rhythm-analysis.txt:3286:quintet_composer_v60_ACTUALLY_WORKING.html:677:                            playNote(note, currentTime, event.duration * beatDuration, instrument, idx > 0);
quintet-rhythm-analysis.txt:3287:quintet_composer_v60_ACTUALLY_WORKING.html:690:        function playNote(midi, startTime, duration, instrument, isHarmonic = false) {
quintet-rhythm-analysis.txt:3288:quintet_composer_v60_ACTUALLY_WORKING.html:770:                // Notes for all measures
quintet-rhythm-analysis.txt:3289:quintet_composer_v60_ACTUALLY_WORKING.html:777:                        event.notes.forEach((note, noteIdx) => {
quintet-rhythm-analysis.txt:3290:quintet_composer_v60_ACTUALLY_WORKING.html:779:                            const adjustedNote = inst === 'guitar' ? note + 12 : note;
quintet-rhythm-analysis.txt:3291:quintet_composer_v60_ACTUALLY_WORKING.html:780:                            const { step, alter, octave } = midiToNote(adjustedNote);
quintet-rhythm-analysis.txt:3292:quintet_composer_v60_ACTUALLY_WORKING.html:782:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:3293:quintet_composer_v60_ACTUALLY_WORKING.html:783:                            if (noteIdx > 0) xml += '        <chord/>\n';
quintet-rhythm-analysis.txt:3294:quintet_composer_v60_ACTUALLY_WORKING.html:787:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:3295:quintet_composer_v60_ACTUALLY_WORKING.html:809:        function midiToNote(midi) {
quintet-rhythm-analysis.txt:3296:quintet_composer_v60_ACTUALLY_WORKING.html:810:            const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
quintet-rhythm-analysis.txt:3297:quintet_composer_v60_ACTUALLY_WORKING.html:812:            const noteIndex = midi % 12;
quintet-rhythm-analysis.txt:3298:quintet_composer_v60_ACTUALLY_WORKING.html:813:            const noteName = noteNames[noteIndex];
quintet-rhythm-analysis.txt:3299:quintet_composer_v60_ACTUALLY_WORKING.html:816:                step: noteName.replace('#', ''),
quintet-rhythm-analysis.txt:3300:quintet_composer_v60_ACTUALLY_WORKING.html:817:                alter: noteName.includes('#') ? 1 : 0,
quintet-rhythm-analysis.txt:3452:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:206:                <div class="stat-value" id="statNotes">0</div>
quintet-rhythm-analysis.txt:3453:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:207:                <div class="stat-label">Total Notes</div>
quintet-rhythm-analysis.txt:3454:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:546:                const keyNotes = this.getKeyNotes(key);
quintet-rhythm-analysis.txt:3455:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:552:                    const chord = this.getChordNotes(key, chordSymbol);
quintet-rhythm-analysis.txt:3456:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:555:                    this.composition.parts.violin1.push(this.generateMelody(chord, keyNotes, profile));
quintet-rhythm-analysis.txt:3457:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:563:            getKeyNotes(key) {
quintet-rhythm-analysis.txt:3458:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:564:                // BULLETPROOF: Return scale notes for the key
quintet-rhythm-analysis.txt:3459:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:580:            getChordNotes(key, chordSymbol) {
quintet-rhythm-analysis.txt:3460:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:581:                // BULLETPROOF: Get chord notes safely
quintet-rhythm-analysis.txt:3461:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:582:                const keyNotes = this.getKeyNotes(key);
quintet-rhythm-analysis.txt:3462:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:584:                const root = keyNotes[rootIndex];
quintet-rhythm-analysis.txt:3463:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:587:                const third = keyNotes[(rootIndex + 2) % 7];
quintet-rhythm-analysis.txt:3464:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:588:                const fifth = keyNotes[(rootIndex + 4) % 7];
quintet-rhythm-analysis.txt:3465:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:613:                const notes = [];
quintet-rhythm-analysis.txt:3466:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:617:                    const noteIndex = Math.floor(Math.random() * scale.length);
quintet-rhythm-analysis.txt:3467:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:619:                    notes.push({
quintet-rhythm-analysis.txt:3468:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:620:                        pitch: scale[noteIndex],
quintet-rhythm-analysis.txt:3469:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:626:                return notes;
quintet-rhythm-analysis.txt:3470:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:650:                return chord.map(note => ({
quintet-rhythm-analysis.txt:3471:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:651:                    pitch: note,
quintet-rhythm-analysis.txt:3472:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:736:                        // Add notes for first measure
quintet-rhythm-analysis.txt:3473:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:738:                            this.composition.parts[partName][0].forEach(note => {
quintet-rhythm-analysis.txt:3474:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:739:                                xml += this.noteToMusicXML(note, divisions);
quintet-rhythm-analysis.txt:3475:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:749:                                this.composition.parts[partName][m].forEach(note => {
quintet-rhythm-analysis.txt:3476:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:750:                                    xml += this.noteToMusicXML(note, divisions);
quintet-rhythm-analysis.txt:3477:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:777:            noteToMusicXML(note, divisions) {
quintet-rhythm-analysis.txt:3478:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:778:                // BULLETPROOF: Convert note to MusicXML safely
quintet-rhythm-analysis.txt:3479:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:779:                let xml = '      <note>\n';
quintet-rhythm-analysis.txt:3480:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:781:                if (note.rest) {
quintet-rhythm-analysis.txt:3481:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:782:                    xml += '        <rest/>\n';
quintet-rhythm-analysis.txt:3482:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:785:                    xml += `          <step>${this.escapeXML(note.pitch.charAt(0))}</step>\n`;
quintet-rhythm-analysis.txt:3483:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:787:                    if (note.pitch.includes('#')) {
quintet-rhythm-analysis.txt:3484:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:789:                    } else if (note.pitch.includes('b')) {
quintet-rhythm-analysis.txt:3485:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:793:                    xml += `          <octave>${note.octave}</octave>\n`;
quintet-rhythm-analysis.txt:3486:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:797:                xml += `        <duration>${note.duration}</duration>\n`;
quintet-rhythm-analysis.txt:3487:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:798:                xml += `        <type>${this.durationToType(note.duration)}</type>\n`;
quintet-rhythm-analysis.txt:3488:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:799:                xml += '      </note>\n';
quintet-rhythm-analysis.txt:3489:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:805:                // BULLETPROOF: Map duration to note type
quintet-rhythm-analysis.txt:3490:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:817:                let totalNotes = 0;
quintet-rhythm-analysis.txt:3491:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:825:                            totalNotes += measure.length;
quintet-rhythm-analysis.txt:3492:quintet_composer_v61_SIBELIUS_BULLETPROOF.html:830:                document.getElementById('statNotes').textContent = totalNotes;
quintet-rhythm-analysis.txt:3886:quintet_composer_v7_final.html:105:        .instrument-card .note-count {
quintet-rhythm-analysis.txt:3887:quintet_composer_v7_final.html:164:                <label for="noteType">Rhythm Pattern:</label>
quintet-rhythm-analysis.txt:3888:quintet_composer_v7_final.html:165:                <select id="noteType">
quintet-rhythm-analysis.txt:3889:quintet_composer_v7_final.html:166:                    <option value="simple">Simple (Quarter notes)</option>
quintet-rhythm-analysis.txt:3890:quintet_composer_v7_final.html:184:                <div class="note-count" id="guitar-count">-</div>
quintet-rhythm-analysis.txt:3891:quintet_composer_v7_final.html:188:                <div class="note-count" id="violin1-count">-</div>
quintet-rhythm-analysis.txt:3892:quintet_composer_v7_final.html:192:                <div class="note-count" id="violin2-count">-</div>
quintet-rhythm-analysis.txt:3893:quintet_composer_v7_final.html:196:                <div class="note-count" id="viola-count">-</div>
quintet-rhythm-analysis.txt:3894:quintet_composer_v7_final.html:200:                <div class="note-count" id="cello-count">-</div>
quintet-rhythm-analysis.txt:3895:quintet_composer_v7_final.html:235:                var noteType = document.getElementById('noteType').value;
quintet-rhythm-analysis.txt:3896:quintet_composer_v7_final.html:255:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:3897:quintet_composer_v7_final.html:257:                // Generate notes for each instrument
quintet-rhythm-analysis.txt:3898:quintet_composer_v7_final.html:259:                    var notes = [];
quintet-rhythm-analysis.txt:3899:quintet_composer_v7_final.html:264:                        // Helper function to add a note
quintet-rhythm-analysis.txt:3900:quintet_composer_v7_final.html:265:                        function addNote(startBeat, duration, vel) {
quintet-rhythm-analysis.txt:3901:quintet_composer_v7_final.html:283:                            notes.push({
quintet-rhythm-analysis.txt:3902:quintet_composer_v7_final.html:293:                        if (noteType === 'simple') {
quintet-rhythm-analysis.txt:3903:quintet_composer_v7_final.html:294:                            // 4 quarter notes
quintet-rhythm-analysis.txt:3904:quintet_composer_v7_final.html:296:                                addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:3905:quintet_composer_v7_final.html:298:                        } else if (noteType === 'moderate') {
quintet-rhythm-analysis.txt:3906:quintet_composer_v7_final.html:299:                            // Half note + 2 quarters
quintet-rhythm-analysis.txt:3907:quintet_composer_v7_final.html:300:                            addNote(0, divisions * 2, velocity);
quintet-rhythm-analysis.txt:3908:quintet_composer_v7_final.html:301:                            addNote(divisions * 2, divisions, velocity);
quintet-rhythm-analysis.txt:3909:quintet_composer_v7_final.html:302:                            addNote(divisions * 3, divisions, velocity);
quintet-rhythm-analysis.txt:3910:quintet_composer_v7_final.html:303:                        } else if (noteType === 'complex') {
quintet-rhythm-analysis.txt:3911:quintet_composer_v7_final.html:310:                                        addNote(b * divisions, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:3912:quintet_composer_v7_final.html:312:                                        addNote(b * divisions + divisions * 0.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:3913:quintet_composer_v7_final.html:314:                                        addNote(b * divisions, divisions, velocity);
quintet-rhythm-analysis.txt:3914:quintet_composer_v7_final.html:319:                                addNote(divisions * 0.5, divisions, velocity);
quintet-rhythm-analysis.txt:3915:quintet_composer_v7_final.html:320:                                addNote(divisions * 1.5, divisions, velocity);
quintet-rhythm-analysis.txt:3916:quintet_composer_v7_final.html:321:                                addNote(divisions * 2.5, divisions * 1.5, velocity);
quintet-rhythm-analysis.txt:3917:quintet_composer_v7_final.html:324:                                addNote(0, divisions, velocity);
quintet-rhythm-analysis.txt:3918:quintet_composer_v7_final.html:325:                                addNote(divisions, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:3919:quintet_composer_v7_final.html:326:                                addNote(divisions * 1.5, divisions * 0.5, velocity);
quintet-rhythm-analysis.txt:3920:quintet_composer_v7_final.html:327:                                addNote(divisions * 2, divisions * 2, velocity);
quintet-rhythm-analysis.txt:3921:quintet_composer_v7_final.html:334:                        notes: notes
quintet-rhythm-analysis.txt:3922:quintet_composer_v7_final.html:338:                    document.getElementById(instrumentNames[inst].toLowerCase() + '-count').textContent = notes.length;
quintet-rhythm-analysis.txt:3923:quintet_composer_v7_final.html:349:                    composition.instruments.reduce(function(sum, inst) { return sum + inst.notes.length; }, 0) + 
quintet-rhythm-analysis.txt:3924:quintet_composer_v7_final.html:350:                    ' total notes';
quintet-rhythm-analysis.txt:3925:quintet_composer_v7_final.html:419:                    // Sort notes by start time
quintet-rhythm-analysis.txt:3926:quintet_composer_v7_final.html:420:                    var sortedNotes = instrument.notes.slice().sort(function(a, b) {
quintet-rhythm-analysis.txt:3927:quintet_composer_v7_final.html:424:                    // Write notes
quintet-rhythm-analysis.txt:3928:quintet_composer_v7_final.html:426:                    for (var n = 0; n < sortedNotes.length; n++) {
quintet-rhythm-analysis.txt:3929:quintet_composer_v7_final.html:427:                        var note = sortedNotes[n];
quintet-rhythm-analysis.txt:3930:quintet_composer_v7_final.html:428:                        var startTick = Math.round(note.start * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:3931:quintet_composer_v7_final.html:429:                        var duration = Math.round(note.duration * ticksPerQuarter / 4);
quintet-rhythm-analysis.txt:3932:quintet_composer_v7_final.html:431:                        // Note on
quintet-rhythm-analysis.txt:3933:quintet_composer_v7_final.html:434:                        track.push(0x90 + i); // Note on
quintet-rhythm-analysis.txt:3934:quintet_composer_v7_final.html:435:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet-rhythm-analysis.txt:3935:quintet_composer_v7_final.html:436:                        track.push(Math.max(1, Math.min(127, note.velocity)));
quintet-rhythm-analysis.txt:3936:quintet_composer_v7_final.html:438:                        // Note off
quintet-rhythm-analysis.txt:3937:quintet_composer_v7_final.html:440:                        track.push(0x80 + i); // Note off
quintet-rhythm-analysis.txt:3938:quintet_composer_v7_final.html:441:                        track.push(Math.max(0, Math.min(127, note.pitch)));
quintet-rhythm-analysis.txt:3939:quintet_composer_v7_final.html:486:                var divisions = 4; // 4 divisions per quarter note
quintet-rhythm-analysis.txt:3940:quintet_composer_v7_final.html:542:                        // Get notes for this measure
quintet-rhythm-analysis.txt:3941:quintet_composer_v7_final.html:543:                        var measureNotes = instrument.notes.filter(function(n) {
quintet-rhythm-analysis.txt:3942:quintet_composer_v7_final.html:548:                        measureNotes.sort(function(a, b) {
quintet-rhythm-analysis.txt:3943:quintet_composer_v7_final.html:556:                        for (var n = 0; n < measureNotes.length; n++) {
quintet-rhythm-analysis.txt:3944:quintet_composer_v7_final.html:557:                            var note = measureNotes[n];
quintet-rhythm-analysis.txt:3945:quintet_composer_v7_final.html:558:                            var noteStart = note.start - (m * divisions * 4);
quintet-rhythm-analysis.txt:3946:quintet_composer_v7_final.html:560:                            // Add rest if there's a gap
quintet-rhythm-analysis.txt:3947:quintet_composer_v7_final.html:561:                            if (noteStart > currentBeat) {
quintet-rhythm-analysis.txt:3948:quintet_composer_v7_final.html:562:                                var restDuration = noteStart - currentBeat;
quintet-rhythm-analysis.txt:3949:quintet_composer_v7_final.html:563:                                xml += '      <note>\n';
quintet-rhythm-analysis.txt:3950:quintet_composer_v7_final.html:564:                                xml += '        <rest/>\n';
quintet-rhythm-analysis.txt:3951:quintet_composer_v7_final.html:565:                                xml += '        <duration>' + restDuration + '</duration>\n';
quintet-rhythm-analysis.txt:3952:quintet_composer_v7_final.html:566:                                xml += '      </note>\n';
quintet-rhythm-analysis.txt:3953:quintet_composer_v7_final.html:569:                            // Add the note
quintet-rhythm-analysis.txt:3954:quintet_composer_v7_final.html:570:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:3955:quintet_composer_v7_final.html:572:                            // Convert MIDI pitch to note name
quintet-rhythm-analysis.txt:3956:quintet_composer_v7_final.html:574:                            var noteName = pitchNames[note.pitch % 12];
quintet-rhythm-analysis.txt:3957:quintet_composer_v7_final.html:575:                            var octave = Math.floor(note.pitch / 12) - 1;
quintet-rhythm-analysis.txt:3958:quintet_composer_v7_final.html:576:                            var alter = noteName.includes('#') ? 1 : 0;
quintet-rhythm-analysis.txt:3959:quintet_composer_v7_final.html:577:                            var step = noteName.replace('#', '');
quintet-rhythm-analysis.txt:3960:quintet_composer_v7_final.html:587:                            var duration = Math.max(1, note.duration);
quintet-rhythm-analysis.txt:3961:quintet_composer_v7_final.html:590:                            // Determine note type
quintet-rhythm-analysis.txt:3962:quintet_composer_v7_final.html:612:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:3963:quintet_composer_v7_final.html:614:                            currentBeat = noteStart + note.duration;
quintet-rhythm-analysis.txt:3964:quintet_composer_v7_final.html:617:                        // Fill rest of measure if needed
quintet-rhythm-analysis.txt:3965:quintet_composer_v7_final.html:619:                            var finalRest = measureDuration - currentBeat;
quintet-rhythm-analysis.txt:3966:quintet_composer_v7_final.html:620:                            xml += '      <note>\n';
quintet-rhythm-analysis.txt:3967:quintet_composer_v7_final.html:621:                            xml += '        <rest/>\n';
quintet-rhythm-analysis.txt:3968:quintet_composer_v7_final.html:622:                            xml += '        <duration>' + finalRest + '</duration>\n';
quintet-rhythm-analysis.txt:3969:quintet_composer_v7_final.html:623:                            xml += '      </note>\n';
quintet-rhythm-analysis.txt:4017:quintet_v62_real_music.html:741:            // BULLETPROOF: Get key notes
quintet-rhythm-analysis.txt:4022:quintet_v62_real_music.html:769:            // BULLETPROOF: Convert note number to name
quintet-rhythm-analysis.txt:4026:quintet_v62_real_music.html:775:            // BULLETPROOF: Convert note name to number
quintet-rhythm-analysis.txt:4035:quintet_v62_real_music.html:880:            // BULLETPROOF: Convert note to XML
quintet-rhythm-analysis.txt:4059:quintet_v62_real_music.html:942:            // BULLETPROOF: Duration to note type
quintet-rhythm-analysis.txt:4157:bulletproof_integrated.html:106:        function generateMusic() {
quintet-rhythm-analysis.txt:4158:bulletproof_integrated.html:141:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4165:quintet_composer_v14_WORKING_BASE.html:228:        function generateComposition() {
quintet-rhythm-analysis.txt:4166:quintet_composer_v14_WORKING_BASE.html:477:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4177:quintet_composer_v20_CORRECT_RANGES.html:396:    function generateBulletproof() {
quintet-rhythm-analysis.txt:4187:quintet_composer_v26_WORKING_BASE.html:359:        function generateNoteXML(midi, duration, noteType, isChord = false, articulation = null) {
quintet-rhythm-analysis.txt:4188:quintet_composer_v26_WORKING_BASE.html:392:        function generateMeasureContent(instrumentName, measureNum) {
quintet-rhythm-analysis.txt:4189:quintet_composer_v26_WORKING_BASE.html:516:        function generatePart(instrumentName, partId, measureCount) {
quintet-rhythm-analysis.txt:4190:quintet_composer_v26_WORKING_BASE.html:587:        function generateComposition() {
quintet-rhythm-analysis.txt:4207:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:294:        function generateNotesWithFailsafe(instrumentName, measureNum, chord, complexity) {
quintet-rhythm-analysis.txt:4208:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:339:        function generateSimpleNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:4209:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:359:        function generateModerateNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:4210:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:386:        function generateAdvancedNotes(instrumentName, chord) {
quintet-rhythm-analysis.txt:4211:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:424:        function generateMusicXML() {
quintet-rhythm-analysis.txt:4212:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:558:        function generateComposition() {
quintet-rhythm-analysis.txt:4213:quintet_composer_v31_BULLETPROOF_FAILSAFE.html:574:        function downloadMusicXML(xmlContent) {
quintet-rhythm-analysis.txt:4220:quintet_composer_v40_WORKING.html:229:        function generateMusicXML() {
quintet-rhythm-analysis.txt:4221:quintet_composer_v40_WORKING.html:367:        function generateNotesForStyle(instrument, measureNum) {
quintet-rhythm-analysis.txt:4235:quintet_composer_v56_FINAL.html:237:        function generateComposition() {
quintet-rhythm-analysis.txt:4236:quintet_composer_v56_FINAL.html:280:        function generateProgression(measures, key, style) {
quintet-rhythm-analysis.txt:4237:quintet_composer_v56_FINAL.html:302:        function generateChord(degree, key) {
quintet-rhythm-analysis.txt:4238:quintet_composer_v56_FINAL.html:330:        function generateGuitarPart(progression, style, key) {
quintet-rhythm-analysis.txt:4239:quintet_composer_v56_FINAL.html:408:        function generateViolin1Part(progression, key, complexity) {
quintet-rhythm-analysis.txt:4240:quintet_composer_v56_FINAL.html:455:        function generateViolin2Part(progression, key) {
quintet-rhythm-analysis.txt:4241:quintet_composer_v56_FINAL.html:479:        function generateViolaPart(progression, key) {
quintet-rhythm-analysis.txt:4242:quintet_composer_v56_FINAL.html:506:        function generateCelloPart(progression, key) {
quintet-rhythm-analysis.txt:4243:quintet_composer_v56_FINAL.html:644:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4244:quintet_composer_v56_FINAL.html:659:        function generateMusicXML(comp) {
quintet-rhythm-analysis.txt:4245:quintet_composer_v57_BULLETPROOF.html:228:        function generateComposition() {
quintet-rhythm-analysis.txt:4246:quintet_composer_v57_BULLETPROOF.html:278:        function generateProgression(measures, key, style) {
quintet-rhythm-analysis.txt:4247:quintet_composer_v57_BULLETPROOF.html:297:        function generateChord(degree, key) {
quintet-rhythm-analysis.txt:4248:quintet_composer_v57_BULLETPROOF.html:311:        function generateGuitarPart(progression, style, key) {
quintet-rhythm-analysis.txt:4249:quintet_composer_v57_BULLETPROOF.html:370:        function generateViolin1Part(progression, key, stopsPercent) {
quintet-rhythm-analysis.txt:4250:quintet_composer_v57_BULLETPROOF.html:406:        function generateViolin2Part(progression, key, stopsPercent) {
quintet-rhythm-analysis.txt:4251:quintet_composer_v57_BULLETPROOF.html:433:        function generateViolaPart(progression, key, stopsPercent) {
quintet-rhythm-analysis.txt:4252:quintet_composer_v57_BULLETPROOF.html:462:        function generateCelloPart(progression, key, stopsPercent) {
quintet-rhythm-analysis.txt:4253:quintet_composer_v57_BULLETPROOF.html:619:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4254:quintet_composer_v57_BULLETPROOF.html:639:        function generateMusicXML(comp) {
quintet-rhythm-analysis.txt:4281:quintet_composer_v59_BULLETPROOF.html:273:        function generateMelody(chords, keyData, measures) {
quintet-rhythm-analysis.txt:4282:quintet_composer_v59_BULLETPROOF.html:343:        function generateHarmony(chords, instrument, measures) {
quintet-rhythm-analysis.txt:4283:quintet_composer_v59_BULLETPROOF.html:400:        function generateGuitarPart(chords, style, measures) {
quintet-rhythm-analysis.txt:4284:quintet_composer_v59_BULLETPROOF.html:439:        function generateComposition() {
quintet-rhythm-analysis.txt:4285:quintet_composer_v59_BULLETPROOF.html:656:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4286:quintet_composer_v59_BULLETPROOF_RESTORED.html:230:        function generateComposition() {
quintet-rhythm-analysis.txt:4287:quintet_composer_v59_BULLETPROOF_RESTORED.html:291:        function generateProgression(style, measures) {
quintet-rhythm-analysis.txt:4288:quintet_composer_v59_BULLETPROOF_RESTORED.html:303:        function generateGuitarPart(progression, key, pattern) {
quintet-rhythm-analysis.txt:4289:quintet_composer_v59_BULLETPROOF_RESTORED.html:350:        function generateMelodyPart(progression, key, instrument, multipleStopsPercent) {
quintet-rhythm-analysis.txt:4290:quintet_composer_v59_BULLETPROOF_RESTORED.html:405:        function generateHarmonyPart(progression, key, instrument, multipleStopsPercent) {
quintet-rhythm-analysis.txt:4291:quintet_composer_v59_BULLETPROOF_RESTORED.html:446:        function generateBassLine(progression, key, multipleStopsPercent) {
quintet-rhythm-analysis.txt:4292:quintet_composer_v59_BULLETPROOF_RESTORED.html:575:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4293:quintet_composer_v60_ACTUALLY_WORKING.html:328:        function generateComposition() {
quintet-rhythm-analysis.txt:4294:quintet_composer_v60_ACTUALLY_WORKING.html:378:        function generateProgression(style, measures, key) {
quintet-rhythm-analysis.txt:4295:quintet_composer_v60_ACTUALLY_WORKING.html:400:        function generateGuitarPart(progression, key, pattern) {
quintet-rhythm-analysis.txt:4296:quintet_composer_v60_ACTUALLY_WORKING.html:473:        function generateViolinIPart(progression, key, complexity) {
quintet-rhythm-analysis.txt:4297:quintet_composer_v60_ACTUALLY_WORKING.html:520:        function generateViolinIIPart(progression, key) {
quintet-rhythm-analysis.txt:4298:quintet_composer_v60_ACTUALLY_WORKING.html:562:        function generateViolaPart(progression, key) {
quintet-rhythm-analysis.txt:4299:quintet_composer_v60_ACTUALLY_WORKING.html:590:        function generateCelloPart(progression, key) {
quintet-rhythm-analysis.txt:4300:quintet_composer_v60_ACTUALLY_WORKING.html:732:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4324:quintet_composer_v7_final.html:228:        function generateComposition() {
quintet-rhythm-analysis.txt:4325:quintet_composer_v7_final.html:477:        function exportMusicXML() {
quintet-rhythm-analysis.txt:4341:=== WORKING EXAMPLES === 
INTEGRATION_NOTES.md:1:# Bulletproof Integration Notes
INTEGRATION_NOTES.md:4:- Created `bulletproof_integrated.html` with working exports
INTEGRATION_NOTES.md:12:- `bulletproof_integrated.html` - NEW working version with fixed exports
INTEGRATION_NOTES.md:15:## Features Added in Bulletproof Version
INTEGRATION_NOTES.md:16:- Working MusicXML export (all measures, all instruments)
INTEGRATION_NOTES.md:17:- Working MIDI export (5 tracks with correct instruments)  
INTEGRATION_NOTES.md:23:1. Test: `start bulletproof_integrated.html`
=== DOCUMENTATION === 
 
README.md contents: 
# GML-Quintet Composer V1.0

Combine Electric Guitar with String Quartet for 5-Part Compositions

## Features
- Generates or loads guitar parts (compatible with RiffGen)
- Generates or loads string quartet parts (compatible with Quartet Engine)
- Intelligent combination with collision detection
- Guitar octave adjustment for optimal range placement
- Real-time playback of combined quintet
- MusicXML export with all 5 parts

## How to Use
1. Generate or load guitar part
2. Generate or load string quartet
3. Adjust guitar octave if needed
4. Choose collision handling mode
5. Combine into quintet
6. Play or export to MusicXML

## Version History
- V1.0: Initial release - Simple combiner with basic collision detection

## Roadmap
- V1.5: Import actual MusicXML files from RiffGen/Quartet
- V2.0: Intelligent harmony (strings respond to guitar chords)
- V3.0: Full compositional AI with call-and-response

## Integration
Works with:
- [RiffGen](https://github.com/mikeb55/gml-riffgen) - Guitar riff generator
- [Quartet Engine](https://github.com/mikeb55/gml-quartet) - String quartet generator

Part of the GML (Generative Music Lab) ecosystem
 
